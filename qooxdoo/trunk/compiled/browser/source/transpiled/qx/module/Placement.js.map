{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "_getAxis",
    "mode",
    "util",
    "placement",
    "KeepAlignAxis",
    "BestFitAxis",
    "DirectAxis",
    "_computePlacement",
    "axes",
    "size",
    "area",
    "target",
    "offsets",
    "position",
    "left",
    "x",
    "computeStart",
    "width",
    "start",
    "end",
    "right",
    "top",
    "y",
    "height",
    "bottom",
    "_getPositionX",
    "edge",
    "align",
    "_getPositionY",
    "members",
    "placeTo",
    "modeX",
    "modeY",
    "qxWeb",
    "visible",
    "isRendered",
    "offsetWidth",
    "offsetHeight",
    "displayStyleValue",
    "visibilityStyleValue",
    "style",
    "display",
    "visibility",
    "setStyles",
    "module",
    "Placement",
    "getWidth",
    "getHeight",
    "parent",
    "getParents",
    "split",
    "newPosition",
    "targetLocation",
    "parentPositioning",
    "getStyle",
    "getOffset",
    "targetPos",
    "getPosition",
    "newLocation",
    "length",
    "offset",
    "borderTop",
    "parseInt",
    "borderLeft",
    "defer",
    "$attachAll"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/module/Placement.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * The Placement module provides a convenient way to align two elements relative\n * to each other using various pre-defined algorithms.\n *\n * @require(qx.util.placement.KeepAlignAxis#computeStart)\n * @require(qx.util.placement.BestFitAxis#computeStart)\n * @require(qx.util.placement.DirectAxis#computeStart)\n */\nqx.Bootstrap.define(\"qx.module.Placement\", {\n  statics: {\n    /**\n     * Returns the appropriate axis implementation for the given placement\n     * mode\n     *\n     * @param mode {String} Placement mode\n     * @return {Object} Placement axis class\n     */\n    _getAxis(mode) {\n      switch (mode) {\n        case \"keep-align\":\n          return qx.util.placement.KeepAlignAxis;\n\n        case \"best-fit\":\n          return qx.util.placement.BestFitAxis;\n\n        case \"direct\":\n        default:\n          return qx.util.placement.DirectAxis;\n      }\n    },\n\n    /**\n     * Returns the computed coordinates for the element to be placed\n     *\n     * @param axes {Map} Map with the keys <code>x</code> and <code>y</code>. Values\n     * are the axis implementations\n     * @param size {Map} Map with the keys <code>width</code> and <code>height</code>\n     * containing the size of the placement target\n     * @param area {Map} Map with the keys <code>width</code> and <code>height</code>\n     * containing the size of the two elements' common parent (available space for\n     * placement)\n     * @param target {Map} Location of the object to align the object to. This map\n     * should have the keys <code>left</code>, <code>top</code>, <code>right</code>\n     * and <code>bottom</code>\n     * @param offsets {Map} Map of offsets (top, right, bottom, left)\n     * @param position {Map} Map with the keys <code>x</code> and <code>y</code>,\n     * containing the type of positioning for each axis\n     * @return {Map} Map with the keys <code>left</code> and <code>top</code>\n     * containing the computed coordinates to which the element should be moved\n     */\n    _computePlacement(axes, size, area, target, offsets, position) {\n      var left = axes.x.computeStart(\n        size.width,\n        { start: target.left, end: target.right },\n        { start: offsets.left, end: offsets.right },\n        area.width,\n        position.x\n      );\n\n      var top = axes.y.computeStart(\n        size.height,\n        { start: target.top, end: target.bottom },\n        { start: offsets.top, end: offsets.bottom },\n        area.height,\n        position.y\n      );\n\n      return {\n        left: left,\n        top: top\n      };\n    },\n\n    /**\n     * Returns the X axis positioning type for the given edge and alignment\n     * values\n     *\n     * @param edge {String} edge value\n     * @param align {String} align value\n     * @return {String} X positioning type\n     */\n    _getPositionX(edge, align) {\n      if (edge == \"left\") {\n        return \"edge-start\";\n      } else if (edge == \"right\") {\n        return \"edge-end\";\n      } else if (align == \"left\") {\n        return \"align-start\";\n      } else if (align == \"center\") {\n        return \"align-center\";\n      } else if (align == \"right\") {\n        return \"align-end\";\n      }\n    },\n\n    /**\n     * Returns the Y axis positioning type for the given edge and alignment\n     * values\n     *\n     * @param edge {String} edge value\n     * @param align {String} align value\n     * @return {String} Y positioning type\n     */\n    _getPositionY(edge, align) {\n      if (edge == \"top\") {\n        return \"edge-start\";\n      } else if (edge == \"bottom\") {\n        return \"edge-end\";\n      } else if (align == \"top\") {\n        return \"align-start\";\n      } else if (align == \"middle\") {\n        return \"align-center\";\n      } else if (align == \"bottom\") {\n        return \"align-end\";\n      }\n    }\n  },\n\n  members: {\n    /**\n     * Moves the first element in the collection, aligning it with the given\n     * target.\n     *\n     * <div>\n     * <strong>NOTE:</strong> The <code>placeTo</code> method also works for hidden\n     * elements. However, the visibility / display styles are only manipulated during\n     * the placement operation. As a result a previously hidden element <strong>stays hidden</strong>\n     * </div>\n     *\n     * <div>\n     * <strong>NOTE:</strong> If the target is changing its position due e.g. a DOM manipulation the\n     * placed element <strong>is not</strong> updated automatically. You have to call <code>placeTo</code>\n     * again to place the element to the target. The element is <strong>always</strong> positioned by using\n     * <code>position:absolute</code> independently on the chosen <code>position</code> and <code>mode</code>.\n     * </div>\n     *\n     * @attach{qxWeb}\n     * @param target {Element} Placement target\n     * @param position {String} Alignment of the object with the target, any of\n     * <code>\"top-left\"</code>, <code>\"top-center\"</code>, <code>\"top-right\"</code>,\n     * <code>\"bottom-left\"</code>, <code>\"bottom-center\"</code>, <code>\"bottom-right\"</code>,\n     * <code>\"left-top\"</code>, <code>\"left-middle\"</code>, <code>\"left-bottom\"</code>,\n     * <code>\"right-top\"</code>, <code>\"right-middle\"</code>, <code>\"right-bottom\"</code>\n     * @param offsets {Map?null} Map with the desired offsets between the two elements.\n     * Must contain the keys <code>left</code>, <code>top</code>,\n     * <code>right</code> and <code>bottom</code>\n     * @param modeX {String?\"direct\"} Horizontal placement mode. Valid values are:\n     *   <ul>\n     *   <li><code>direct</code>: place the element directly at the given\n     *   location.</li>\n     *   <li><code>keep-align</code>: if the element is partially outside of the\n     *   visible area, it is moved to the best fitting 'edge' and 'alignment' of\n     *   the target.\n     *   It is guaranteed the the new position attaches the object to one of the\n     *   target edges and that it is aligned with a target edge.</li>\n     *   <li><code>best-fit</code>: If the element is partially outside of the visible\n     *   area, it is moved into the view port, ignoring any offset and position\n     *   values.</li>\n     *   </ul>\n     * @param modeY {String?\"direct\"} Vertical placement mode. Accepts the same values as\n     *   the 'modeX' argument.\n     * @return {qxWeb} The collection for chaining\n     */\n    placeTo(target, position, offsets, modeX, modeY) {\n      if (!this[0] || !target) {\n        return this;\n      }\n\n      target = qxWeb(target);\n\n      // make sure the DOM elements are rendered so we can get the size of them.\n      // It's not necessary to move them out of the viewport - just out of the\n      // layout flow.\n      var visible =\n        this.isRendered() &&\n        this[0].offsetWidth > 0 &&\n        this[0].offsetHeight > 0;\n      var displayStyleValue = null;\n      var visibilityStyleValue = null;\n      if (!visible) {\n        // do not use the computed style value otherwise we will mess up the styles\n        // when resetting them, since these styles might also be set via a CSS class.\n        displayStyleValue = this[0].style.display;\n        visibilityStyleValue = this[0].style.visibility;\n        this.setStyles({\n          position: \"absolute\",\n          visibility: \"hidden\",\n          display: \"block\"\n        });\n      }\n\n      var axes = {\n        x: qx.module.Placement._getAxis(modeX),\n        y: qx.module.Placement._getAxis(modeY)\n      };\n\n      var size = {\n        width: this.getWidth(),\n        height: this.getHeight()\n      };\n\n      var parent = this.getParents();\n      var area = {\n        width: parent.getWidth(),\n        height: parent.getHeight()\n      };\n\n      offsets = offsets || {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      };\n\n      var split = position.split(\"-\");\n      var edge = split[0];\n      var align = split[1];\n\n      var newPosition = {\n        x: qx.module.Placement._getPositionX(edge, align),\n        y: qx.module.Placement._getPositionY(edge, align)\n      };\n\n      var targetLocation;\n      var parentPositioning = parent.getStyle(\"position\");\n      if (parentPositioning == \"relative\" || parentPositioning == \"static\") {\n        targetLocation = target.getOffset();\n      } else {\n        var targetPos = target.getPosition();\n        targetLocation = {\n          top: targetPos.top,\n          bottom: targetPos.top + target.getHeight(),\n          left: targetPos.left,\n          right: targetPos.left + target.getWidth()\n        };\n      }\n\n      var newLocation = qx.module.Placement._computePlacement(\n        axes,\n        size,\n        area,\n        targetLocation,\n        offsets,\n        newPosition\n      );\n\n      while (parent.length > 0) {\n        if (parent.getStyle(\"position\") == \"relative\") {\n          var offset = parent.getOffset();\n          var borderTop = parseInt(parent.getStyle(\"border-top-width\")) || 0;\n          var borderLeft = parseInt(parent.getStyle(\"border-left-width\")) || 0;\n          newLocation.left -= offset.left + borderLeft;\n          newLocation.top -= offset.top + borderTop;\n          parent = [];\n        } else {\n          parent = parent.getParents();\n        }\n      }\n\n      // Reset the styles to hide the element if it was previously hidden\n      if (!visible) {\n        this[0].style.display = displayStyleValue;\n        this[0].style.visibility = visibilityStyleValue;\n      }\n\n      this.setStyles({\n        position: \"absolute\",\n        left: newLocation.left + \"px\",\n        top: newLocation.top + \"px\"\n      });\n\n      return this;\n    }\n  },\n\n  defer(statics) {\n    qxWeb.$attachAll(this);\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAH,CAAaG,MAAb,CAAoB,qBAApB,EAA2C;IACzCC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,QAAQ,CAACC,IAAD,EAAO;QACb,QAAQA,IAAR;UACE,KAAK,YAAL;YACE,OAAOP,EAAE,CAACQ,IAAH,CAAQC,SAAR,CAAkBC,aAAzB;;UAEF,KAAK,UAAL;YACE,OAAOV,EAAE,CAACQ,IAAH,CAAQC,SAAR,CAAkBE,WAAzB;;UAEF,KAAK,QAAL;UACA;YACE,OAAOX,EAAE,CAACQ,IAAH,CAAQC,SAAR,CAAkBG,UAAzB;QATJ;MAWD,CApBM;;MAsBP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,iBAAiB,CAACC,IAAD,EAAOC,IAAP,EAAaC,IAAb,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAoCC,QAApC,EAA8C;QAC7D,IAAIC,IAAI,GAAGN,IAAI,CAACO,CAAL,CAAOC,YAAP,CACTP,IAAI,CAACQ,KADI,EAET;UAAEC,KAAK,EAAEP,MAAM,CAACG,IAAhB;UAAsBK,GAAG,EAAER,MAAM,CAACS;QAAlC,CAFS,EAGT;UAAEF,KAAK,EAAEN,OAAO,CAACE,IAAjB;UAAuBK,GAAG,EAAEP,OAAO,CAACQ;QAApC,CAHS,EAITV,IAAI,CAACO,KAJI,EAKTJ,QAAQ,CAACE,CALA,CAAX;QAQA,IAAIM,GAAG,GAAGb,IAAI,CAACc,CAAL,CAAON,YAAP,CACRP,IAAI,CAACc,MADG,EAER;UAAEL,KAAK,EAAEP,MAAM,CAACU,GAAhB;UAAqBF,GAAG,EAAER,MAAM,CAACa;QAAjC,CAFQ,EAGR;UAAEN,KAAK,EAAEN,OAAO,CAACS,GAAjB;UAAsBF,GAAG,EAAEP,OAAO,CAACY;QAAnC,CAHQ,EAIRd,IAAI,CAACa,MAJG,EAKRV,QAAQ,CAACS,CALD,CAAV;QAQA,OAAO;UACLR,IAAI,EAAEA,IADD;UAELO,GAAG,EAAEA;QAFA,CAAP;MAID,CA9DM;;MAgEP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACII,aAAa,CAACC,IAAD,EAAOC,KAAP,EAAc;QACzB,IAAID,IAAI,IAAI,MAAZ,EAAoB;UAClB,OAAO,YAAP;QACD,CAFD,MAEO,IAAIA,IAAI,IAAI,OAAZ,EAAqB;UAC1B,OAAO,UAAP;QACD,CAFM,MAEA,IAAIC,KAAK,IAAI,MAAb,EAAqB;UAC1B,OAAO,aAAP;QACD,CAFM,MAEA,IAAIA,KAAK,IAAI,QAAb,EAAuB;UAC5B,OAAO,cAAP;QACD,CAFM,MAEA,IAAIA,KAAK,IAAI,OAAb,EAAsB;UAC3B,OAAO,WAAP;QACD;MACF,CApFM;;MAsFP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,aAAa,CAACF,IAAD,EAAOC,KAAP,EAAc;QACzB,IAAID,IAAI,IAAI,KAAZ,EAAmB;UACjB,OAAO,YAAP;QACD,CAFD,MAEO,IAAIA,IAAI,IAAI,QAAZ,EAAsB;UAC3B,OAAO,UAAP;QACD,CAFM,MAEA,IAAIC,KAAK,IAAI,KAAb,EAAoB;UACzB,OAAO,aAAP;QACD,CAFM,MAEA,IAAIA,KAAK,IAAI,QAAb,EAAuB;UAC5B,OAAO,cAAP;QACD,CAFM,MAEA,IAAIA,KAAK,IAAI,QAAb,EAAuB;UAC5B,OAAO,WAAP;QACD;MACF;;IA1GM,CADgC;IA8GzCE,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,OAAO,CAACnB,MAAD,EAASE,QAAT,EAAmBD,OAAnB,EAA4BmB,KAA5B,EAAmCC,KAAnC,EAA0C;QAC/C,IAAI,CAAC,KAAK,CAAL,CAAD,IAAY,CAACrB,MAAjB,EAAyB;UACvB,OAAO,IAAP;QACD;;QAEDA,MAAM,GAAGsB,KAAK,CAACtB,MAAD,CAAd,CAL+C,CAO/C;QACA;QACA;;QACA,IAAIuB,OAAO,GACT,KAAKC,UAAL,MACA,KAAK,CAAL,EAAQC,WAAR,GAAsB,CADtB,IAEA,KAAK,CAAL,EAAQC,YAAR,GAAuB,CAHzB;QAIA,IAAIC,iBAAiB,GAAG,IAAxB;QACA,IAAIC,oBAAoB,GAAG,IAA3B;;QACA,IAAI,CAACL,OAAL,EAAc;UACZ;UACA;UACAI,iBAAiB,GAAG,KAAK,CAAL,EAAQE,KAAR,CAAcC,OAAlC;UACAF,oBAAoB,GAAG,KAAK,CAAL,EAAQC,KAAR,CAAcE,UAArC;UACA,KAAKC,SAAL,CAAe;YACb9B,QAAQ,EAAE,UADG;YAEb6B,UAAU,EAAE,QAFC;YAGbD,OAAO,EAAE;UAHI,CAAf;QAKD;;QAED,IAAIjC,IAAI,GAAG;UACTO,CAAC,EAAErB,EAAE,CAACkD,MAAH,CAAUC,SAAV,CAAoB7C,QAApB,CAA6B+B,KAA7B,CADM;UAETT,CAAC,EAAE5B,EAAE,CAACkD,MAAH,CAAUC,SAAV,CAAoB7C,QAApB,CAA6BgC,KAA7B;QAFM,CAAX;QAKA,IAAIvB,IAAI,GAAG;UACTQ,KAAK,EAAE,KAAK6B,QAAL,EADE;UAETvB,MAAM,EAAE,KAAKwB,SAAL;QAFC,CAAX;QAKA,IAAIC,MAAM,GAAG,KAAKC,UAAL,EAAb;QACA,IAAIvC,IAAI,GAAG;UACTO,KAAK,EAAE+B,MAAM,CAACF,QAAP,EADE;UAETvB,MAAM,EAAEyB,MAAM,CAACD,SAAP;QAFC,CAAX;QAKAnC,OAAO,GAAGA,OAAO,IAAI;UACnBS,GAAG,EAAE,CADc;UAEnBD,KAAK,EAAE,CAFY;UAGnBI,MAAM,EAAE,CAHW;UAInBV,IAAI,EAAE;QAJa,CAArB;QAOA,IAAIoC,KAAK,GAAGrC,QAAQ,CAACqC,KAAT,CAAe,GAAf,CAAZ;QACA,IAAIxB,IAAI,GAAGwB,KAAK,CAAC,CAAD,CAAhB;QACA,IAAIvB,KAAK,GAAGuB,KAAK,CAAC,CAAD,CAAjB;QAEA,IAAIC,WAAW,GAAG;UAChBpC,CAAC,EAAErB,EAAE,CAACkD,MAAH,CAAUC,SAAV,CAAoBpB,aAApB,CAAkCC,IAAlC,EAAwCC,KAAxC,CADa;UAEhBL,CAAC,EAAE5B,EAAE,CAACkD,MAAH,CAAUC,SAAV,CAAoBjB,aAApB,CAAkCF,IAAlC,EAAwCC,KAAxC;QAFa,CAAlB;QAKA,IAAIyB,cAAJ;QACA,IAAIC,iBAAiB,GAAGL,MAAM,CAACM,QAAP,CAAgB,UAAhB,CAAxB;;QACA,IAAID,iBAAiB,IAAI,UAArB,IAAmCA,iBAAiB,IAAI,QAA5D,EAAsE;UACpED,cAAc,GAAGzC,MAAM,CAAC4C,SAAP,EAAjB;QACD,CAFD,MAEO;UACL,IAAIC,SAAS,GAAG7C,MAAM,CAAC8C,WAAP,EAAhB;UACAL,cAAc,GAAG;YACf/B,GAAG,EAAEmC,SAAS,CAACnC,GADA;YAEfG,MAAM,EAAEgC,SAAS,CAACnC,GAAV,GAAgBV,MAAM,CAACoC,SAAP,EAFT;YAGfjC,IAAI,EAAE0C,SAAS,CAAC1C,IAHD;YAIfM,KAAK,EAAEoC,SAAS,CAAC1C,IAAV,GAAiBH,MAAM,CAACmC,QAAP;UAJT,CAAjB;QAMD;;QAED,IAAIY,WAAW,GAAGhE,EAAE,CAACkD,MAAH,CAAUC,SAAV,CAAoBtC,iBAApB,CAChBC,IADgB,EAEhBC,IAFgB,EAGhBC,IAHgB,EAIhB0C,cAJgB,EAKhBxC,OALgB,EAMhBuC,WANgB,CAAlB;;QASA,OAAOH,MAAM,CAACW,MAAP,GAAgB,CAAvB,EAA0B;UACxB,IAAIX,MAAM,CAACM,QAAP,CAAgB,UAAhB,KAA+B,UAAnC,EAA+C;YAC7C,IAAIM,MAAM,GAAGZ,MAAM,CAACO,SAAP,EAAb;YACA,IAAIM,SAAS,GAAGC,QAAQ,CAACd,MAAM,CAACM,QAAP,CAAgB,kBAAhB,CAAD,CAAR,IAAiD,CAAjE;YACA,IAAIS,UAAU,GAAGD,QAAQ,CAACd,MAAM,CAACM,QAAP,CAAgB,mBAAhB,CAAD,CAAR,IAAkD,CAAnE;YACAI,WAAW,CAAC5C,IAAZ,IAAoB8C,MAAM,CAAC9C,IAAP,GAAciD,UAAlC;YACAL,WAAW,CAACrC,GAAZ,IAAmBuC,MAAM,CAACvC,GAAP,GAAawC,SAAhC;YACAb,MAAM,GAAG,EAAT;UACD,CAPD,MAOO;YACLA,MAAM,GAAGA,MAAM,CAACC,UAAP,EAAT;UACD;QACF,CA9F8C,CAgG/C;;;QACA,IAAI,CAACf,OAAL,EAAc;UACZ,KAAK,CAAL,EAAQM,KAAR,CAAcC,OAAd,GAAwBH,iBAAxB;UACA,KAAK,CAAL,EAAQE,KAAR,CAAcE,UAAd,GAA2BH,oBAA3B;QACD;;QAED,KAAKI,SAAL,CAAe;UACb9B,QAAQ,EAAE,UADG;UAEbC,IAAI,EAAE4C,WAAW,CAAC5C,IAAZ,GAAmB,IAFZ;UAGbO,GAAG,EAAEqC,WAAW,CAACrC,GAAZ,GAAkB;QAHV,CAAf;QAMA,OAAO,IAAP;MACD;;IA1JM,CA9GgC;;IA2QzC2C,KAAK,CAACjE,OAAD,EAAU;MACbkC,KAAK,CAACgC,UAAN,CAAiB,IAAjB;IACD;;EA7QwC,CAA3C;EA1BAvE,EAAE,CAACkD,MAAH,CAAUC,SAAV,CAAoBhD,aAApB,GAAoCA,aAApC"
}