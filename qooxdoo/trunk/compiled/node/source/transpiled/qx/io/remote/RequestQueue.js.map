{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "implement",
    "IDisposable",
    "construct",
    "__queue",
    "__active",
    "__totalRequests",
    "__timer",
    "event",
    "Timer",
    "addListener",
    "_oninterval",
    "properties",
    "enabled",
    "init",
    "check",
    "apply",
    "maxTotalRequests",
    "nullable",
    "maxConcurrentRequests",
    "Environment",
    "get",
    "defaultTimeout",
    "members",
    "getRequestQueue",
    "getActiveQueue",
    "_debug",
    "vText",
    "length",
    "debug",
    "window",
    "status",
    "_check",
    "stop",
    "getEnabled",
    "isAsynchronous",
    "getMaxConcurrentRequests",
    "getMaxTotalRequests",
    "vRequest",
    "shift",
    "vTransport",
    "io",
    "remote",
    "Exchange",
    "push",
    "_onsending",
    "_onreceiving",
    "_oncompleted",
    "_start",
    "Date",
    "valueOf",
    "send",
    "_remove",
    "lang",
    "Array",
    "remove",
    "dispose",
    "__activeCount",
    "e",
    "getTarget",
    "_counted",
    "getRequest",
    "request",
    "requestHandler",
    "getType",
    "ex",
    "error",
    "Registration",
    "createEvent",
    "Event",
    "ex1",
    "vActive",
    "vCurrent",
    "vDefaultTimeout",
    "getDefaultTimeout",
    "vTimeout",
    "vTime",
    "i",
    "getTimeout",
    "warn",
    "toHashCode",
    "timeout",
    "_applyEnabled",
    "value",
    "old",
    "setEnabled",
    "add",
    "setState",
    "unshift",
    "start",
    "abort",
    "getTransport",
    "includes",
    "destruct",
    "_disposeArray",
    "_disposeObjects",
    "RequestQueue"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/io/remote/RequestQueue.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2006 Derrell Lipman\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Derrell Lipman (derrell)\n\n************************************************************************ */\n\n/**\n * Handles scheduling of requests to be sent to a server.\n *\n * This class is a singleton and is used by qx.io.remote.Request to schedule its\n * requests. It should not be used directly.\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n * @internal\n * @require(qx.bom.client.Transport)\n */\nqx.Class.define(\"qx.io.remote.RequestQueue\", {\n  type: \"singleton\",\n  extend: qx.core.Object,\n  implement: [qx.core.IDisposable],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n\n    this.__queue = [];\n    this.__active = [];\n\n    this.__totalRequests = 0;\n\n    // timeout handling\n    this.__timer = new qx.event.Timer(500);\n    this.__timer.addListener(\"interval\", this._oninterval, this);\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * Indicates whether queue is enabled or not.\n     */\n    enabled: {\n      init: true,\n      check: \"Boolean\",\n      apply: \"_applyEnabled\",\n    },\n\n    /**\n     * The maximum number of total requests.\n     */\n    maxTotalRequests: {\n      check: \"Integer\",\n      nullable: true,\n    },\n\n    /**\n     * Maximum number of parallel requests.\n     */\n    maxConcurrentRequests: {\n      check: \"Integer\",\n      init: qx.core.Environment.get(\"io.maxrequests\"),\n    },\n\n    /**\n     * Default timeout for remote requests in milliseconds.\n     */\n    defaultTimeout: {\n      check: \"Integer\",\n      init: 5000,\n    },\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __queue: null,\n    __active: null,\n    __totalRequests: null,\n    __timer: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      QUEUE HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Get a list of queued requests\n     *\n     * @return {qx.io.remote.Request[]} The list of queued requests\n     */\n    getRequestQueue() {\n      return this.__queue;\n    },\n\n    /**\n     * Get a list of active queued requests, each one wrapped in an instance of\n     * {@link qx.io.remote.Exchange}\n     *\n     * @return {qx.io.remote.Exchange[]} The list of active queued requests, each one\n     *   wrapped in an instance of {@link qx.io.remote.Exchange}\n     */\n    getActiveQueue() {\n      return this.__active;\n    },\n\n    /**\n     * Generates debug output\n     */\n    _debug() {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (qx.core.Environment.get(\"qx.debug.io.remote\")) {\n          // Debug output\n          var vText =\n            this.__active.length +\n            \"/\" +\n            (this.__queue.length + this.__active.length);\n\n          this.debug(\"Progress: \" + vText);\n          window.status = \"Request-Queue Progress: \" + vText;\n        }\n      }\n    },\n\n    /**\n     * Checks the queue if any request is left to send and uses the transport\n     * layer to send the open requests.\n     * This method calls itself until every request in the queue is send.\n     *\n     */\n    _check() {\n      // Debug output\n      this._debug();\n\n      // Check queues and stop timer if not needed anymore\n      if (this.__active.length == 0 && this.__queue.length == 0) {\n        this.__timer.stop();\n      }\n\n      // Checking if enabled\n      if (!this.getEnabled()) {\n        return;\n      }\n\n      // Checking active queue fill\n      if (\n        this.__queue.length == 0 ||\n        (this.__queue[0].isAsynchronous() &&\n          this.__active.length >= this.getMaxConcurrentRequests())\n      ) {\n        return;\n      }\n\n      // Checking number of total requests\n      if (\n        this.getMaxTotalRequests() != null &&\n        this.__totalRequests >= this.getMaxTotalRequests()\n      ) {\n        return;\n      }\n\n      var vRequest = this.__queue.shift();\n      var vTransport = new qx.io.remote.Exchange(vRequest);\n\n      // Increment counter\n      this.__totalRequests++;\n\n      // Add to active queue\n      this.__active.push(vTransport);\n\n      // Debug output\n      this._debug();\n\n      // Establish event connection between qx.io.remote.Exchange and me.\n      vTransport.addListener(\"sending\", this._onsending, this);\n      vTransport.addListener(\"receiving\", this._onreceiving, this);\n      vTransport.addListener(\"completed\", this._oncompleted, this);\n      vTransport.addListener(\"aborted\", this._oncompleted, this);\n      vTransport.addListener(\"timeout\", this._oncompleted, this);\n      vTransport.addListener(\"failed\", this._oncompleted, this);\n\n      // Store send timestamp\n      vTransport._start = new Date().valueOf();\n\n      // Send\n      vTransport.send();\n\n      // Retry\n      if (this.__queue.length > 0) {\n        this._check();\n      }\n    },\n\n    /**\n     * Removes a transport object from the active queue and disposes the\n     * transport object in order stop the request.\n     *\n     * @param vTransport {qx.io.remote.Exchange} Transport object\n     */\n    _remove(vTransport) {\n      // Remove from active transports\n      qx.lang.Array.remove(this.__active, vTransport);\n\n      // Dispose transport object\n      vTransport.dispose();\n\n      // Check again\n      this._check();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    __activeCount: 0,\n\n    /**\n     * Listens for the \"sending\" event of the transport object and increases\n     * the counter for active requests.\n     *\n     * @param e {qx.event.type.Event} event object\n     */\n    _onsending(e) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (qx.core.Environment.get(\"qx.debug.io.remote\")) {\n          this.__activeCount++;\n          e.getTarget()._counted = true;\n\n          this.debug(\"ActiveCount: \" + this.__activeCount);\n        }\n      }\n\n      e.getTarget().getRequest()._onsending(e);\n    },\n\n    /**\n     * Listens for the \"receiving\" event of the transport object and delegate\n     * the event to the current request object.\n     *\n     * @param e {qx.event.type.Event} event object\n     */\n    _onreceiving(e) {\n      e.getTarget().getRequest()._onreceiving(e);\n    },\n\n    /**\n     * Listens for the \"completed\" event of the transport object and decreases\n     * the counter for active requests.\n     *\n     * @param e {qx.event.type.Event} event object\n     */\n    _oncompleted(e) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (qx.core.Environment.get(\"qx.debug.io.remote\")) {\n          if (e.getTarget()._counted) {\n            this.__activeCount--;\n            this.debug(\"ActiveCount: \" + this.__activeCount);\n          }\n        }\n      }\n\n      // delegate the event to the handler method of the request depending\n      // on the current type of the event ( completed|aborted|timeout|failed )\n      var request = e.getTarget().getRequest();\n      var requestHandler = \"_on\" + e.getType();\n\n      // remove the request from the queue,\n      // keep local reference, see [BUG #4422]\n      this._remove(e.getTarget());\n\n      // It's possible that the request handler can fail, possibly due to\n      // being sent garbage data. We want to prevent that from crashing\n      // the program, but instead display an error.\n      try {\n        if (request[requestHandler]) {\n          request[requestHandler](e);\n        }\n      } catch (ex) {\n        this.error(\n          \"Request \" +\n            request +\n            \" handler \" +\n            requestHandler +\n            \" threw an error: \",\n          ex\n        );\n\n        // Issue an \"aborted\" event so the application gets notified.\n        // If that too fails, or if there's no \"aborted\" handler, ignore it.\n        try {\n          if (request[\"_onaborted\"]) {\n            var event = qx.event.Registration.createEvent(\n              \"aborted\",\n              qx.event.type.Event\n            );\n            request[\"_onaborted\"](event);\n          }\n        } catch (ex1) {}\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      TIMEOUT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Listens for the \"interval\" event of the transport object and checks\n     * if the active requests are timed out.\n     *\n     * @param e {qx.event.type.Event} event object\n     */\n    _oninterval(e) {\n      var vActive = this.__active;\n\n      if (vActive.length == 0) {\n        this.__timer.stop();\n        return;\n      }\n\n      var vCurrent = new Date().valueOf();\n      var vTransport;\n      var vRequest;\n      var vDefaultTimeout = this.getDefaultTimeout();\n      var vTimeout;\n      var vTime;\n\n      for (var i = vActive.length - 1; i >= 0; i--) {\n        vTransport = vActive[i];\n        vRequest = vTransport.getRequest();\n\n        if (vRequest.isAsynchronous()) {\n          vTimeout = vRequest.getTimeout();\n\n          // if timer is disabled...\n          if (vTimeout == 0) {\n            // then ignore it.\n            continue;\n          }\n\n          if (vTimeout == null) {\n            vTimeout = vDefaultTimeout;\n          }\n\n          vTime = vCurrent - vTransport._start;\n\n          if (vTime > vTimeout) {\n            this.warn(\"Timeout: transport \" + vTransport.toHashCode());\n            this.warn(vTime + \"ms > \" + vTimeout + \"ms\");\n            vTransport.timeout();\n          }\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      MODIFIERS\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyEnabled(value, old) {\n      if (value) {\n        this._check();\n      }\n\n      this.__timer.setEnabled(value);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CORE METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Add the request to the pending requests queue.\n     *\n     * @param vRequest {var} The request\n     */\n    add(vRequest) {\n      vRequest.setState(\"queued\");\n\n      if (vRequest.isAsynchronous()) {\n        this.__queue.push(vRequest);\n      } else {\n        this.__queue.unshift(vRequest);\n      }\n\n      this._check();\n\n      if (this.getEnabled()) {\n        this.__timer.start();\n      }\n    },\n\n    /**\n     * Remove the request from the pending requests queue.\n     *\n     *  The underlying transport of the request is forced into the aborted\n     *  state (\"aborted\") and listeners of the \"aborted\"\n     *  signal are notified about the event. If the request isn't in the\n     *  pending requests queue, this method is a noop.\n     *\n     * @param vRequest {var} The request\n     */\n    abort(vRequest) {\n      var vTransport = vRequest.getTransport();\n\n      if (vTransport) {\n        vTransport.abort();\n      } else if (this.__queue.includes(vRequest)) {\n        qx.lang.Array.remove(this.__queue, vRequest);\n      }\n    },\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    this._disposeArray(\"__active\");\n    this._disposeObjects(\"__timer\");\n    this.__queue = null;\n  },\n});\n"
  ],
  "mappings": "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"
}