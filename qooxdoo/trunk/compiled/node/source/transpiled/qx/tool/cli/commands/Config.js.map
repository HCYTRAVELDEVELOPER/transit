{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "process",
    "require",
    "path",
    "columnify",
    "fs",
    "tool",
    "utils",
    "Promisify",
    "Class",
    "define",
    "extend",
    "cli",
    "commands",
    "Command",
    "statics",
    "getYargsCommand",
    "run",
    "argv",
    "name",
    "cmd",
    "Config",
    "catch",
    "e",
    "compiler",
    "Console",
    "error",
    "stack",
    "message",
    "exit",
    "command",
    "describe",
    "builder",
    "yargs",
    "option",
    "alias",
    "type",
    "bare",
    "all",
    "handler",
    "KNOWN_VALUES",
    "desc",
    "set",
    "value",
    "Boolean",
    "undefined",
    "members",
    "__describe",
    "key",
    "data",
    "__checkKey",
    "quiet",
    "warn",
    "__breakout",
    "pos",
    "lastIndexOf",
    "parentKey",
    "substring",
    "childKey",
    "cmdSet",
    "cfg",
    "ConfigDb",
    "getInstance",
    "setting",
    "keyInfo",
    "parent",
    "db",
    "save",
    "cmdDelete",
    "cmdGet",
    "info",
    "cmdList",
    "keys",
    "scan",
    "obj",
    "Object",
    "entries",
    "fullKey",
    "length",
    "Utils",
    "isPlainObject",
    "sort",
    "map",
    "description"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/tool/cli/commands/Config.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2018 Zenesis Ltd\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (john.spackman@zenesis.com, @johnspackman)\n\n************************************************************************ */\nconst process = require(\"process\");\nconst path = require(\"path\");\nconst columnify = require(\"columnify\");\nconst fs = qx.tool.utils.Promisify.fs;\n\n/**\n * Handles persistent configuration\n */\n\nqx.Class.define(\"qx.tool.cli.commands.Config\", {\n  extend: qx.tool.cli.commands.Command,\n\n  statics: {\n    getYargsCommand() {\n      function run(argv, name) {\n        var cmd = new qx.tool.cli.commands.Config(argv);\n        return cmd[name](argv).catch(e => {\n          qx.tool.compiler.Console.error(e.stack || e.message);\n          process.exit(1);\n        });\n      }\n      return {\n        command: \"config <key> [value]\",\n        describe: \"gets/sets persistent configuration\",\n        builder(yargs) {\n          yargs\n            .option(\"quiet\", {\n              alias: \"q\",\n              describe:\n                \"Suppresses warnings (eg about unknown configuration keys)\",\n              type: \"boolean\"\n            })\n            .command(\n              \"set <key> <value>\",\n              \"Sets a configuration value\",\n              () => {},\n              argv => run(argv, \"cmdSet\")\n            )\n            .command(\n              \"get <key> [options]\",\n              \"Gets a configuration value\",\n              {\n                bare: {\n                  type: \"boolean\",\n                  describe: \"Restricts output to just the value\"\n                }\n              },\n\n              argv => run(argv, \"cmdGet\")\n            )\n            .command(\n              \"delete <key>\",\n              \"Deletes a configuration value\",\n              () => {},\n              argv => run(argv, \"cmdDelete\")\n            )\n            .command(\n              \"list\",\n              \"Lists all known configuration values\",\n              {\n                all: {\n                  type: \"boolean\",\n                  describe: \"Shows all keys, including unset\"\n                }\n              },\n\n              argv => run(argv, \"cmdList\")\n            );\n        },\n        handler(argv) {\n          // Nothing\n        }\n      };\n    },\n\n    KNOWN_VALUES: {\n      \"github.token\": {\n        desc: \"The API token used to connect to GitHub\"\n      },\n\n      \"qx.translation.strictPoCompatibility\": {\n        desc: \"Whether to write PO files with strict compatibility, i.e. include line numbers in output\",\n        async set(value) {\n          return value === \"true\"\n            ? true\n            : value === \"false\"\n            ? false\n            : Boolean(value);\n        }\n      },\n\n      \"qx.default.color\": {\n        desc: 'The default color for console output (eg \"white bgRed bold\")'\n      },\n\n      \"qx.default.feedback\": {\n        desc: \"Default value for compiler feedback (override with --[no-]feedback)\",\n        async set(value) {\n          return value === \"true\"\n            ? true\n            : value === \"false\"\n            ? false\n            : undefined;\n        }\n      }\n    }\n  },\n\n  members: {\n    __describe(key) {\n      var data = qx.tool.cli.commands.Config.KNOWN_VALUES[key];\n      return data && data.desc;\n    },\n\n    __checkKey(argv) {\n      if (!argv.quiet) {\n        let desc = this.__describe(argv.key);\n        if (!desc) {\n          qx.tool.compiler.Console.warn(\n            \"Warning: Unrecognised configuration key \" + argv.key\n          );\n        }\n      }\n    },\n\n    __breakout(key) {\n      let pos = key.lastIndexOf(\".\");\n      let parentKey = pos > -1 ? key.substring(0, pos) : \"\";\n      let childKey = key.substring(pos + 1);\n\n      return {\n        key: key,\n        parentKey: parentKey,\n        childKey: childKey\n      };\n    },\n\n    async cmdSet(argv) {\n      this.__checkKey(argv);\n      let cfg = await qx.tool.cli.ConfigDb.getInstance();\n      let setting = qx.tool.cli.commands.Config.KNOWN_VALUES[argv.key];\n      let value = argv.value;\n      if (setting && typeof setting.set == \"function\") {\n        value = await setting.set(value);\n      }\n\n      let keyInfo = this.__breakout(argv.key);\n      let parent = cfg.db(keyInfo.parentKey, {});\n      if (value === undefined) {\n        delete parent[keyInfo.childKey];\n      } else {\n        parent[keyInfo.childKey] = value;\n      }\n      await cfg.save();\n    },\n\n    async cmdDelete(argv) {\n      this.__checkKey(argv);\n      let cfg = await qx.tool.cli.ConfigDb.getInstance();\n      let keyInfo = this.__breakout(argv.key);\n      let parent = cfg.db(keyInfo.parentKey);\n      if (parent) {\n        delete parent[keyInfo.childKey];\n      }\n      await cfg.save();\n    },\n\n    async cmdGet(argv) {\n      this.__checkKey(argv);\n      let cfg = await qx.tool.cli.ConfigDb.getInstance();\n      let value = cfg.db(argv.key);\n      if (argv.bare) {\n        qx.tool.compiler.Console.info(value || \"\");\n      } else if (value !== undefined) {\n        qx.tool.compiler.Console.info(argv.key + \"=\" + value);\n      } else {\n        qx.tool.compiler.Console.info(argv.key + \" is not set\");\n      }\n    },\n\n    async cmdList(argv) {\n      let cfg = await qx.tool.cli.ConfigDb.getInstance();\n\n      let keys = {};\n      function scan(obj, parentKey) {\n        for (let [key, value] of Object.entries(obj)) {\n          let fullKey = parentKey + (parentKey.length ? \".\" : \"\") + key;\n          if (qx.tool.utils.Utils.isPlainObject(value)) {\n            scan(value, fullKey);\n            continue;\n          }\n          keys[fullKey] = true;\n        }\n      }\n      if (argv.all) {\n        for (let key in qx.tool.cli.commands.Config.KNOWN_VALUES) {\n          keys[key] = true;\n        }\n      }\n\n      // Recursively get a list of all known keys\n      scan(cfg.db(), \"\");\n      keys = Object.keys(keys);\n      keys.sort();\n      keys = keys.map(key => ({\n        key: key,\n        value: cfg.db(key),\n        description: this.__describe(key) || \"Unrecognised key\"\n      }));\n\n      // Display each value\n      qx.tool.compiler.Console.info(columnify(keys));\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;EACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;EACA,MAAME,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;EACA,MAAMG,EAAE,GAAGR,EAAE,CAACS,IAAH,CAAQC,KAAR,CAAcC,SAAd,CAAwBH,EAAnC;EAEA;AACA;AACA;;EAEAR,EAAE,CAACY,KAAH,CAASC,MAAT,CAAgB,6BAAhB,EAA+C;IAC7CC,MAAM,EAAEd,EAAE,CAACS,IAAH,CAAQM,GAAR,CAAYC,QAAZ,CAAqBC,OADgB;IAG7CC,OAAO,EAAE;MACPC,eAAe,GAAG;QAChB,SAASC,GAAT,CAAaC,IAAb,EAAmBC,IAAnB,EAAyB;UACvB,IAAIC,GAAG,GAAG,IAAIvB,EAAE,CAACS,IAAH,CAAQM,GAAR,CAAYC,QAAZ,CAAqBQ,MAAzB,CAAgCH,IAAhC,CAAV;UACA,OAAOE,GAAG,CAACD,IAAD,CAAH,CAAUD,IAAV,EAAgBI,KAAhB,CAAsBC,CAAC,IAAI;YAChC1B,EAAE,CAACS,IAAH,CAAQkB,QAAR,CAAiBC,OAAjB,CAAyBC,KAAzB,CAA+BH,CAAC,CAACI,KAAF,IAAWJ,CAAC,CAACK,OAA5C;YACA3B,OAAO,CAAC4B,IAAR,CAAa,CAAb;UACD,CAHM,CAAP;QAID;;QACD,OAAO;UACLC,OAAO,EAAE,sBADJ;UAELC,QAAQ,EAAE,oCAFL;;UAGLC,OAAO,CAACC,KAAD,EAAQ;YACbA,KAAK,CACFC,MADH,CACU,OADV,EACmB;cACfC,KAAK,EAAE,GADQ;cAEfJ,QAAQ,EACN,2DAHa;cAIfK,IAAI,EAAE;YAJS,CADnB,EAOGN,OAPH,CAQI,mBARJ,EASI,4BATJ,EAUI,MAAM,CAAE,CAVZ,EAWIZ,IAAI,IAAID,GAAG,CAACC,IAAD,EAAO,QAAP,CAXf,EAaGY,OAbH,CAcI,qBAdJ,EAeI,4BAfJ,EAgBI;cACEO,IAAI,EAAE;gBACJD,IAAI,EAAE,SADF;gBAEJL,QAAQ,EAAE;cAFN;YADR,CAhBJ,EAuBIb,IAAI,IAAID,GAAG,CAACC,IAAD,EAAO,QAAP,CAvBf,EAyBGY,OAzBH,CA0BI,cA1BJ,EA2BI,+BA3BJ,EA4BI,MAAM,CAAE,CA5BZ,EA6BIZ,IAAI,IAAID,GAAG,CAACC,IAAD,EAAO,WAAP,CA7Bf,EA+BGY,OA/BH,CAgCI,MAhCJ,EAiCI,sCAjCJ,EAkCI;cACEQ,GAAG,EAAE;gBACHF,IAAI,EAAE,SADH;gBAEHL,QAAQ,EAAE;cAFP;YADP,CAlCJ,EAyCIb,IAAI,IAAID,GAAG,CAACC,IAAD,EAAO,SAAP,CAzCf;UA2CD,CA/CI;;UAgDLqB,OAAO,CAACrB,IAAD,EAAO,CACZ;UACD;;QAlDI,CAAP;MAoDD,CA7DM;;MA+DPsB,YAAY,EAAE;QACZ,gBAAgB;UACdC,IAAI,EAAE;QADQ,CADJ;QAKZ,wCAAwC;UACtCA,IAAI,EAAE,0FADgC;;UAEtC,MAAMC,GAAN,CAAUC,KAAV,EAAiB;YACf,OAAOA,KAAK,KAAK,MAAV,GACH,IADG,GAEHA,KAAK,KAAK,OAAV,GACA,KADA,GAEAC,OAAO,CAACD,KAAD,CAJX;UAKD;;QARqC,CAL5B;QAgBZ,oBAAoB;UAClBF,IAAI,EAAE;QADY,CAhBR;QAoBZ,uBAAuB;UACrBA,IAAI,EAAE,qEADe;;UAErB,MAAMC,GAAN,CAAUC,KAAV,EAAiB;YACf,OAAOA,KAAK,KAAK,MAAV,GACH,IADG,GAEHA,KAAK,KAAK,OAAV,GACA,KADA,GAEAE,SAJJ;UAKD;;QARoB;MApBX;IA/DP,CAHoC;IAmG7CC,OAAO,EAAE;MACPC,iBAAU,CAACC,GAAD,EAAM;QACd,IAAIC,IAAI,GAAGpD,EAAE,CAACS,IAAH,CAAQM,GAAR,CAAYC,QAAZ,CAAqBQ,MAArB,CAA4BmB,YAA5B,CAAyCQ,GAAzC,CAAX;QACA,OAAOC,IAAI,IAAIA,IAAI,CAACR,IAApB;MACD,CAJM;;MAMPS,iBAAU,CAAChC,IAAD,EAAO;QACf,IAAI,CAACA,IAAI,CAACiC,KAAV,EAAiB;UACf,IAAIV,IAAI,GAAG,KAAKM,iBAAL,CAAgB7B,IAAI,CAAC8B,GAArB,CAAX;;UACA,IAAI,CAACP,IAAL,EAAW;YACT5C,EAAE,CAACS,IAAH,CAAQkB,QAAR,CAAiBC,OAAjB,CAAyB2B,IAAzB,CACE,6CAA6ClC,IAAI,CAAC8B,GADpD;UAGD;QACF;MACF,CAfM;;MAiBPK,iBAAU,CAACL,GAAD,EAAM;QACd,IAAIM,GAAG,GAAGN,GAAG,CAACO,WAAJ,CAAgB,GAAhB,CAAV;QACA,IAAIC,SAAS,GAAGF,GAAG,GAAG,CAAC,CAAP,GAAWN,GAAG,CAACS,SAAJ,CAAc,CAAd,EAAiBH,GAAjB,CAAX,GAAmC,EAAnD;QACA,IAAII,QAAQ,GAAGV,GAAG,CAACS,SAAJ,CAAcH,GAAG,GAAG,CAApB,CAAf;QAEA,OAAO;UACLN,GAAG,EAAEA,GADA;UAELQ,SAAS,EAAEA,SAFN;UAGLE,QAAQ,EAAEA;QAHL,CAAP;MAKD,CA3BM;;MA6BP,MAAMC,MAAN,CAAazC,IAAb,EAAmB;QACjB,KAAKgC,iBAAL,CAAgBhC,IAAhB;;QACA,IAAI0C,GAAG,GAAG,MAAM/D,EAAE,CAACS,IAAH,CAAQM,GAAR,CAAYiD,QAAZ,CAAqBC,WAArB,EAAhB;QACA,IAAIC,OAAO,GAAGlE,EAAE,CAACS,IAAH,CAAQM,GAAR,CAAYC,QAAZ,CAAqBQ,MAArB,CAA4BmB,YAA5B,CAAyCtB,IAAI,CAAC8B,GAA9C,CAAd;QACA,IAAIL,KAAK,GAAGzB,IAAI,CAACyB,KAAjB;;QACA,IAAIoB,OAAO,IAAI,OAAOA,OAAO,CAACrB,GAAf,IAAsB,UAArC,EAAiD;UAC/CC,KAAK,GAAG,MAAMoB,OAAO,CAACrB,GAAR,CAAYC,KAAZ,CAAd;QACD;;QAED,IAAIqB,OAAO,GAAG,KAAKX,iBAAL,CAAgBnC,IAAI,CAAC8B,GAArB,CAAd;;QACA,IAAIiB,MAAM,GAAGL,GAAG,CAACM,EAAJ,CAAOF,OAAO,CAACR,SAAf,EAA0B,EAA1B,CAAb;;QACA,IAAIb,KAAK,KAAKE,SAAd,EAAyB;UACvB,OAAOoB,MAAM,CAACD,OAAO,CAACN,QAAT,CAAb;QACD,CAFD,MAEO;UACLO,MAAM,CAACD,OAAO,CAACN,QAAT,CAAN,GAA2Bf,KAA3B;QACD;;QACD,MAAMiB,GAAG,CAACO,IAAJ,EAAN;MACD,CA9CM;;MAgDP,MAAMC,SAAN,CAAgBlD,IAAhB,EAAsB;QACpB,KAAKgC,iBAAL,CAAgBhC,IAAhB;;QACA,IAAI0C,GAAG,GAAG,MAAM/D,EAAE,CAACS,IAAH,CAAQM,GAAR,CAAYiD,QAAZ,CAAqBC,WAArB,EAAhB;;QACA,IAAIE,OAAO,GAAG,KAAKX,iBAAL,CAAgBnC,IAAI,CAAC8B,GAArB,CAAd;;QACA,IAAIiB,MAAM,GAAGL,GAAG,CAACM,EAAJ,CAAOF,OAAO,CAACR,SAAf,CAAb;;QACA,IAAIS,MAAJ,EAAY;UACV,OAAOA,MAAM,CAACD,OAAO,CAACN,QAAT,CAAb;QACD;;QACD,MAAME,GAAG,CAACO,IAAJ,EAAN;MACD,CAzDM;;MA2DP,MAAME,MAAN,CAAanD,IAAb,EAAmB;QACjB,KAAKgC,iBAAL,CAAgBhC,IAAhB;;QACA,IAAI0C,GAAG,GAAG,MAAM/D,EAAE,CAACS,IAAH,CAAQM,GAAR,CAAYiD,QAAZ,CAAqBC,WAArB,EAAhB;QACA,IAAInB,KAAK,GAAGiB,GAAG,CAACM,EAAJ,CAAOhD,IAAI,CAAC8B,GAAZ,CAAZ;;QACA,IAAI9B,IAAI,CAACmB,IAAT,EAAe;UACbxC,EAAE,CAACS,IAAH,CAAQkB,QAAR,CAAiBC,OAAjB,CAAyB6C,IAAzB,CAA8B3B,KAAK,IAAI,EAAvC;QACD,CAFD,MAEO,IAAIA,KAAK,KAAKE,SAAd,EAAyB;UAC9BhD,EAAE,CAACS,IAAH,CAAQkB,QAAR,CAAiBC,OAAjB,CAAyB6C,IAAzB,CAA8BpD,IAAI,CAAC8B,GAAL,GAAW,GAAX,GAAiBL,KAA/C;QACD,CAFM,MAEA;UACL9C,EAAE,CAACS,IAAH,CAAQkB,QAAR,CAAiBC,OAAjB,CAAyB6C,IAAzB,CAA8BpD,IAAI,CAAC8B,GAAL,GAAW,aAAzC;QACD;MACF,CAtEM;;MAwEP,MAAMuB,OAAN,CAAcrD,IAAd,EAAoB;QAClB,IAAI0C,GAAG,GAAG,MAAM/D,EAAE,CAACS,IAAH,CAAQM,GAAR,CAAYiD,QAAZ,CAAqBC,WAArB,EAAhB;QAEA,IAAIU,IAAI,GAAG,EAAX;;QACA,SAASC,IAAT,CAAcC,GAAd,EAAmBlB,SAAnB,EAA8B;UAC5B,KAAK,IAAI,CAACR,GAAD,EAAML,KAAN,CAAT,IAAyBgC,MAAM,CAACC,OAAP,CAAeF,GAAf,CAAzB,EAA8C;YAC5C,IAAIG,OAAO,GAAGrB,SAAS,IAAIA,SAAS,CAACsB,MAAV,GAAmB,GAAnB,GAAyB,EAA7B,CAAT,GAA4C9B,GAA1D;;YACA,IAAInD,EAAE,CAACS,IAAH,CAAQC,KAAR,CAAcwE,KAAd,CAAoBC,aAApB,CAAkCrC,KAAlC,CAAJ,EAA8C;cAC5C8B,IAAI,CAAC9B,KAAD,EAAQkC,OAAR,CAAJ;cACA;YACD;;YACDL,IAAI,CAACK,OAAD,CAAJ,GAAgB,IAAhB;UACD;QACF;;QACD,IAAI3D,IAAI,CAACoB,GAAT,EAAc;UACZ,KAAK,IAAIU,GAAT,IAAgBnD,EAAE,CAACS,IAAH,CAAQM,GAAR,CAAYC,QAAZ,CAAqBQ,MAArB,CAA4BmB,YAA5C,EAA0D;YACxDgC,IAAI,CAACxB,GAAD,CAAJ,GAAY,IAAZ;UACD;QACF,CAlBiB,CAoBlB;;;QACAyB,IAAI,CAACb,GAAG,CAACM,EAAJ,EAAD,EAAW,EAAX,CAAJ;QACAM,IAAI,GAAGG,MAAM,CAACH,IAAP,CAAYA,IAAZ,CAAP;QACAA,IAAI,CAACS,IAAL;QACAT,IAAI,GAAGA,IAAI,CAACU,GAAL,CAASlC,GAAG,KAAK;UACtBA,GAAG,EAAEA,GADiB;UAEtBL,KAAK,EAAEiB,GAAG,CAACM,EAAJ,CAAOlB,GAAP,CAFe;UAGtBmC,WAAW,EAAE,KAAKpC,iBAAL,CAAgBC,GAAhB,KAAwB;QAHf,CAAL,CAAZ,CAAP,CAxBkB,CA8BlB;;QACAnD,EAAE,CAACS,IAAH,CAAQkB,QAAR,CAAiBC,OAAjB,CAAyB6C,IAAzB,CAA8BlE,SAAS,CAACoE,IAAD,CAAvC;MACD;;IAxGM;EAnGoC,CAA/C;EA1BA3E,EAAE,CAACS,IAAH,CAAQM,GAAR,CAAYC,QAAZ,CAAqBQ,MAArB,CAA4BrB,aAA5B,GAA4CA,aAA5C"
}