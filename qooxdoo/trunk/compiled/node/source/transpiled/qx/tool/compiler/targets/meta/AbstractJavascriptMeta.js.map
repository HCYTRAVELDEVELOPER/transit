{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "fs",
    "tool",
    "utils",
    "Promisify",
    "path",
    "require",
    "sourceMap",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "appMeta",
    "filename",
    "originalSourceFile",
    "_appMeta",
    "__filename",
    "__originalSourceFile",
    "properties",
    "needsWriteToDisk",
    "init",
    "check",
    "members",
    "__wrapper",
    "getAppMeta",
    "getFilename",
    "wrap",
    "jsMeta",
    "getWrapper",
    "unwrap",
    "writeToDisk",
    "isNeedsWriteToDisk",
    "ws",
    "Utils",
    "LineCountingTransform",
    "pipe",
    "createWriteStream",
    "Promise",
    "resolve",
    "on",
    "writeSourceCodeToStream",
    "end",
    "map",
    "getSourceMap",
    "writeFileAsync",
    "JSON",
    "stringify",
    "Error",
    "classname",
    "_copySourceMap",
    "jsMetas",
    "lineOffsets",
    "generator",
    "SourceMapGenerator",
    "file",
    "i",
    "length",
    "js",
    "lineOffset",
    "data",
    "SourceMapConsumer",
    "eachMapping",
    "mapping",
    "generated",
    "line",
    "generatedLine",
    "column",
    "generatedColumn",
    "original",
    "originalLine",
    "originalColumn",
    "source",
    "addMapping",
    "getTarget",
    "getSaveSourceInMap",
    "sources",
    "forEach",
    "setSourceContent",
    "sourceContentFor",
    "res",
    "parse",
    "toString",
    "getSourceMapRelativePaths",
    "relative",
    "compiler",
    "targets",
    "meta",
    "AbstractJavascriptMeta"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/tool/compiler/targets/meta/AbstractJavascriptMeta.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo-compiler\n *\n *    Copyright:\n *      2011-2021 Zenesis Limited, http://www.zenesis.com\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *\n * ************************************************************************/\n\nconst fs = qx.tool.utils.Promisify.fs;\nconst path = require(\"upath\");\nconst sourceMap = require(\"source-map\");\n\n/**\n * An AbstractJavascriptMeta provides an abstraction of some source code, and might be\n * comprised of a number of input files which are merged together as required.\n *\n * This object could represent a file which already exists on disk (eg a transpiled\n * source file), or something that is generated on the fly (such as a index.js), or\n * a compilation of files (eg a part)\n */\nqx.Class.define(\"qx.tool.compiler.targets.meta.AbstractJavascriptMeta\", {\n  extend: qx.core.Object,\n\n  /**\n   * Constructor\n   *\n   * @param appMeta {qx.tool.compiler.targets.meta.ApplicationMeta}\n   * @param filename {String} the sourcefile\n   * @param originalSourceFile {String?} the URI to give to the source map\n   */\n  construct(appMeta, filename, originalSourceFile) {\n    super();\n    this._appMeta = appMeta;\n    this.__filename = filename;\n    this.__originalSourceFile = originalSourceFile;\n  },\n\n  properties: {\n    /** If true, this is generated on the fly and needs to be output */\n    needsWriteToDisk: {\n      init: false,\n      check: \"Boolean\"\n    }\n  },\n\n  members: {\n    _appMeta: null,\n    __filename: null,\n    __originalSourceFile: null,\n    __wrapper: null,\n\n    /**\n     * Returns the ApplicationMeta\n     *\n     * @return {ApplicationMeta}\n     */\n    getAppMeta() {\n      return this._appMeta;\n    },\n\n    /**\n     * Returns the filename for the output of this JS\n     *\n     * @return {String}\n     */\n    getFilename() {\n      return this.__filename;\n    },\n\n    wrap(jsMeta) {\n      this.__wrapper = jsMeta;\n    },\n\n    getWrapper() {\n      return this.__wrapper;\n    },\n\n    unwrap() {\n      if (this.__wrapper) {\n        return this.__wrapper.unwrap();\n      }\n      return this;\n    },\n\n    /**\n     * Writes the file to disk, if appropriate\n     */\n    async writeToDisk() {\n      if (this.isNeedsWriteToDisk()) {\n        let ws = new qx.tool.utils.Utils.LineCountingTransform();\n        ws.pipe(fs.createWriteStream(this.__filename, \"utf8\"));\n        await new Promise(async resolve => {\n          ws.on(\"finish\", resolve);\n          await this.writeSourceCodeToStream(ws);\n          ws.end();\n        });\n\n        let map = await this.getSourceMap();\n        if (map) {\n          await fs.writeFileAsync(\n            this.__filename + \".map\",\n            JSON.stringify(map, null, 2),\n            \"utf8\"\n          );\n        }\n      }\n    },\n\n    /**\n     * Writes the source code as a stream, merging source files etc\n     * as necessary\n     *\n     * @param ws {WriteStream} the stream to write to\n     */\n    async writeSourceCodeToStream(ws) {\n      throw new Error(\n        `No implementation for ${this.classname}.writeSourceCodeToStream`\n      );\n    },\n\n    /**\n     * Reads the source map as a string\n     */\n    async getSourceMap() {\n      return null;\n    },\n\n    /**\n     * Utility method that merges multiple source maps\n     */\n    async _copySourceMap(jsMetas, lineOffsets) {\n      let generator = new sourceMap.SourceMapGenerator({\n        file: this.getFilename() + \".map\"\n      });\n\n      for (let i = 0; i < jsMetas.length; i++) {\n        let js = jsMetas[i];\n        let lineOffset = lineOffsets[i];\n        let data = await js.getSourceMap();\n        if (data) {\n          var map = new sourceMap.SourceMapConsumer(data);\n          map.eachMapping(mapping => {\n            mapping = {\n              generated: {\n                line: mapping.generatedLine + lineOffset,\n                column: mapping.generatedColumn\n              },\n\n              original: {\n                line: mapping.originalLine || 1,\n                column: mapping.originalColumn || 1\n              },\n\n              source: mapping.source || js.getFilename()\n            };\n\n            generator.addMapping(mapping);\n          });\n          if (\n            this._appMeta.getTarget().getSaveSourceInMap &&\n            this._appMeta.getTarget().getSaveSourceInMap()\n          ) {\n            map.sources.forEach(source =>\n              generator.setSourceContent(source, map.sourceContentFor(source))\n            );\n          }\n        }\n      }\n      let res = JSON.parse(generator.toString());\n      if (\n        this._appMeta.getTarget().getSourceMapRelativePaths &&\n        this._appMeta.getTarget().getSourceMapRelativePaths()\n      ) {\n        for (let i = 0; i < res.sources.length; i++) {\n          res.sources[i] = path.relative(\"\", res.sources[i]);\n        }\n      }\n      return res;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}