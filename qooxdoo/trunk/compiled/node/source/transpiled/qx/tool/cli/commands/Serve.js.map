{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "path",
    "require",
    "process",
    "express",
    "http",
    "fs",
    "tool",
    "utils",
    "Promisify",
    "addPath",
    "cwd",
    "Class",
    "define",
    "extend",
    "cli",
    "commands",
    "Compile",
    "statics",
    "YARGS_BUILDER",
    "alias",
    "describe",
    "type",
    "default",
    "getYargsCommand",
    "command",
    "builder",
    "res",
    "Object",
    "assign",
    "Serve",
    "watch",
    "events",
    "beforeStart",
    "afterStart",
    "members",
    "_website",
    "argv",
    "website",
    "Website",
    "existsAsync",
    "getTargetDir",
    "compiler",
    "Console",
    "info",
    "rebuildAll",
    "rebuildStartpage",
    "startWatcher",
    "runWebServer",
    "showStartpage",
    "__showStartpage",
    "makers",
    "getMakers",
    "filter",
    "maker",
    "getApplications",
    "some",
    "app",
    "getStandalone",
    "apps",
    "defaultMaker",
    "firstMaker",
    "forEach",
    "isBrowserApp",
    "push",
    "getWriteIndexHtmlToRoot",
    "length",
    "undefined",
    "config",
    "_getConfig",
    "use",
    "req",
    "next",
    "set",
    "static",
    "getTarget",
    "getOutputDir",
    "s",
    "Utils",
    "getQxPath",
    "join",
    "dirname",
    "appsData",
    "target",
    "out",
    "normalize",
    "getType",
    "outputDir",
    "map",
    "isBrowser",
    "name",
    "getName",
    "title",
    "getTitle",
    "appClass",
    "getClassName",
    "description",
    "getDescription",
    "outputPath",
    "getProjectDir",
    "get",
    "send",
    "JSON",
    "stringify",
    "addListenerOnce",
    "e",
    "server",
    "createServer",
    "fireDataEvent",
    "application",
    "outputdir",
    "on",
    "code",
    "print",
    "serve",
    "listenPort",
    "exit",
    "log",
    "listen",
    "fireEvent",
    "defer",
    "addMessageIds"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/tool/cli/commands/Serve.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2017 Zenesis Ltd\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (john.spackman@zenesis.com, @johnspackman)\n\n************************************************************************ */\n\nconst path = require(\"upath\");\nconst process = require(\"process\");\nconst express = require(\"express\");\nconst http = require(\"http\");\nconst fs = qx.tool.utils.Promisify.fs;\nrequire(\"app-module-path\").addPath(process.cwd() + \"/node_modules\");\n/**\n * Compiles the project and serves it up as a web page\n */\nqx.Class.define(\"qx.tool.cli.commands.Serve\", {\n  extend: qx.tool.cli.commands.Compile,\n\n  statics: {\n    YARGS_BUILDER: {\n      \"listen-port\": {\n        alias: \"p\",\n        describe: \"The port for the web browser to listen on\",\n        type: \"number\",\n        default: 8080\n      },\n\n      \"show-startpage\": {\n        alias: \"S\",\n        describe:\n          \"Show the startpage with the list of applications and additional information\",\n        type: \"boolean\",\n        default: null\n      },\n\n      \"rebuild-startpage\": {\n        alias: \"R\",\n        describe:\n          \"Rebuild the startpage with the list of applications and additional information\",\n        type: \"boolean\",\n        default: false\n      }\n    },\n\n    getYargsCommand() {\n      return {\n        command: \"serve\",\n        describe:\n          \"runs a webserver to run the current application with continuous compilation, using compile.json\",\n        builder: (() => {\n          let res = Object.assign(\n            {},\n            qx.tool.cli.commands.Compile.YARGS_BUILDER,\n            qx.tool.cli.commands.Serve.YARGS_BUILDER\n          );\n\n          delete res.watch;\n          return res;\n        })()\n      };\n    }\n  },\n\n  events: {\n    /**\n     * Fired before server start\n     *\n     * The event data is an object with the following properties:\n     *   server: the http server\n     *   application: the used express server instance\n     *   outputdir: the qooxdoo app output dir\n     */\n    beforeStart: \"qx.event.type.Data\",\n    /**\n     * Fired when server is started\n     */\n    afterStart: \"qx.event.type.Event\"\n  },\n\n  members: {\n    /** @type {qx.tool.utils.Website} the Website instance */\n    _website: null,\n\n    /*\n     * @Override\n     */\n    async process() {\n      this.argv.watch = true;\n      this.argv[\"machine-readable\"] = false;\n      this.argv[\"feedback\"] = false;\n      await super.process();\n\n      // build website if it hasn't been built yet.\n      const website = (this._website = new qx.tool.utils.Website());\n      if (!(await fs.existsAsync(website.getTargetDir()))) {\n        qx.tool.compiler.Console.info(\">>> Building startpage...\");\n        await this._website.rebuildAll();\n      } else if (this.argv.rebuildStartpage) {\n        this._website.startWatcher();\n      }\n\n      await this.runWebServer();\n    },\n\n    /**\n     *\n     * returns the showStartpage flag\n     *\n     */\n    showStartpage() {\n      return this.__showStartpage;\n    },\n\n    /**\n     * Runs the web server\n     */\n    async runWebServer() {\n      let makers = this.getMakers().filter(maker =>\n        maker.getApplications().some(app => app.getStandalone())\n      );\n\n      let apps = [];\n      let defaultMaker = null;\n      let firstMaker = null;\n      makers.forEach(maker => {\n        maker.getApplications().forEach(app => {\n          if (app.isBrowserApp() && app.getStandalone()) {\n            apps.push(app);\n            if (firstMaker === null) {\n              firstMaker = maker;\n            }\n            if (defaultMaker === null && app.getWriteIndexHtmlToRoot()) {\n              defaultMaker = maker;\n            }\n          }\n        });\n      });\n      if (!defaultMaker && apps.length === 1) {\n        defaultMaker = firstMaker;\n      }\n\n      this.__showStartpage = this.argv.showStartpage;\n      if (this.__showStartpage === undefined || this.__showStartpage === null) {\n        this.__showStartpage = defaultMaker === null;\n      }\n      var config = this._getConfig();\n      const app = express();\n      app.use((req, res, next) => {\n        res.set({\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Headers\":\n            \"Origin, X-Requested-With, Content-Type, Accept\",\n          \"Access-Control-Allow-Methods\": \"GET, POST, PATCH, DELETE, OPTIONS\",\n          \"Content-Security-Policy\":\n            \"default-src *  data: blob: filesystem: about: ws: wss: 'unsafe-inline' 'unsafe-eval'; script-src * data: blob: 'unsafe-inline' 'unsafe-eval'; connect-src * data: blob: 'unsafe-inline'; img-src * data: blob: 'unsafe-inline'; frame-src * data: blob: ; style-src * data: blob: 'unsafe-inline'; font-src * data: blob: 'unsafe-inline';\"\n        });\n\n        next();\n      });\n      const website = new qx.tool.utils.Website();\n      if (!this.__showStartpage) {\n        app.use(\"/\", express.static(defaultMaker.getTarget().getOutputDir()));\n      } else {\n        let s = await qx.tool.config.Utils.getQxPath();\n        if (!(await fs.existsAsync(path.join(s, \"docs\")))) {\n          s = path.dirname(s);\n        }\n        app.use(\"/docs\", express.static(path.join(s, \"docs\")));\n        app.use(\"/apps\", express.static(path.join(s, \"apps\")));\n        app.use(\"/\", express.static(website.getTargetDir()));\n        var appsData = [];\n        makers.forEach(maker => {\n          let target = maker.getTarget();\n          let out = path.normalize(\"/\" + target.getOutputDir());\n          app.use(out, express.static(target.getOutputDir()));\n          appsData.push({\n            target: {\n              type: target.getType(),\n              outputDir: out\n            },\n\n            apps: maker\n              .getApplications()\n              .filter(app => app.getStandalone())\n              .map(app => ({\n                isBrowser: app.isBrowserApp(),\n                name: app.getName(),\n                type: app.getType(),\n                title: app.getTitle() || app.getName(),\n                appClass: app.getClassName(),\n                description: app.getDescription(),\n                outputPath: target.getProjectDir(app) // no trailing slash or link will break\n              }))\n          });\n        });\n        app.get(\"/serve.api/apps.json\", (req, res) => {\n          res.set(\"Content-Type\", \"application/json\");\n          res.send(JSON.stringify(appsData, null, 2));\n        });\n      }\n      this.addListenerOnce(\"made\", e => {\n        let server = http.createServer(app);\n        this.fireDataEvent(\"beforeStart\", {\n          server: server,\n          application: app,\n          outputdir: defaultMaker.getTarget().getOutputDir()\n        });\n\n        server.on(\"error\", e => {\n          if (e.code === \"EADDRINUSE\") {\n            qx.tool.compiler.Console.print(\n              \"qx.tool.cli.serve.webAddrInUse\",\n              config.serve.listenPort\n            );\n\n            process.exit(-1);\n          } else {\n            qx.tool.compiler.Console.log(\n              \"Error when starting web server: \" + e\n            );\n          }\n        });\n        server.listen(config.serve.listenPort, () => {\n          qx.tool.compiler.Console.print(\n            \"qx.tool.cli.serve.webStarted\",\n            \"http://localhost:\" + config.serve.listenPort\n          );\n\n          this.fireEvent(\"afterStart\");\n        });\n      });\n    },\n\n    __showStartpage: null\n  },\n\n  defer(statics) {\n    qx.tool.compiler.Console.addMessageIds({\n      \"qx.tool.cli.serve.webStarted\": \"Web server started, please browse to %1\",\n      \"qx.tool.cli.serve.webAddrInUse\":\n        \"Web server cannot start because port %1 is already in use\"\n    });\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEA,MAAMC,IAAI,GAAGC,OAAO,CAAC,OAAD,CAApB;;EACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;EACA,MAAME,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;EACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;EACA,MAAMI,EAAE,GAAGT,EAAE,CAACU,IAAH,CAAQC,KAAR,CAAcC,SAAd,CAAwBH,EAAnC;;EACAJ,OAAO,CAAC,iBAAD,CAAP,CAA2BQ,OAA3B,CAAmCP,OAAO,CAACQ,GAAR,KAAgB,eAAnD;EACA;AACA;AACA;;;EACAd,EAAE,CAACe,KAAH,CAASC,MAAT,CAAgB,4BAAhB,EAA8C;IAC5CC,MAAM,EAAEjB,EAAE,CAACU,IAAH,CAAQQ,GAAR,CAAYC,QAAZ,CAAqBC,OADe;IAG5CC,OAAO,EAAE;MACPC,aAAa,EAAE;QACb,eAAe;UACbC,KAAK,EAAE,GADM;UAEbC,QAAQ,EAAE,2CAFG;UAGbC,IAAI,EAAE,QAHO;UAIbC,OAAO,EAAE;QAJI,CADF;QAQb,kBAAkB;UAChBH,KAAK,EAAE,GADS;UAEhBC,QAAQ,EACN,6EAHc;UAIhBC,IAAI,EAAE,SAJU;UAKhBC,OAAO,EAAE;QALO,CARL;QAgBb,qBAAqB;UACnBH,KAAK,EAAE,GADY;UAEnBC,QAAQ,EACN,gFAHiB;UAInBC,IAAI,EAAE,SAJa;UAKnBC,OAAO,EAAE;QALU;MAhBR,CADR;;MA0BPC,eAAe,GAAG;QAChB,OAAO;UACLC,OAAO,EAAE,OADJ;UAELJ,QAAQ,EACN,iGAHG;UAILK,OAAO,EAAE,CAAC,MAAM;YACd,IAAIC,GAAG,GAAGC,MAAM,CAACC,MAAP,CACR,EADQ,EAERhC,EAAE,CAACU,IAAH,CAAQQ,GAAR,CAAYC,QAAZ,CAAqBC,OAArB,CAA6BE,aAFrB,EAGRtB,EAAE,CAACU,IAAH,CAAQQ,GAAR,CAAYC,QAAZ,CAAqBc,KAArB,CAA2BX,aAHnB,CAAV;YAMA,OAAOQ,GAAG,CAACI,KAAX;YACA,OAAOJ,GAAP;UACD,CATQ;QAJJ,CAAP;MAeD;;IA1CM,CAHmC;IAgD5CK,MAAM,EAAE;MACN;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,WAAW,EAAE,oBATP;;MAUN;AACJ;AACA;MACIC,UAAU,EAAE;IAbN,CAhDoC;IAgE5CC,OAAO,EAAE;MACP;MACAC,QAAQ,EAAE,IAFH;;MAIP;AACJ;AACA;MACI,MAAMjC,OAAN,GAAgB;QACd,KAAKkC,IAAL,CAAUN,KAAV,GAAkB,IAAlB;QACA,KAAKM,IAAL,CAAU,kBAAV,IAAgC,KAAhC;QACA,KAAKA,IAAL,CAAU,UAAV,IAAwB,KAAxB;QACA,yEAJc,CAMd;;QACA,MAAMC,OAAO,GAAI,KAAKF,QAAL,GAAgB,IAAIvC,EAAE,CAACU,IAAH,CAAQC,KAAR,CAAc+B,OAAlB,EAAjC;;QACA,IAAI,EAAE,MAAMjC,EAAE,CAACkC,WAAH,CAAeF,OAAO,CAACG,YAAR,EAAf,CAAR,CAAJ,EAAqD;UACnD5C,EAAE,CAACU,IAAH,CAAQmC,QAAR,CAAiBC,OAAjB,CAAyBC,IAAzB,CAA8B,2BAA9B;UACA,MAAM,KAAKR,QAAL,CAAcS,UAAd,EAAN;QACD,CAHD,MAGO,IAAI,KAAKR,IAAL,CAAUS,gBAAd,EAAgC;UACrC,KAAKV,QAAL,CAAcW,YAAd;QACD;;QAED,MAAM,KAAKC,YAAL,EAAN;MACD,CAvBM;;MAyBP;AACJ;AACA;AACA;AACA;MACIC,aAAa,GAAG;QACd,OAAO,KAAKC,uBAAZ;MACD,CAhCM;;MAkCP;AACJ;AACA;MACI,MAAMF,YAAN,GAAqB;QACnB,IAAIG,MAAM,GAAG,KAAKC,SAAL,GAAiBC,MAAjB,CAAwBC,KAAK,IACxCA,KAAK,CAACC,eAAN,GAAwBC,IAAxB,CAA6BC,GAAG,IAAIA,GAAG,CAACC,aAAJ,EAApC,CADW,CAAb;QAIA,IAAIC,IAAI,GAAG,EAAX;QACA,IAAIC,YAAY,GAAG,IAAnB;QACA,IAAIC,UAAU,GAAG,IAAjB;QACAV,MAAM,CAACW,OAAP,CAAeR,KAAK,IAAI;UACtBA,KAAK,CAACC,eAAN,GAAwBO,OAAxB,CAAgCL,GAAG,IAAI;YACrC,IAAIA,GAAG,CAACM,YAAJ,MAAsBN,GAAG,CAACC,aAAJ,EAA1B,EAA+C;cAC7CC,IAAI,CAACK,IAAL,CAAUP,GAAV;;cACA,IAAII,UAAU,KAAK,IAAnB,EAAyB;gBACvBA,UAAU,GAAGP,KAAb;cACD;;cACD,IAAIM,YAAY,KAAK,IAAjB,IAAyBH,GAAG,CAACQ,uBAAJ,EAA7B,EAA4D;gBAC1DL,YAAY,GAAGN,KAAf;cACD;YACF;UACF,CAVD;QAWD,CAZD;;QAaA,IAAI,CAACM,YAAD,IAAiBD,IAAI,CAACO,MAAL,KAAgB,CAArC,EAAwC;UACtCN,YAAY,GAAGC,UAAf;QACD;;QAED,KAAKX,uBAAL,GAAuB,KAAKb,IAAL,CAAUY,aAAjC;;QACA,IAAI,KAAKC,uBAAL,KAAyBiB,SAAzB,IAAsC,KAAKjB,uBAAL,KAAyB,IAAnE,EAAyE;UACvE,KAAKA,uBAAL,GAAuBU,YAAY,KAAK,IAAxC;QACD;;QACD,IAAIQ,MAAM,GAAG,KAAKC,UAAL,EAAb;;QACA,MAAMZ,GAAG,GAAGrD,OAAO,EAAnB;QACAqD,GAAG,CAACa,GAAJ,CAAQ,CAACC,GAAD,EAAM5C,GAAN,EAAW6C,IAAX,KAAoB;UAC1B7C,GAAG,CAAC8C,GAAJ,CAAQ;YACN,+BAA+B,GADzB;YAEN,gCACE,gDAHI;YAIN,gCAAgC,mCAJ1B;YAKN,2BACE;UANI,CAAR;UASAD,IAAI;QACL,CAXD;QAYA,MAAMlC,OAAO,GAAG,IAAIzC,EAAE,CAACU,IAAH,CAAQC,KAAR,CAAc+B,OAAlB,EAAhB;;QACA,IAAI,CAAC,KAAKW,uBAAV,EAA2B;UACzBO,GAAG,CAACa,GAAJ,CAAQ,GAAR,EAAalE,OAAO,CAACsE,MAAR,CAAed,YAAY,CAACe,SAAb,GAAyBC,YAAzB,EAAf,CAAb;QACD,CAFD,MAEO;UACL,IAAIC,CAAC,GAAG,MAAMhF,EAAE,CAACU,IAAH,CAAQ6D,MAAR,CAAeU,KAAf,CAAqBC,SAArB,EAAd;;UACA,IAAI,EAAE,MAAMzE,EAAE,CAACkC,WAAH,CAAevC,IAAI,CAAC+E,IAAL,CAAUH,CAAV,EAAa,MAAb,CAAf,CAAR,CAAJ,EAAmD;YACjDA,CAAC,GAAG5E,IAAI,CAACgF,OAAL,CAAaJ,CAAb,CAAJ;UACD;;UACDpB,GAAG,CAACa,GAAJ,CAAQ,OAAR,EAAiBlE,OAAO,CAACsE,MAAR,CAAezE,IAAI,CAAC+E,IAAL,CAAUH,CAAV,EAAa,MAAb,CAAf,CAAjB;UACApB,GAAG,CAACa,GAAJ,CAAQ,OAAR,EAAiBlE,OAAO,CAACsE,MAAR,CAAezE,IAAI,CAAC+E,IAAL,CAAUH,CAAV,EAAa,MAAb,CAAf,CAAjB;UACApB,GAAG,CAACa,GAAJ,CAAQ,GAAR,EAAalE,OAAO,CAACsE,MAAR,CAAepC,OAAO,CAACG,YAAR,EAAf,CAAb;UACA,IAAIyC,QAAQ,GAAG,EAAf;UACA/B,MAAM,CAACW,OAAP,CAAeR,KAAK,IAAI;YACtB,IAAI6B,MAAM,GAAG7B,KAAK,CAACqB,SAAN,EAAb;YACA,IAAIS,GAAG,GAAGnF,IAAI,CAACoF,SAAL,CAAe,MAAMF,MAAM,CAACP,YAAP,EAArB,CAAV;YACAnB,GAAG,CAACa,GAAJ,CAAQc,GAAR,EAAahF,OAAO,CAACsE,MAAR,CAAeS,MAAM,CAACP,YAAP,EAAf,CAAb;YACAM,QAAQ,CAAClB,IAAT,CAAc;cACZmB,MAAM,EAAE;gBACN7D,IAAI,EAAE6D,MAAM,CAACG,OAAP,EADA;gBAENC,SAAS,EAAEH;cAFL,CADI;cAMZzB,IAAI,EAAEL,KAAK,CACRC,eADG,GAEHF,MAFG,CAEII,GAAG,IAAIA,GAAG,CAACC,aAAJ,EAFX,EAGH8B,GAHG,CAGC/B,GAAG,KAAK;gBACXgC,SAAS,EAAEhC,GAAG,CAACM,YAAJ,EADA;gBAEX2B,IAAI,EAAEjC,GAAG,CAACkC,OAAJ,EAFK;gBAGXrE,IAAI,EAAEmC,GAAG,CAAC6B,OAAJ,EAHK;gBAIXM,KAAK,EAAEnC,GAAG,CAACoC,QAAJ,MAAkBpC,GAAG,CAACkC,OAAJ,EAJd;gBAKXG,QAAQ,EAAErC,GAAG,CAACsC,YAAJ,EALC;gBAMXC,WAAW,EAAEvC,GAAG,CAACwC,cAAJ,EANF;gBAOXC,UAAU,EAAEf,MAAM,CAACgB,aAAP,CAAqB1C,GAArB,CAPD,CAO2B;;cAP3B,CAAL,CAHJ;YANM,CAAd;UAmBD,CAvBD;UAwBAA,GAAG,CAAC2C,GAAJ,CAAQ,sBAAR,EAAgC,CAAC7B,GAAD,EAAM5C,GAAN,KAAc;YAC5CA,GAAG,CAAC8C,GAAJ,CAAQ,cAAR,EAAwB,kBAAxB;YACA9C,GAAG,CAAC0E,IAAJ,CAASC,IAAI,CAACC,SAAL,CAAerB,QAAf,EAAyB,IAAzB,EAA+B,CAA/B,CAAT;UACD,CAHD;QAID;;QACD,KAAKsB,eAAL,CAAqB,MAArB,EAA6BC,CAAC,IAAI;UAChC,IAAIC,MAAM,GAAGrG,IAAI,CAACsG,YAAL,CAAkBlD,GAAlB,CAAb;UACA,KAAKmD,aAAL,CAAmB,aAAnB,EAAkC;YAChCF,MAAM,EAAEA,MADwB;YAEhCG,WAAW,EAAEpD,GAFmB;YAGhCqD,SAAS,EAAElD,YAAY,CAACe,SAAb,GAAyBC,YAAzB;UAHqB,CAAlC;UAMA8B,MAAM,CAACK,EAAP,CAAU,OAAV,EAAmBN,CAAC,IAAI;YACtB,IAAIA,CAAC,CAACO,IAAF,KAAW,YAAf,EAA6B;cAC3BnH,EAAE,CAACU,IAAH,CAAQmC,QAAR,CAAiBC,OAAjB,CAAyBsE,KAAzB,CACE,gCADF,EAEE7C,MAAM,CAAC8C,KAAP,CAAaC,UAFf;cAKAhH,OAAO,CAACiH,IAAR,CAAa,CAAC,CAAd;YACD,CAPD,MAOO;cACLvH,EAAE,CAACU,IAAH,CAAQmC,QAAR,CAAiBC,OAAjB,CAAyB0E,GAAzB,CACE,qCAAqCZ,CADvC;YAGD;UACF,CAbD;UAcAC,MAAM,CAACY,MAAP,CAAclD,MAAM,CAAC8C,KAAP,CAAaC,UAA3B,EAAuC,MAAM;YAC3CtH,EAAE,CAACU,IAAH,CAAQmC,QAAR,CAAiBC,OAAjB,CAAyBsE,KAAzB,CACE,8BADF,EAEE,sBAAsB7C,MAAM,CAAC8C,KAAP,CAAaC,UAFrC;YAKA,KAAKI,SAAL,CAAe,YAAf;UACD,CAPD;QAQD,CA9BD;MA+BD,CAxJM;;MA0JPrE,uBAAe,EAAE;IA1JV,CAhEmC;;IA6N5CsE,KAAK,CAACtG,OAAD,EAAU;MACbrB,EAAE,CAACU,IAAH,CAAQmC,QAAR,CAAiBC,OAAjB,CAAyB8E,aAAzB,CAAuC;QACrC,gCAAgC,yCADK;QAErC,kCACE;MAHmC,CAAvC;IAKD;;EAnO2C,CAA9C;EA3BA5H,EAAE,CAACU,IAAH,CAAQQ,GAAR,CAAYC,QAAZ,CAAqBc,KAArB,CAA2B9B,aAA3B,GAA2CA,aAA3C"
}