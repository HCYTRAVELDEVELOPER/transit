{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "path",
    "require",
    "fs",
    "promisify",
    "readFile",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "target",
    "__target",
    "properties",
    "outputTo",
    "init",
    "check",
    "members",
    "__indent",
    "__outputStream",
    "__classes",
    "__apiCache",
    "__dirname",
    "__currentClass",
    "run",
    "application",
    "Promise",
    "resolve",
    "reject",
    "time",
    "Date",
    "createWriteStream",
    "join",
    "getOutputDir",
    "getOutputTo",
    "write",
    "writeBase",
    "then",
    "analyser",
    "getAnalyser",
    "tool",
    "utils",
    "IndexedArray",
    "getDependencies",
    "forEach",
    "classname",
    "push",
    "getLibraries",
    "library",
    "symbols",
    "getKnownSymbols",
    "name",
    "type",
    "sort",
    "lastPackageName",
    "classIndex",
    "next",
    "getLength",
    "undefined",
    "className",
    "getItem",
    "pos",
    "lastIndexOf",
    "packageName",
    "substring",
    "loadAPIFile",
    "meta",
    "writeClass",
    "catch",
    "err",
    "compiler",
    "Console",
    "error",
    "stack",
    "end",
    "msg",
    "fileName",
    "replace",
    "content",
    "JSON",
    "parse",
    "Utils",
    "getTemplateDir",
    "getType",
    "t",
    "defaultType",
    "result",
    "targets",
    "TypeScriptWriter",
    "TYPE_MAPPINGS",
    "contains",
    "writeConstructor",
    "methodMeta",
    "serializeParameters",
    "writeMethods",
    "methods",
    "classMeta",
    "isStatic",
    "keys",
    "length",
    "IGNORE",
    "comment",
    "hideMethod",
    "indexOf",
    "decl",
    "access",
    "abstract",
    "mixin",
    "overriddenFrom",
    "__escapeMethodName",
    "returnType",
    "jsdoc",
    "tag",
    "hasDescription",
    "body",
    "split",
    "line",
    "match",
    "optional",
    "params",
    "paramMeta",
    "paramIndex",
    "paramName",
    "tmp",
    "lang",
    "Type",
    "isArray",
    "dimensions",
    "extendsClause",
    "superClass",
    "superType",
    "interfaces",
    "isSingleton",
    "getInstance",
    "statics",
    "writeModule",
    "moduleName",
    "Widget",
    "LayoutItem",
    "AbstractTreeItem",
    "ILayer",
    "Axis",
    "DateFormat",
    "LocalizedString",
    "Decorator",
    "Event",
    "CanvasRenderingContext2D",
    "MWidgetController",
    "IDesktop",
    "IWindowManager",
    "Pane",
    "Interface",
    "Mixin",
    "Theme",
    "Boolean",
    "String",
    "Color",
    "Font",
    "Function",
    "Window",
    "Document",
    "document",
    "Stylesheet",
    "Node",
    "Error",
    "Element",
    "RegExp",
    "var",
    "Array",
    "Map",
    "Integer",
    "Number",
    "Double",
    "Float",
    "PositiveInteger",
    "PositiveNumber"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/tool/compiler/targets/TypeScriptWriter.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo\n *\n *    Copyright:\n *      2011-2017 Zenesis Limited, http://www.zenesis.com\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * JBaron (Peter, @jbaron)\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *\n * *********************************************************************** */\n\nvar path = require(\"path\");\n\nvar fs = require(\"fs\");\nconst { promisify } = require(\"util\");\nconst readFile = promisify(fs.readFile);\n/**\n * Generates TypeScript .d.ts files\n */\nqx.Class.define(\"qx.tool.compiler.targets.TypeScriptWriter\", {\n  extend: qx.core.Object,\n\n  construct(target) {\n    super();\n    this.__target = target;\n  },\n\n  properties: {\n    outputTo: {\n      init: \"qooxdoo.d.ts\",\n      check: \"String\"\n    }\n  },\n\n  members: {\n    __indent: \"    \",\n    __outputStream: null,\n    __classes: null,\n    __target: null,\n    __apiCache: null,\n    __dirname: null,\n    __currentClass: null,\n\n    /**\n     * Generates the .d.ts file\n     *\n     * @param application\n     *          {qx.tool.compiler.app.Application?} the application; if not\n     *          provided, all classes are output\n     */\n    async run(application) {\n      this.__apiCache = {};\n      await new Promise((resolve, reject) => {\n        var time = new Date();\n        this.__outputStream = fs.createWriteStream(\n          path.join(this.__target.getOutputDir(), this.getOutputTo())\n        );\n\n        this.write(`// Generated declaration file at ${time}\\n`);\n\n        this.writeBase()\n          .then(async () => {\n            var analyser = this.__target.getAnalyser();\n            this.__classes = new qx.tool.utils.IndexedArray();\n            if (application) {\n              application.getDependencies().forEach(classname => {\n                if (classname != \"q\" && classname != \"qxWeb\") {\n                  this.__classes.push(classname);\n                }\n              });\n            } else {\n              analyser.getLibraries().forEach(library => {\n                var symbols = library.getKnownSymbols();\n                for (var name in symbols) {\n                  var type = symbols[name];\n                  if (type === \"class\" && name !== \"q\" && name !== \"qxWeb\") {\n                    this.__classes.push(name);\n                  }\n                }\n              });\n            }\n            this.__classes.sort();\n\n            var lastPackageName = null;\n            var classIndex = 0;\n            var next = () => {\n              if (classIndex >= this.__classes.getLength()) {\n                return undefined;\n              }\n\n              var className = this.__classes.getItem(classIndex++);\n              var pos = className.lastIndexOf(\".\");\n              var packageName = \"\";\n              if (pos > -1) {\n                packageName = className.substring(0, pos);\n              }\n              if (lastPackageName != packageName) {\n                if (lastPackageName !== null) {\n                  this.write(\"}\\n\");\n                }\n                if (packageName) {\n                  this.write(\"declare module \" + packageName + \" {\\n\");\n                } else {\n                  this.write(\"declare {\\n\");\n                }\n                lastPackageName = packageName;\n              }\n              return this.loadAPIFile(className)\n                .then(meta => this.writeClass(meta))\n                .then(() => next())\n                .catch(err =>\n                  qx.tool.compiler.Console.error(\n                    \"Error while processing file: \" +\n                      className +\n                      \" error: \" +\n                      err.stack\n                  )\n                );\n            };\n\n            return next()\n              .then(() => this.write(\"}\\n\"))\n              .then(() => this.__outputStream.end());\n          })\n          .then(resolve)\n          .catch(reject);\n      });\n    },\n\n    /**\n     * Write a piece of code to the declaration file\n     */\n    write(msg) {\n      this.__outputStream.write(msg);\n    },\n\n    /**\n     * Load a single API file\n     * @async\n     */\n    loadAPIFile(classname) {\n      if (\n        classname === \"Object\" ||\n        classname === \"Array\" ||\n        classname === \"Error\"\n      ) {\n        return null;\n      }\n      if (this.__apiCache[classname]) {\n        return Promise.resolve(this.__apiCache[classname]);\n      }\n      var fileName = path.join(\n        this.__target.getOutputDir(),\n        \"transpiled\",\n        classname.replace(/\\./g, \"/\") + \".json\"\n      );\n\n      return readFile(fileName, \"UTF-8\")\n        .then(content => (this.__apiCache[classname] = JSON.parse(content)))\n        .catch(err =>\n          qx.tool.compiler.Console.error(\n            \"Error parsing \" + classname + \": \" + err.stack\n          )\n        );\n    },\n\n    /**\n     * Write some util declarations out that will help with the rest\n     * @async\n     */\n    writeBase() {\n      return readFile(\n        path.join(\n          qx.tool.utils.Utils.getTemplateDir(),\n          \"TypeScriptWriter-base_declaration.txt\"\n        ),\n\n        \"UTF-8\"\n      ).then(content => this.write(content));\n    },\n\n    /**\n     * Do the mapping of types from Qooxdoo to TypeScript\n     */\n    getType(t) {\n      var defaultType = \"any\";\n      if (!t || t == \"[[ Function ]]\") {\n        return defaultType;\n      }\n      if (typeof t == \"object\") {\n        t = t.name;\n      }\n\n      // Check if we have a mapping for this type\n      var result = qx.tool.compiler.targets.TypeScriptWriter.TYPE_MAPPINGS[t];\n      if (result) {\n        return result;\n      }\n\n      if (this.__classes.contains(t)) {\n        return t;\n      }\n\n      // We don't know the type\n      // qx.tool.compiler.Console.error(\"Unknown type: \" + t);\n      return defaultType;\n    },\n\n    /**\n     * Write a constructor\n     */\n    writeConstructor(methodMeta) {\n      this.write(\n        this.__indent +\n          \"constructor (\" +\n          this.serializeParameters(methodMeta, true) +\n          \");\\n\"\n      );\n    },\n\n    /**\n     * Write all the methods of a type\n     */\n    writeMethods(methods, classMeta, isStatic = false) {\n      if (!methods || !Object.keys(methods).length) {\n        return;\n      }\n      var IGNORE =\n        qx.tool.compiler.targets.TypeScriptWriter.IGNORE[\n          this.__currentClass.className\n        ];\n\n      var comment = isStatic ? \"Statics\" : \"Members\";\n      for (var name in methods) {\n        var methodMeta = methods[name];\n        if (methodMeta.type == \"function\") {\n          var hideMethod = IGNORE && IGNORE.indexOf(name) > -1;\n\n          var decl = \"\";\n          comment = \"\";\n\n          if (methodMeta.access) {\n            if (methodMeta.access === \"protected\") {\n              decl += \"protected \";\n            }\n            if (methodMeta.access === \"private\") {\n              continue;\n            }\n          }\n          if (isStatic) {\n            decl += \"static \";\n          }\n\n          if (classMeta.type != \"interface\" && methodMeta.abstract) {\n            decl += \"abstract \";\n            comment += \"Abstract \";\n          }\n          if (methodMeta.mixin) {\n            comment += \"Mixin \";\n          }\n          if (methodMeta.overriddenFrom) {\n            comment += \"Overridden from \" + methodMeta.overriddenFrom + \" \";\n          }\n          decl += this.__escapeMethodName(name) + \"(\";\n          decl += this.serializeParameters(methodMeta);\n          decl += \")\";\n\n          var returnType = \"void\";\n          if (methodMeta.jsdoc && methodMeta.jsdoc[\"@return\"]) {\n            var tag = methodMeta.jsdoc[\"@return\"][0];\n            if (tag && tag.type) {\n              returnType = this.getType(tag.type);\n            }\n          }\n          decl += \": \" + returnType;\n\n          if (comment) {\n            comment = \" // \" + comment;\n          }\n\n          let hasDescription =\n            methodMeta.jsdoc &&\n            methodMeta.jsdoc[\"@description\"] &&\n            methodMeta.jsdoc[\"@description\"][0];\n\n          if (hasDescription) {\n            this.write(this.__indent + \"/**\\n\");\n            methodMeta.jsdoc[\"@description\"][0].body\n              .split(\"\\n\")\n              .forEach(line => {\n                this.write(this.__indent + \" * \" + line + \"\\n\");\n              });\n            this.write(this.__indent + \" */\\n\");\n          }\n\n          this.write(\n            this.__indent +\n              (hideMethod ? \"// \" : \"\") +\n              decl +\n              \";\" +\n              comment +\n              \"\\n\"\n          );\n        }\n      }\n    },\n\n    /**\n     * Escapes the name with quote marks, only if necessary\n     *\n     * @param name\n     *          {String} the name to escape\n     * @return {String} the escaped (if necessary) name\n     */\n    __escapeMethodName(name) {\n      if (!name.match(/^[a-zA-Z_][a-zA-Z0-9_]*$/)) {\n        return '\"' + name + '\"';\n      }\n      return name;\n    },\n\n    /**\n     * Serializes all the arguments of a method. Once one parameter is optional,\n     * the remaining ones are also optional (is a TypeScript requirement)\n     *\n     * @return {String}\n     */\n    serializeParameters(methodMeta, optional = false) {\n      var result = \"\";\n      if (methodMeta && methodMeta.jsdoc) {\n        var params = methodMeta.jsdoc[\"@param\"];\n        if (params) {\n          params.forEach((paramMeta, paramIndex) => {\n            var type = \"any\";\n            var paramName = paramMeta.paramName || \"unnamed\" + paramIndex;\n            var decl = paramName;\n            if (paramName == \"varargs\") {\n              optional = true;\n            }\n            if (paramMeta.optional || optional) {\n              decl += \"?\";\n              optional = true;\n            }\n            decl += \": \";\n            if (paramMeta.type) {\n              var tmp = null;\n              if (qx.lang.Type.isArray(paramMeta.type)) {\n                if (paramMeta.type.length == 1) {\n                  tmp = paramMeta.type[0];\n                }\n              } else {\n                tmp = paramMeta.type;\n              }\n              if (tmp) {\n                type = this.getType(tmp);\n                if (tmp.dimensions) {\n                  type += \"[]\";\n                }\n              }\n            }\n            decl += type;\n            if (paramIndex > 0) {\n              result += \", \";\n            }\n            result += decl;\n          });\n        }\n      }\n      return result;\n    },\n\n    /**\n     * Write the class or interface declaration\n     */\n    async writeClass(meta) {\n      this.__currentClass = meta;\n      // qx.tool.compiler.Console.info(\"Processing class \" + meta.packageName + \".\" + meta.name);\n      var extendsClause = \"\";\n      if (\n        meta.superClass &&\n        meta.superClass !== \"Object\" &&\n        meta.superClass !== \"Array\" &&\n        meta.superClass !== \"Error\"\n      ) {\n        let superType = this.getType(meta.superClass);\n        if (superType != \"any\") {\n          extendsClause = \" extends \" + superType;\n        }\n      }\n      var type = \"class \"; // default for class and mixins\n      if (meta.type === \"interface\") {\n        type = \"interface \";\n      } else if (meta.abstract) {\n        type = \"abstract \" + type;\n      }\n      this.write(\"  // \" + meta.className + \"\\n\");\n      this.write(\"  \" + type + meta.name + extendsClause);\n\n      if (meta.interfaces && meta.interfaces.length) {\n        this.write(\" implements \" + meta.interfaces.join(\", \"));\n      }\n\n      this.write(\" {\\n\");\n\n      if (meta.type == \"class\") {\n        this.writeConstructor(meta.construct);\n      }\n\n      if (meta.isSingleton) {\n        this.writeMethods(\n          {\n            getInstance: {\n              type: \"function\",\n              access: \"public\",\n              jsdoc: {\n                \"@return\": [{ type: meta.className }]\n              }\n            }\n          },\n\n          meta,\n          true\n        );\n      }\n\n      this.writeMethods(meta.statics, meta, true);\n      this.writeMethods(meta.members, meta);\n      this.write(\"\\n  }\\n\");\n      this.__currentClass = null;\n    },\n\n    /**\n     * Write the module declaration if any.\n     */\n    async writeModule(meta) {\n      var moduleName = meta.packageName;\n      if (moduleName) {\n        this.write(\"declare module \" + moduleName + \" {\\n\");\n      } else {\n        this.write(\"declare \");\n      }\n      await this.writeClass(meta);\n      if (moduleName) {\n        this.write(\"}\\n\");\n      }\n    }\n  },\n\n  statics: {\n    IGNORE: {\n      \"qx.ui.virtual.core.CellEvent\": [\"init\"],\n      \"qx.ui.table.columnmodel.resizebehavior.Default\": [\"set\"],\n      \"qx.ui.progressive.renderer.table.Widths\": [\"set\"],\n      \"qx.ui.table.columnmodel.resizebehavior\": [\"set\"],\n      \"qx.ui.table.pane.CellEvent\": [\"init\"],\n      \"qx.ui.mobile.dialog.Manager\": [\"error\"],\n      \"qx.ui.mobile.container.Navigation\": [\"add\"],\n      \"qx.ui.website.Table\": [\"filter\", \"sort\"],\n      \"qx.ui.website.DatePicker\": [\"init\", \"sort\"],\n      \"qx.event.type.Orientation\": [\"init\"],\n      \"qx.event.type.KeySequence\": [\"init\"],\n      \"qx.event.type.KeyInput\": [\"init\"],\n      \"qx.event.type.GeoPosition\": [\"init\"],\n      \"qx.event.type.Drag\": [\"init\"],\n      \"qx.bom.request.SimpleXhr\": [\"addListener\", \"addListenerOnce\"],\n      \"qx.event.dispatch.AbstractBubbling\": [\"dispatchEvent\"],\n      \"qx.event.dispatch.Direct\": [\"dispatchEvent\"],\n      \"qx.event.dispatch.MouseCapture\": [\"dispatchEvent\"],\n      \"qx.event.type.Native\": [\"init\"],\n      \"qx.html.Element\": [\"removeListener\", \"removeListenerById\"],\n      \"qx.html.Flash\": [\"setAttribute\"],\n      \"qx.util.LibraryManager\": [\"get\", \"set\"]\n    },\n\n    TYPE_MAPPINGS: {\n      Widget: \"qx.ui.core.Widget\",\n      LayoutItem: \"qx.ui.core.LayoutItem\",\n      AbstractTreeItem: \"qx.ui.tree.core.AbstractTreeItem\",\n      ILayer: \"qx.ui.virtual.core.ILayer\",\n      Axis: \"qx.ui.virtual.core.Axis\",\n      DateFormat: \"qx.util.format.DateFormat\",\n      LocalizedString: \"qx.locale.LocalizedString\",\n      Decorator: \"qx.ui.decoration.Decorator\",\n      Event: \"qx.event.type.Event\",\n      CanvasRenderingContext2D: \"CanvasRenderingContext2D\",\n      MWidgetController: \"qx.ui.list.core.MWidgetController\",\n      IDesktop: \"qx.ui.window.IDesktop\",\n      IWindowManager: \"qx.ui.window.IWindowManager\",\n      Pane: \"qx.ui.virtual.core.Pane\",\n      Class: \"qx.Class\",\n      Interface: \"qx.Interface\",\n      Mixin: \"qx.Mixin\",\n      Theme: \"qx.Theme\",\n      Boolean: \"boolean\",\n      String: \"string\",\n      Color: \"string\",\n      Font: \"string\",\n      Function: \"Function\",\n      Date: \"Date\",\n      Window: \"Window\",\n      Document: \"Document\",\n      document: \"Document\",\n      Stylesheet: \"StyleSheet\",\n      Node: \"Node\",\n      \"Custom check function\": \"Custom check function\",\n      Error: \"ErrorImpl\",\n      Element: \"HTMLElement\",\n      RegExp: \"RegExp\",\n      var: \"any\",\n      Array: \"qx.data.Array\",\n      Object: \"any\",\n      Map: \"IMap\",\n      Integer: \"number\",\n      Number: \"number\",\n      Double: \"number\",\n      Float: \"number\",\n      PositiveInteger: \"number\",\n      PositiveNumber: \"number\"\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}