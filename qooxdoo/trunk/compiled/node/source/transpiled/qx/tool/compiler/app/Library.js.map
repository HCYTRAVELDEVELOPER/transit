{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "path",
    "require",
    "fs",
    "async",
    "log",
    "tool",
    "utils",
    "LogManager",
    "createLog",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "__knownSymbols",
    "__sourceFileExtensions",
    "__environmentChecks",
    "properties",
    "namespace",
    "check",
    "version",
    "rootDir",
    "transform",
    "sourcePath",
    "init",
    "transpiledPath",
    "libraryInfo",
    "resourcePath",
    "themePath",
    "translationPath",
    "webFonts",
    "nullable",
    "addScript",
    "addCss",
    "requires",
    "members",
    "__promiseLoadManifest",
    "_transformRootDir",
    "value",
    "loadManifest",
    "loadFromDir",
    "__loadManifestImpl",
    "Console",
    "compiler",
    "getInstance",
    "files",
    "Utils",
    "correctCase",
    "resolve",
    "setRootDir",
    "data",
    "Json",
    "loadJsonAsync",
    "Error",
    "decode",
    "setNamespace",
    "provides",
    "setVersion",
    "info",
    "environmentChecks",
    "key",
    "pos",
    "indexOf",
    "matchString",
    "substring",
    "startsWith",
    "className",
    "fixLibraryPath",
    "dir",
    "d",
    "existsSync",
    "warn",
    "getNamespace",
    "correctedDir",
    "length",
    "sep",
    "setSourcePath",
    "resource",
    "setResourcePath",
    "setLibraryInfo",
    "transpiled",
    "setTranspiledPath",
    "m",
    "match",
    "translation",
    "setTranslationPath",
    "webfonts",
    "fonts",
    "forEach",
    "wf",
    "font",
    "app",
    "WebFont",
    "set",
    "push",
    "setWebFonts",
    "externalResources",
    "script",
    "setAddScript",
    "css",
    "setAddCss",
    "setRequires",
    "boot",
    "print",
    "scanForClasses",
    "cb",
    "t",
    "classes",
    "scanDir",
    "folder",
    "packageName",
    "readdir",
    "err",
    "filenames",
    "each",
    "filename",
    "stat",
    "join",
    "isDirectory",
    "tmp",
    "trace",
    "extension",
    "Boolean",
    "lastIndexOf",
    "getRootDir",
    "getSourcePath",
    "getSymbolType",
    "name",
    "type",
    "symbolType",
    "testEnvironment",
    "result",
    "isClass",
    "classname",
    "getKnownSymbols",
    "getSourceFileExtension",
    "getFilename",
    "getResourceFilename",
    "getResourcePath",
    "getThemeFilename",
    "getThemePath",
    "statics",
    "createLibrary",
    "lib",
    "Library"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/tool/compiler/app/Library.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo\n *\n *    Copyright:\n *      2011-2017 Zenesis Limited, http://www.zenesis.com\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *\n * *********************************************************************** */\n\nvar path = require(\"path\");\n\nvar fs = require(\"fs\");\nvar async = require(\"async\");\n\nvar log = qx.tool.utils.LogManager.createLog(\"library\");\n\n/**\n * A Qooxdoo Library or application; typical usage is to call .loadManifest to configure from\n * the library itself\n */\nqx.Class.define(\"qx.tool.compiler.app.Library\", {\n  extend: qx.core.Object,\n\n  construct() {\n    super();\n    this.__knownSymbols = {};\n    this.__sourceFileExtensions = {};\n    this.__environmentChecks = {};\n  },\n\n  properties: {\n    /** The namespace of the library */\n    namespace: {\n      check: \"String\"\n    },\n\n    /** The version of the library */\n    version: {\n      check: \"String\"\n    },\n\n    /** The directory; transformed into an absolute path */\n    rootDir: {\n      check: \"String\",\n      transform: \"_transformRootDir\"\n    },\n\n    /** The path to source files, relative to rootDir */\n    sourcePath: {\n      init: \"source/class\",\n      check: \"String\"\n    },\n\n    /** The path to generated transpiled files, relative to rootDir */\n    transpiledPath: {\n      init: \"source/transpiled\",\n      check: \"String\"\n    },\n\n    /** The info section form the Manifest */\n    libraryInfo: {\n      check: \"Map\"\n    },\n\n    /** The path to resource files, relative to rootDir */\n    resourcePath: {\n      init: \"source/resource\",\n      check: \"String\"\n    },\n\n    /** The path to resource files, relative to rootDir */\n    themePath: {\n      init: \"source/theme\",\n      check: \"String\"\n    },\n\n    /** The path to translation files, relative to rootDir */\n    translationPath: {\n      init: \"source/translation\",\n      check: \"String\"\n    },\n\n    /** {WebFont[]} List of webfonts provided */\n    webFonts: {\n      init: null,\n      nullable: true,\n      check: \"Array\"\n    },\n\n    /** Array of external scripts required by the library */\n    addScript: {\n      init: null\n    },\n\n    /** Array of external stylesheets required by the library */\n    addCss: {\n      init: null\n    },\n\n    /**  Array of requires resources of the library */\n    requires: {\n      init: null\n    }\n  },\n\n  members: {\n    __knownSymbols: null,\n    __sourceFileExtensions: null,\n    __promiseLoadManifest: null,\n    __environmentChecks: null,\n\n    /**\n     * Transform for rootDir; converts it to an absolute path\n     * @param value\n     * @returns {*}\n     * @private\n     */\n    _transformRootDir(value) {\n      //      if (value)\n      //        value = path.resolve(value);\n      return value;\n    },\n\n    /**\n     * Loads the Manifest.json from the directory and uses it to configure\n     * properties\n     * @param loadFromDir {String} directory\n     */\n    loadManifest(loadFromDir) {\n      if (this.__promiseLoadManifest) {\n        return this.__promiseLoadManifest;\n      }\n      return (this.__promiseLoadManifest =\n        this.__loadManifestImpl(loadFromDir));\n    },\n\n    async __loadManifestImpl(loadFromDir) {\n      var Console = qx.tool.compiler.Console.getInstance();\n      let rootDir = loadFromDir;\n\n      rootDir = await qx.tool.utils.files.Utils.correctCase(\n        path.resolve(loadFromDir)\n      );\n\n      this.setRootDir(rootDir);\n      let data = await qx.tool.utils.Json.loadJsonAsync(\n        rootDir + \"/Manifest.json\"\n      );\n\n      if (!data) {\n        throw new Error(\n          Console.decode(\"qx.tool.compiler.library.emptyManifest\", rootDir)\n        );\n      }\n      this.setNamespace(data.provides.namespace);\n      this.setVersion(data.info.version);\n      if (data.provides.environmentChecks) {\n        for (var key in data.provides.environmentChecks) {\n          let check = data.provides.environmentChecks[key];\n          let pos = key.indexOf(\"*\");\n          if (pos > -1) {\n            this.__environmentChecks[key] = {\n              matchString: key.substring(0, pos),\n              startsWith: true,\n              className: check\n            };\n          } else {\n            this.__environmentChecks[key] = {\n              matchString: key,\n              className: check\n            };\n          }\n        }\n      }\n\n      const fixLibraryPath = async dir => {\n        let d = path.resolve(rootDir, dir);\n        if (!fs.existsSync(d)) {\n          this.warn(\n            Console.decode(\n              \"qx.tool.compiler.library.cannotFindPath\",\n              this.getNamespace(),\n              dir\n            )\n          );\n\n          return dir;\n        }\n        let correctedDir = await qx.tool.utils.files.Utils.correctCase(d);\n        if (\n          correctedDir.substring(0, rootDir.length + 1) !=\n          rootDir + path.sep\n        ) {\n          this.warn(\n            Console.decode(\n              \"qx.tool.compiler.library.cannotCorrectCase\",\n              rootDir\n            )\n          );\n\n          return dir;\n        }\n        correctedDir = correctedDir.substring(rootDir.length + 1);\n        return correctedDir;\n      };\n\n      let sourcePath = await fixLibraryPath(data.provides[\"class\"]);\n      this.setSourcePath(sourcePath);\n      if (data.provides.resource) {\n        let resourcePath = await fixLibraryPath(data.provides.resource);\n        this.setResourcePath(resourcePath);\n      }\n      this.setLibraryInfo(data.info);\n      if (data.provides.transpiled) {\n        this.setTranspiledPath(data.provides.transpiled);\n      } else {\n        var m = sourcePath.match(/^(.*)\\/([^/]+)$/);\n        if (m && m.length == 3) {\n          this.setTranspiledPath(m[1] + \"/transpiled\");\n        } else {\n          this.setTranspiledPath(\"transpiled\");\n        }\n      }\n      if (data.provides.translation) {\n        this.setTranslationPath(data.provides.translation);\n      }\n      if (data.provides.webfonts) {\n        var fonts = [];\n        data.provides.webfonts.forEach(wf => {\n          var font = new qx.tool.compiler.app.WebFont(this).set(wf);\n          fonts.push(font);\n        });\n        this.setWebFonts(fonts);\n      }\n      if (data.externalResources) {\n        if (data.externalResources.script) {\n          this.setAddScript(data.externalResources.script);\n        }\n        if (data.externalResources.css) {\n          this.setAddCss(data.externalResources.css);\n        }\n      }\n      if (data.requires) {\n        this.setRequires(data.requires);\n      }\n      if (data.provides && data.provides.boot) {\n        qx.tool.compiler.Console.print(\n          \"qx.tool.cli.compile.deprecatedProvidesBoot\",\n          rootDir\n        );\n      }\n    },\n\n    /**\n     * Scans the filing system looking for classes; there are occasions (ie Qooxdoo's qxWeb module)\n     * where the class name does not comply with the namespace, this method is used to find those\n     * files and also to prepopulate the known symbols list\n     * @param cb {Function} (err, classes) returns an array of class names\n     */\n    scanForClasses(cb) {\n      var t = this;\n      var classes = [];\n      function scanDir(folder, packageName, cb) {\n        fs.readdir(folder, function (err, filenames) {\n          if (err) {\n            cb(err);\n            return;\n          }\n\n          async.each(\n            filenames,\n            function (filename, cb) {\n              if (filename[0] == \".\") {\n                cb();\n                return;\n              }\n              fs.stat(path.join(folder, filename), function (err, stat) {\n                if (err || !stat) {\n                  cb(err);\n                  return;\n                }\n\n                if (stat.isDirectory()) {\n                  var tmp = packageName;\n                  if (tmp.length) {\n                    tmp += \".\";\n                  }\n                  tmp += filename;\n                  scanDir(path.join(folder, filename), tmp, cb);\n                  return;\n                }\n\n                // Make sure it looks like a file\n                var match = filename.match(/(.*)(\\.\\w+)$/);\n                if (!match) {\n                  log.trace(\"Skipping file \" + folder + \"/\" + filename);\n                  cb();\n                  return;\n                }\n\n                // Class name\n                var className = match[1];\n                var extension = match[2];\n                if (packageName.length) {\n                  className = packageName + \".\" + className;\n                }\n\n                if (className.match(/__init__/)) {\n                  cb();\n                  return;\n                }\n                if (extension == \".js\" || extension == \".ts\") {\n                  t.__knownSymbols[className] = \"class\";\n                  t.__sourceFileExtensions[className] = extension;\n                  classes.push(className);\n                } else {\n                  t.__knownSymbols[filename] = \"resource\";\n                }\n                if (Boolean(packageName) && !t.__knownSymbols[packageName]) {\n                  t.__knownSymbols[packageName] = \"package\";\n                  var pos;\n                  tmp = packageName;\n                  while ((pos = tmp.lastIndexOf(\".\")) > -1) {\n                    tmp = tmp.substring(0, pos);\n                    t.__knownSymbols[tmp] = \"package\";\n                  }\n                }\n\n                cb();\n              });\n            },\n            cb\n          );\n        });\n      }\n\n      let rootDir = path.join(t.getRootDir(), t.getSourcePath());\n      if (!fs.existsSync(rootDir)) {\n        let Console = qx.tool.compiler.Console.getInstance();\n        qx.tool.compiler.Console.warn(\n          Console.decode(\n            \"qx.tool.compiler.library.cannotFindPath\",\n            t.getNamespace(),\n            rootDir\n          )\n        );\n\n        cb(null, []);\n        return;\n      }\n      scanDir(rootDir, \"\", function (err) {\n        cb(err, classes);\n      });\n    },\n\n    /**\n     * Detects the type of a symbol, \"class\", \"resource\", \"package\", \"environment\", or null if not found\n     *\n     * @param {String} name\n     * @return {{symbolType,name,className}?}\n     */\n    getSymbolType(name) {\n      if (!name.length) {\n        return null;\n      }\n      var t = this;\n\n      var type = this.__knownSymbols[name];\n\n      if (type) {\n        return {\n          symbolType: t.__knownSymbols[name],\n          className: type == \"class\" ? name : null,\n          name: name\n        };\n      }\n\n      function testEnvironment(check) {\n        if (!check) {\n          return null;\n        }\n        let match = false;\n        if (check.startsWith) {\n          match = name.startsWith(check.matchString);\n        } else {\n          match = name == check.matchString;\n        }\n        if (match) {\n          return {\n            symbolType: \"environment\",\n            className: check.className,\n            name: name\n          };\n        }\n        return null;\n      }\n\n      let result = testEnvironment(this.__environmentChecks[name]);\n      if (result) {\n        return result;\n      }\n      for (let key in this.__environmentChecks) {\n        let check = this.__environmentChecks[key];\n        if (check.startsWith) {\n          result = testEnvironment(check);\n          if (result !== null) {\n            return result;\n          }\n        }\n      }\n\n      var tmp = name;\n      var pos;\n      while ((pos = tmp.lastIndexOf(\".\")) > -1) {\n        tmp = tmp.substring(0, pos);\n        type = this.__knownSymbols[tmp];\n        if (type) {\n          if (type == \"class\") {\n            return { symbolType: \"member\", className: tmp, name: name };\n          }\n          return null;\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Checks whether the classname is an actual class, in this library\n     *\n     * @param classname {String} classname to look for\n     * @return {Boolean}\n     */\n    isClass(classname) {\n      var type = this.__knownSymbols[classname];\n      return type === \"class\";\n    },\n\n    /**\n     * Returns all known symbols as a map indexed by symbol name\n     */\n    getKnownSymbols() {\n      return this.__knownSymbols;\n    },\n\n    /**\n     * Returns the original extension of the class file that implemented the\n     * given class name.\n     *\n     * @param {String} className\n     */\n    getSourceFileExtension(className) {\n      return this.__sourceFileExtensions[className];\n    },\n\n    /**\n     * Returns the full filename for the file within this library\n     *\n     * @param filename {String} the filename relative to this library\n     * @return {String} the full filename\n     */\n    getFilename(filename) {\n      return path.join(this.getRootDir(), this.getSourcePath(), filename);\n    },\n\n    /**\n     * Returns the full filename for the file within this library's resources\n     *\n     * @param filename {String} the filename relative to this library\n     * @return {String} the full filename\n     */\n    getResourceFilename(filename) {\n      return path.join(this.getRootDir(), this.getResourcePath(), filename);\n    },\n\n    /**\n     * Returns the full filename for the file within this library's theme\n     *\n     * @param filename {String} the filename relative to this library\n     * @return {String} the full filename\n     */\n    getThemeFilename(filename) {\n      return path.join(this.getRootDir(), this.getThemePath(), filename);\n    }\n  },\n\n  statics: {\n    /**\n     * Helper method to create a Library instance and load it's manifest\n     *\n     * @param rootDir {String} directory of the library (must contain a Manifest.json)\n     * @return {Library}\n     */\n    async createLibrary(rootDir) {\n      let lib = new qx.tool.compiler.app.Library();\n      await lib.loadManifest(rootDir);\n      return lib;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}