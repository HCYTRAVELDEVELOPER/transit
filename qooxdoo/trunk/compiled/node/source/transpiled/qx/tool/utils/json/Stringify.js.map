{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "statics",
    "prettyPrint",
    "ast",
    "writer",
    "tool",
    "utils",
    "json",
    "Writer",
    "writeNode",
    "node",
    "type",
    "comments",
    "leadingComments",
    "write",
    "indent",
    "children",
    "forEach",
    "child",
    "index",
    "key",
    "value",
    "length",
    "trailingComments",
    "rawValue",
    "Error",
    "buffer",
    "reprint",
    "object",
    "prettyPojo",
    "tokenizer",
    "obj",
    "lang",
    "Type",
    "isArray",
    "elem",
    "first",
    "oldIndent",
    "matchIndent",
    "name",
    "resetIndent",
    "prettyPojoProperty",
    "startTokenIndex",
    "writeTokensUntil",
    "token",
    "tokens",
    "pretty",
    "str",
    "Stringify",
    "maxEndToken",
    "endToken",
    "undefined",
    "startToken",
    "isPlainObject",
    "childAstLookup",
    "childPropertyLookup",
    "i",
    "Tokenizer",
    "tokenTypes",
    "COMMA",
    "isLiteral",
    "isSameLiteral",
    "COMMENT",
    "WHITESPACE",
    "astToObject",
    "settings",
    "result",
    "push",
    "proto",
    "getPrototypeOf",
    "prototype"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/tool/utils/json/Stringify.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo\n *\n *    Copyright:\n *      2011-2019 Zenesis Limited, http://www.zenesis.com\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *\n * *********************************************************************** */\n\n/* eslint-disable no-redeclare */\n\n/**\n * Stringify\n */\nqx.Class.define(\"qx.tool.utils.json.Stringify\", {\n  extend: qx.core.Object,\n\n  statics: {\n    /**\n     * Pretty prints an AST tree\n     */\n    prettyPrint(ast) {\n      var writer = new qx.tool.utils.json.Writer();\n\n      /**\n       * Writes a node, used recursively\n       */\n      function writeNode(node) {\n        switch (node.type) {\n          case \"object\":\n            writer.comments(node.leadingComments);\n            writer.write(\"{\\n\").indent(+1);\n            node.children.forEach(function (child, index) {\n              if (index > 0) {\n                writer.write(\",\\n\");\n              }\n              writer.write('\"' + child.key.value + '\" : ');\n              writeNode(child.value);\n            });\n            if (node.children.length) {\n              writer.write(\"\\n\");\n            }\n            writer.comments(node.trailingComments);\n            writer.indent(-1).write(\"}\");\n            break;\n\n          case \"array\":\n            writer.comments(node.leadingComments);\n            writer.write(\"[\\n\").indent(+1);\n            node.children.forEach(function (child, index) {\n              if (index > 0) {\n                writer.write(\",\\n\");\n              }\n              writeNode(child.value);\n            });\n            if (node.children.length) {\n              writer.write(\"\\n\");\n            }\n            writer.comments(node.trailingComments);\n            writer.indent(-1).write(\"]\\n\");\n            break;\n\n          case \"property\":\n            writeNode(node.key);\n            writer.write(\" : \");\n            writeNode(node.value);\n            break;\n\n          case \"identifier\":\n            writer.write('\"' + node.value + '\"');\n            break;\n\n          case \"literal\":\n            writer.comments(node.leadingComments);\n            writer.write(node.rawValue);\n            writer.comments(node.trailingComments);\n            break;\n\n          default:\n            throw new Error(\"Unexpected node type '\" + node.type + \"'\");\n        }\n      }\n\n      writeNode(ast);\n\n      return writer.buffer;\n    },\n\n    /**\n     * Prints an object out, using the AST to preserve formatting and whitespace\n     * (and include comments) wherever possible.  Any parts of the object which\n     * do not have a corresponding AST tree will be pretty printed\n     *\n     * This is only really suitable for amendments to the object graph because\n     * preserving formatting & comments relies on a 1:1 comparison between the\n     * AST and the object.  This means that if you move a subset of an object to\n     * another part of the object graph, it will be seen as a deletion of one\n     * subset and a brand new subset - you will loose all comments as well as\n     * layout.\n     *\n     * @param object {Object}\n     * @param ast {Tokenizer}\n     * @return {String}\n     */\n    reprint(object, ast) {\n      var writer = new qx.tool.utils.json.Writer();\n\n      if (!ast) {\n        prettyPojo(object);\n        return writer.buffer;\n      }\n      var tokenizer = ast.tokenizer;\n\n      /*\n       * Pretty prints any old POJO or native value\n       */\n      function prettyPojo(obj) {\n        if (typeof obj == \"string\") {\n          writer.write('\"' + obj + '\"');\n        } else if (typeof obj == \"number\") {\n          writer.write(obj);\n        } else if (typeof obj == \"boolean\") {\n          writer.write(obj ? \"true\" : \"false\");\n        } else if (qx.lang.Type.isArray(obj)) {\n          writer.write(\"[ \");\n          obj.forEach(function (elem, index) {\n            if (index != 0) {\n              writer.write(\", \");\n            }\n            prettyPojo(elem);\n          });\n          writer.write(\" ]\");\n        } else {\n          var first = true;\n          var oldIndent = writer.matchIndent();\n          writer.write(\"{\\n\").indent(+1);\n          for (var name in obj) {\n            if (!first) {\n              writer.write(\",\\n\");\n            }\n            writer.write('\"' + name + '\": ');\n            prettyPojo(obj[name]);\n            first = false;\n          }\n          writer.write(\"\\n\").indent(-1).write(\"}\");\n          writer.resetIndent(oldIndent);\n        }\n      }\n\n      /*\n       * Pretty prints a key:value pair\n       */\n      function prettyPojoProperty(key, value) {\n        writer.write('\"' + key + '\": ');\n        prettyPojo(value);\n      }\n\n      /*\n       * Writes tokens which underly the AST, up to a given index\n       */\n      var startTokenIndex = 0;\n      function writeTokensUntil(index) {\n        if (startTokenIndex > -1) {\n          while (startTokenIndex < index) {\n            var token = tokenizer.tokens[startTokenIndex];\n            writer.write(token.rawValue || token.value);\n            startTokenIndex++;\n          }\n        }\n      }\n\n      /*\n       * Writes an object, comparing it with the AST node.  Used recursively\n       */\n      function writeNode(object, node) {\n        /*\n         * Pretty prints a node to the writer\n         */\n        function pretty(node) {\n          var str = qx.tool.utils.json.Stringify.prettyPrint(node);\n          writer.write(str);\n          startTokenIndex = -1;\n        }\n\n        /*\n         * Calculates the largest endToken\n         *\n         * @param endToken {Number} current largest endToken, or -1 for none\n         * @param node {AST Node}\n         */\n        function maxEndToken(endToken, node) {\n          var index;\n          if (node.endToken !== undefined) {\n            index = node.endToken;\n          } else if (node.startToken !== undefined) {\n            index = node.startToken;\n          } else {\n            return endToken;\n          }\n          if (endToken > index) {\n            return endToken;\n          }\n          return index;\n        }\n\n        // No startToken?  Then it was not parsed, pretty print it\n        if (node.startToken === undefined) {\n          pretty(node);\n          return;\n        }\n\n        switch (node.type) {\n          case \"object\":\n            // If it's not the correct type, then pretty print\n            if (!qx.tool.utils.json.Stringify.isPlainObject(object)) {\n              prettyPojo(object);\n              return;\n            }\n\n            // Create lookups\n            var childAstLookup = {};\n            node.children.forEach(function (child, index) {\n              childAstLookup[child.key.value] = child;\n            });\n            var childPropertyLookup = {};\n            for (var name in object) {\n              childPropertyLookup[name] = object[name];\n            }\n\n            // Opening brace\n            writeTokensUntil(node.startToken + 1);\n\n            // Output known children first\n            var endToken = -1;\n            var first = true;\n            for (var i = 0; i < node.children.length; i++) {\n              var child = node.children[i];\n              var key = child.key.value;\n              var value = object[key];\n\n              // Deleted a child?\n              if (value === undefined) {\n                writeTokensUntil(child.key.startToken);\n                startTokenIndex = child.value.endToken + 1;\n                if (first && i < node.children.length - 1) {\n                  while (\n                    tokenizer.tokens[startTokenIndex].type !=\n                    qx.tool.utils.json.Tokenizer.tokenTypes.COMMA\n                  ) {\n                    startTokenIndex++;\n                  }\n                  startTokenIndex++;\n                }\n                continue;\n              }\n\n              first = false;\n              endToken = maxEndToken(endToken, child.value);\n\n              // Write existing property\n              writeTokensUntil(child.value.startToken);\n              writeNode(value, child.value);\n              delete childPropertyLookup[key];\n            }\n\n            // Added properties\n            var first = node.children.length === 0;\n            var oldIndent = writer.matchIndent();\n            for (var name in childPropertyLookup) {\n              if (!first) {\n                writer.write(\",\\n\");\n                first = false;\n              }\n              prettyPojoProperty(name, childPropertyLookup[name]);\n            }\n\n            // Unindent and output the closing brace\n            writer.resetIndent(oldIndent);\n            if (endToken === -1) {\n              startTokenIndex = node.endToken;\n            } else {\n              startTokenIndex = endToken + 1;\n            }\n            writeTokensUntil(node.endToken + 1);\n            break;\n\n          case \"array\":\n            if (!qx.lang.Type.isArray(object)) {\n              prettyPojo(object);\n              return;\n            }\n\n            // Opening brace\n            writeTokensUntil(node.startToken + 1);\n\n            for (var i = 0; i < object.length; i++) {\n              var child =\n                i < node.children.length ? node.children[i] : undefined;\n              if (child !== undefined) {\n                writeTokensUntil(child.startToken);\n                writeNode(object[i], child);\n                startTokenIndex = child.endToken + 1;\n              } else {\n                var oldIndent = writer.matchIndent();\n                if (i != 0) {\n                  writer.write(\",\\n\");\n                }\n                prettyPojo(object[i]);\n                writer.resetIndent(oldIndent);\n                //startTokenIndex = node.endToken;\n              }\n            }\n\n            // Closing brace\n            writeTokensUntil(node.endToken + 1);\n            break;\n\n          case \"property\":\n            break;\n\n          case \"literal\":\n            // Check type\n            if (!qx.tool.utils.json.Stringify.isLiteral(object)) {\n              prettyPojo(object);\n              startTokenIndex = node.endToken + 1;\n              return;\n            }\n\n            // If it has not changed, then use the AST\n            if (qx.tool.utils.json.Stringify.isSameLiteral(node, object)) {\n              writeTokensUntil(node.startToken + 1);\n\n              // New value, but try and preserve prefix comment & whitespace\n            } else {\n              writeTokensUntil(node.startToken);\n              if (typeof object === \"string\") {\n                writer.write('\"' + object + '\"');\n              } else {\n                writer.write(object);\n              }\n              startTokenIndex = node.startToken + 1;\n            }\n            break;\n\n          default:\n            throw new Error(\"Unexpected node type '\" + node.type + \"'\");\n        }\n      }\n\n      // Go\n      writeNode(object, ast);\n\n      // Append any whitespace or comments which trail the JSON\n      if (startTokenIndex > -1) {\n        while (startTokenIndex < tokenizer.tokens.length) {\n          var token = tokenizer.tokens[startTokenIndex++];\n          if (\n            token.type != qx.tool.utils.json.Tokenizer.tokenTypes.COMMENT &&\n            token.type != qx.tool.utils.json.Tokenizer.tokenTypes.WHITESPACE\n          ) {\n            break;\n          }\n          writer.write(token.rawValue || token.value);\n        }\n      }\n\n      return writer.buffer;\n    },\n\n    /**\n     * Converts an AST into an ordinary POJO\n     */\n    astToObject(ast, settings) {\n      function writeNode(node) {\n        var result;\n\n        switch (node.type) {\n          case \"object\":\n            result = {};\n            node.children.forEach(function (child, index) {\n              result[child.key.value] = writeNode(child.value);\n            });\n            break;\n\n          case \"array\":\n            result = [];\n            node.children.forEach(function (child, index) {\n              result.push(writeNode(child));\n            });\n            break;\n\n          case \"literal\":\n            result = node.value;\n            break;\n\n          default:\n            throw new Error(\"Unexpected node type '\" + node.type + \"'\");\n        }\n\n        return result;\n      }\n\n      return writeNode(ast);\n    },\n\n    /**\n     * Detects whether the value is a native object\n     *\n     * @param obj {Object}\n     * @returns boolean\n     */\n    isPlainObject(obj) {\n      if (typeof obj === \"object\" && obj !== null) {\n        var proto = Object.getPrototypeOf(obj);\n        return proto === Object.prototype || proto === null;\n      }\n\n      return false;\n    },\n\n    /**\n     * Detects whether the value is a literal value\n     *\n     * @param obj {Object}\n     * @returns boolean\n     */\n    isLiteral(obj) {\n      if (\n        obj === null ||\n        typeof obj === \"string\" ||\n        typeof obj === \"number\" ||\n        typeof obj === \"boolean\"\n      ) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Compares a node to see if it is the same as a literal value\n     */\n    isSameLiteral(node, object) {\n      if (node.rawValue === null && object === null) {\n        return true;\n      }\n      if (\n        (node.rawValue !== null && object === null) ||\n        (node.rawValue === null && object !== null)\n      ) {\n        return false;\n      }\n      if (typeof node.value !== typeof object) {\n        return false;\n      }\n      if (typeof node.value === \"string\") {\n        return node.value === object;\n      }\n      return node.rawValue == object;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}