{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "fs",
    "require",
    "path",
    "process",
    "Class",
    "define",
    "extend",
    "tool",
    "cli",
    "commands",
    "Serve",
    "statics",
    "CONFIG_FILENAME",
    "YARGS_BUILDER",
    "describe",
    "default",
    "type",
    "getYargsCommand",
    "command",
    "builder",
    "res",
    "Object",
    "assign",
    "Compile",
    "Test",
    "watch",
    "events",
    "runTests",
    "construct",
    "argv",
    "__tests",
    "addListener",
    "evt",
    "exitCode",
    "getData",
    "failFast",
    "exit",
    "properties",
    "check",
    "event",
    "nullable",
    "init",
    "needsServer",
    "members",
    "addTest",
    "test",
    "core",
    "Assert",
    "assertInstance",
    "api",
    "addListenerOnce",
    "getName",
    "quiet",
    "compiler",
    "Console",
    "info",
    "error",
    "setExitCode",
    "push",
    "configFile",
    "existsSync",
    "join",
    "cwd",
    "hasListener",
    "length",
    "getCompilerApi",
    "beforeTests",
    "fireDataEventAsync",
    "execute",
    "Math",
    "min",
    "getExitCode",
    "__needsServer",
    "prototype",
    "call",
    "fireEvent",
    "disableWebserver",
    "getNeedsServer",
    "some"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/tool/cli/commands/Test.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2020 Henner Kollmann\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project\"s top-level directory for details.\n\n\n************************************************************************ */\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst process = require(\"process\");\n\n/**\n * Compiles the project, serves it up as a web page (default, can be turned off),\n * and dispatches the \"runTests\" event.\n *\n * All tests that should be run need to register themselves by the\n * test command. This is usually done in a `compile.js` file by either\n *\n * - adding a listener for the \"runTests\" event fired on the command\n * instance  in the `load()` method of the class extending {@link\n * qx.tool.cli.api.CompilerApi} or {@link qx.tool.cli.api.CompilerApi}.\n *\n * - or by implementing a `beforeTests()` method in the class\n * extending {@link qx.tool.cli.api.CompilerApi}\n *\n * The event and/or method is called with a {@link qx.event.type.Data}\n * containing the command instance.\n *\n */\nqx.Class.define(\"qx.tool.cli.commands.Test\", {\n  extend: qx.tool.cli.commands.Serve,\n\n  statics: {\n    /**\n     * The name of the file containing the compile config for the testrunner\n     * defaults to \"compile-test.json\"\n     */\n    CONFIG_FILENAME: \"compile-test.json\",\n\n    YARGS_BUILDER: {\n      \"fail-fast\": {\n        describe: \"Exit on first failing test\",\n        default: false,\n        type: \"boolean\"\n      },\n\n      \"disable-webserver\": {\n        describe: \"Disables the start of the webserver\",\n        default: false,\n        type: \"boolean\"\n      }\n    },\n\n    getYargsCommand() {\n      return {\n        command: \"test\",\n        describe: \"run test for current project\",\n        builder: (() => {\n          let res = Object.assign(\n            {},\n            qx.tool.cli.commands.Compile.YARGS_BUILDER,\n            qx.tool.cli.commands.Serve.YARGS_BUILDER,\n            qx.tool.cli.commands.Test.YARGS_BUILDER\n          );\n\n          delete res.watch;\n          delete res[\"machine-readable\"];\n          delete res[\"feedback\"];\n          delete res[\"show-startpage\"];\n          delete res[\"rebuild-startpage\"];\n          return res;\n        })()\n      };\n    }\n  },\n\n  events: {\n    /**\n     * Fired to start tests.\n     *\n     * The event data is the command instance:\n     *  cmd: {qx.tool.cli.commands.Test}\n     */\n    runTests: \"qx.event.type.Data\"\n  },\n\n  construct(argv) {\n    super(argv);\n    this.__tests = [];\n    this.addListener(\"changeExitCode\", evt => {\n      let exitCode = evt.getData();\n      // overwrite error code only in case of errors\n      if (exitCode !== 0 && argv.failFast) {\n        process.exit(exitCode);\n      }\n    });\n  },\n\n  properties: {\n    /**\n     * The exit code of all tests.\n     *\n     */\n    exitCode: {\n      check: \"Number\",\n      event: \"changeExitCode\",\n      nullable: false,\n      init: 0\n    },\n\n    /**\n     * Is the webserver instance needed for the test?\n     */\n    needsServer: {\n      check: \"Boolean\",\n      nullable: false,\n      init: false\n    }\n  },\n\n  members: {\n    /**\n     * @var {Array}\n     */\n    __tests: null,\n\n    /**\n     * add a test object and listens for the change of exitCode property\n     * @param {qx.tool.cli.api.Test} test\n     */\n    addTest(test) {\n      qx.core.Assert.assertInstance(test, qx.tool.cli.api.Test);\n      test.addListenerOnce(\"changeExitCode\", evt => {\n        let exitCode = evt.getData();\n        // handle result and inform user\n        if (exitCode === 0) {\n          if (test.getName() && !this.argv.quiet) {\n            qx.tool.compiler.Console.info(`Test '${test.getName()}' passed.`);\n          }\n        } else if (test.getName()) {\n          qx.tool.compiler.Console.error(\n            `Test '${test.getName()}' failed with exit code ${exitCode}.`\n          );\n        }\n        // overwrite error code only in case of errors\n        if (exitCode !== 0) {\n          this.setExitCode(exitCode);\n        }\n      });\n      this.__tests.push(test);\n      return test;\n    },\n\n    /**\n     * @Override\n     */\n    async process() {\n      this.argv.watch = false;\n      this.argv[\"machine-readable\"] = false;\n      this.argv[\"feedback\"] = false;\n      this.argv[\"show-startpage\"] = false;\n      // check for special test compiler config\n      if (\n        !this.argv.configFile &&\n        fs.existsSync(\n          path.join(process.cwd(), qx.tool.cli.commands.Test.CONFIG_FILENAME)\n        )\n      ) {\n        this.argv.configFile = qx.tool.cli.commands.Test.CONFIG_FILENAME;\n      }\n      this.addListener(\"making\", () => {\n        if (\n          !this.hasListener(\"runTests\") &&\n          this.__tests.length === 0 &&\n          (!this.getCompilerApi() ||\n            typeof this.getCompilerApi().beforeTests != \"function\")\n        ) {\n          qx.tool.compiler.Console.error(\n            `No tests are registered! You need to either register tests, or install a testrunner.\n             See documentation at https://qooxdoo.org/docs/#/development/testing/`\n          );\n\n          process.exit(-1);\n        }\n      });\n\n      this.addListener(\"afterStart\", async () => {\n        qx.tool.compiler.Console.info(`Running unit tests`);\n        await this.fireDataEventAsync(\"runTests\", this);\n        if (\n          this.getCompilerApi() &&\n          typeof this.getCompilerApi().beforeTests == \"function\"\n        ) {\n          await this.getCompilerApi().beforeTests(this);\n        }\n        for (let test of this.__tests) {\n          qx.tool.compiler.Console.info(`Running ${test.getName()}`);\n          await test.execute();\n        }\n        // for bash exitcode is not allowed to be more then 255!\n        process.exit(Math.min(255, this.getExitCode()));\n      });\n\n      if (this.__needsServer()) {\n        // start server\n        await super.process();\n      } else {\n        // compile only\n        await qx.tool.cli.commands.Compile.prototype.process.call(this);\n        // since the server is not started, manually fire the event necessary for firing the \"runTests\" event\n        this.fireEvent(\"afterStart\");\n      }\n    },\n\n    __needsServer() {\n      return (\n        !this.argv.disableWebserver &&\n        (this.getNeedsServer() ||\n          this.__tests.some(test => test.getNeedsServer()))\n      );\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}