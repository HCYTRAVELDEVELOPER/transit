{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "fs",
    "require",
    "path",
    "rimraf",
    "promisify",
    "stat",
    "mkdir",
    "readdir",
    "rename",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "statics",
    "findAllFiles",
    "dir",
    "fnEach",
    "filenames",
    "ex",
    "code",
    "Promise",
    "all",
    "map",
    "shortName",
    "filename",
    "join",
    "tmp",
    "isDirectory",
    "tool",
    "utils",
    "files",
    "Utils",
    "sync",
    "from",
    "to",
    "filter",
    "t",
    "copy",
    "statFrom",
    "statTo",
    "p",
    "resolve",
    "then",
    "file",
    "isFile",
    "result",
    "copyFile",
    "undefined",
    "reject",
    "catch",
    "err",
    "deleteRecursive",
    "mtime",
    "getTime",
    "size",
    "mkParentPath",
    "rs",
    "createReadStream",
    "flags",
    "encoding",
    "ws",
    "createWriteStream",
    "on",
    "pipe",
    "safeStat",
    "stats",
    "safeUnlink",
    "unlink",
    "safeRename",
    "rotateUnique",
    "length",
    "lastFile",
    "i",
    "name",
    "correctCase",
    "drivePrefix",
    "process",
    "platform",
    "match",
    "substring",
    "replace",
    "segs",
    "split",
    "currentDir",
    "index",
    "bumpToNext",
    "nextSeg",
    "next",
    "nextLowerCase",
    "toLowerCase",
    "exact",
    "insensitive"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/tool/utils/files/Utils.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo\n *\n *    Copyright:\n *      2011-2017 Zenesis Limited, http://www.zenesis.com\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *\n * *********************************************************************** */\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst rimraf = require(\"rimraf\");\n\nconst { promisify } = require(\"util\");\nconst stat = promisify(fs.stat);\nconst mkdir = promisify(fs.mkdir);\nconst readdir = promisify(fs.readdir);\nconst rename = promisify(fs.rename);\n\nqx.Class.define(\"qx.tool.utils.files.Utils\", {\n  extend: qx.core.Object,\n\n  statics: {\n    async findAllFiles(dir, fnEach) {\n      let filenames;\n      try {\n        filenames = await readdir(dir);\n      } catch (ex) {\n        if (ex.code == \"ENOENT\") {\n          return;\n        }\n        throw ex;\n      }\n      await qx.Promise.all(\n        filenames.map(async shortName => {\n          let filename = path.join(dir, shortName);\n          let tmp = await stat(filename);\n          if (tmp.isDirectory()) {\n            await qx.tool.utils.files.Utils.findAllFiles(filename, fnEach);\n          } else {\n            await fnEach(filename);\n          }\n        })\n      );\n    },\n\n    /**\n     * Synchronises two files or folders; files are copied from/to but only if their\n     * modification time or size has changed.\n     * @param from {String} path to copy from\n     * @param to {String} path to copy to\n     * @param filter {Function?} optional filter method to validate filenames before sync\n     * @async\n     */\n    sync(from, to, filter) {\n      var t = this;\n\n      function copy(statFrom, statTo) {\n        if (statFrom.isDirectory()) {\n          var p;\n          if (statTo === null) {\n            p = mkdir(to);\n          } else {\n            p = Promise.resolve();\n          }\n          return p.then(() =>\n            readdir(from).then(files =>\n              Promise.all(\n                files.map(file =>\n                  t.sync(path.join(from, file), path.join(to, file), filter)\n                )\n              )\n            )\n          );\n        } else if (statFrom.isFile()) {\n          return qx.Promise.resolve(filter ? filter(from, to) : true).then(\n            result => result && t.copyFile(from, to)\n          );\n        }\n        return undefined;\n      }\n\n      return new Promise((resolve, reject) => {\n        var statFrom = null;\n        var statTo = null;\n\n        stat(from)\n          .then(tmp => {\n            statFrom = tmp;\n            return stat(to)\n              .then(tmp => (statTo = tmp))\n              .catch(err => {\n                if (err.code !== \"ENOENT\") {\n                  throw err;\n                }\n              });\n          })\n          .then(() => {\n            if (!statTo || statFrom.isDirectory() != statTo.isDirectory()) {\n              return t.deleteRecursive(to).then(() => copy(statFrom, statTo));\n            } else if (\n              statFrom.isDirectory() ||\n              statFrom.mtime.getTime() > statTo.mtime.getTime() ||\n              statFrom.size != statTo.size\n            ) {\n              return copy(statFrom, statTo);\n            }\n            return undefined;\n          })\n          .then(resolve)\n          .catch(reject);\n      });\n    },\n\n    /**\n     * Copies a file\n     * @param from {String} path to copy from\n     * @param to {String} path to copy to\n     * @async\n     */\n    copyFile(from, to) {\n      return new Promise((resolve, reject) => {\n        qx.tool.utils.Utils.mkParentPath(to, function () {\n          var rs = fs.createReadStream(from, {\n            flags: \"r\",\n            encoding: \"binary\"\n          });\n\n          var ws = fs.createWriteStream(to, { flags: \"w\", encoding: \"binary\" });\n          rs.on(\"end\", function () {\n            resolve(from, to);\n          });\n          rs.on(\"error\", reject);\n          ws.on(\"error\", reject);\n          rs.pipe(ws);\n        });\n      });\n    },\n\n    /**\n     * Returns the stats for a file, or null if the file does not exist\n     *\n     * @param filename\n     * @returns {fs.Stat}\n     * @async\n     */\n    safeStat(filename) {\n      return new Promise((resolve, reject) => {\n        fs.stat(filename, function (err, stats) {\n          if (err && err.code != \"ENOENT\") {\n            reject(err);\n          } else {\n            resolve(err ? null : stats);\n          }\n        });\n      });\n    },\n\n    /**\n     * Deletes a file, does nothing if the file does not exist\n     *\n     * @param filename {String} file to delete\n     * @async\n     */\n    safeUnlink(filename) {\n      return new Promise((resolve, reject) => {\n        fs.unlink(filename, function (err) {\n          if (err && err.code != \"ENOENT\") {\n            reject(err);\n          } else {\n            resolve();\n          }\n        });\n      });\n    },\n\n    /**\n     * Renames a file, does nothing if the file does not exist\n     *\n     * @param from {String} file to rename\n     * @param to {String} new filename\n     * @async\n     */\n    safeRename(from, to) {\n      return new Promise((resolve, reject) => {\n        fs.rename(from, to, function (err) {\n          if (err && err.code != \"ENOENT\") {\n            reject(err);\n          } else {\n            resolve();\n          }\n        });\n      });\n    },\n\n    /**\n     * Rotates files so that this file does not exist, by renaming the existing file to have a \".1\"\n     * appended, and the \".1\" to be renamed to \".2\" etc, up to `length` versions\n     *\n     * @param filename {String} filename to rotate\n     * @param length {Integer} maximum number of files\n     * @async\n     */\n    async rotateUnique(filename, length) {\n      if ((await this.safeStat(filename)) && length > 1) {\n        var lastFile = null;\n        for (var i = length; i > 0; i--) {\n          var tmp = filename + \".\" + i;\n          if (i == length) {\n            await this.safeUnlink(tmp);\n          } else if (await this.safeStat(tmp)) {\n            await rename(tmp, lastFile);\n          }\n          lastFile = tmp;\n        }\n        await rename(filename, lastFile);\n      }\n    },\n\n    /**\n     * Deletes a file or directory; directories are recursively removed\n     * @param name {String} file or dir to delete\n     * @async\n     */\n    deleteRecursive(name) {\n      return new Promise((resolve, reject) => {\n        rimraf(name, err => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve();\n          }\n        });\n      });\n    },\n\n    /**\n     * Normalises the path and corrects the case of the path to match what is actually on the filing system\n     *\n     * @param dir {String} the filename to normalise\n     * @returns {String} the new path\n     * @async\n     */\n    correctCase(dir) {\n      var drivePrefix = \"\";\n      if (process.platform === \"win32\" && dir.match(/^[a-zA-Z]:/)) {\n        drivePrefix = dir.substring(0, 2);\n        dir = dir.substring(2);\n      }\n      dir = dir.replace(/\\\\/g, \"/\");\n      var segs = dir.split(\"/\");\n      if (!segs.length) {\n        return drivePrefix + dir;\n      }\n\n      var currentDir;\n      var index;\n      if (segs[0].length) {\n        currentDir = \"\";\n        index = 0;\n      } else {\n        currentDir = \"/\";\n        index = 1;\n      }\n\n      function bumpToNext(nextSeg) {\n        index++;\n        if (currentDir.length && currentDir !== \"/\") {\n          currentDir += \"/\";\n        }\n        currentDir += nextSeg;\n        return next();\n      }\n\n      function next() {\n        if (index == segs.length) {\n          if (process.platform === \"win32\") {\n            currentDir = currentDir.replace(/\\//g, \"\\\\\");\n          }\n          return Promise.resolve(drivePrefix + currentDir);\n        }\n\n        let nextSeg = segs[index];\n        if (nextSeg == \".\" || nextSeg == \"..\") {\n          return bumpToNext(nextSeg);\n        }\n\n        return new Promise((resolve, reject) => {\n          fs.readdir(\n            currentDir.length == 0 ? \".\" : drivePrefix + currentDir,\n            { encoding: \"utf8\" },\n            (err, files) => {\n              if (err) {\n                reject(err);\n                return;\n              }\n\n              let nextLowerCase = nextSeg.toLowerCase();\n              let exact = false;\n              let insensitive = null;\n              for (let i = 0; i < files.length; i++) {\n                if (files[i] === nextSeg) {\n                  exact = true;\n                  break;\n                }\n                if (files[i].toLowerCase() === nextLowerCase) {\n                  insensitive = files[i];\n                }\n              }\n              if (!exact && insensitive) {\n                nextSeg = insensitive;\n              }\n\n              bumpToNext(nextSeg).then(resolve);\n            }\n          );\n        });\n      }\n\n      return new Promise((resolve, reject) => {\n        fs.stat(drivePrefix + dir, err => {\n          if (err) {\n            if (err.code == \"ENOENT\") {\n              resolve(drivePrefix + dir);\n            } else {\n              reject(err);\n            }\n          } else {\n            next().then(resolve);\n          }\n        });\n      });\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEA,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;EACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;EACA,MAAME,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;EAEA,MAAM;IAAEG;EAAF,IAAgBH,OAAO,CAAC,MAAD,CAA7B;;EACA,MAAMI,IAAI,GAAGD,SAAS,CAACJ,EAAE,CAACK,IAAJ,CAAtB;EACA,MAAMC,KAAK,GAAGF,SAAS,CAACJ,EAAE,CAACM,KAAJ,CAAvB;EACA,MAAMC,OAAO,GAAGH,SAAS,CAACJ,EAAE,CAACO,OAAJ,CAAzB;EACA,MAAMC,MAAM,GAAGJ,SAAS,CAACJ,EAAE,CAACQ,MAAJ,CAAxB;EAEAZ,EAAE,CAACa,KAAH,CAASC,MAAT,CAAgB,2BAAhB,EAA6C;IAC3CC,MAAM,EAAEf,EAAE,CAACgB,IAAH,CAAQC,MAD2B;IAG3CC,OAAO,EAAE;MACP,MAAMC,YAAN,CAAmBC,GAAnB,EAAwBC,MAAxB,EAAgC;QAC9B,IAAIC,SAAJ;;QACA,IAAI;UACFA,SAAS,GAAG,MAAMX,OAAO,CAACS,GAAD,CAAzB;QACD,CAFD,CAEE,OAAOG,EAAP,EAAW;UACX,IAAIA,EAAE,CAACC,IAAH,IAAW,QAAf,EAAyB;YACvB;UACD;;UACD,MAAMD,EAAN;QACD;;QACD,MAAMvB,EAAE,CAACyB,OAAH,CAAWC,GAAX,CACJJ,SAAS,CAACK,GAAV,CAAc,MAAMC,SAAN,IAAmB;UAC/B,IAAIC,QAAQ,GAAGvB,IAAI,CAACwB,IAAL,CAAUV,GAAV,EAAeQ,SAAf,CAAf;UACA,IAAIG,GAAG,GAAG,MAAMtB,IAAI,CAACoB,QAAD,CAApB;;UACA,IAAIE,GAAG,CAACC,WAAJ,EAAJ,EAAuB;YACrB,MAAMhC,EAAE,CAACiC,IAAH,CAAQC,KAAR,CAAcC,KAAd,CAAoBC,KAApB,CAA0BjB,YAA1B,CAAuCU,QAAvC,EAAiDR,MAAjD,CAAN;UACD,CAFD,MAEO;YACL,MAAMA,MAAM,CAACQ,QAAD,CAAZ;UACD;QACF,CARD,CADI,CAAN;MAWD,CAtBM;;MAwBP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIQ,IAAI,CAACC,IAAD,EAAOC,EAAP,EAAWC,MAAX,EAAmB;QACrB,IAAIC,CAAC,GAAG,IAAR;;QAEA,SAASC,IAAT,CAAcC,QAAd,EAAwBC,MAAxB,EAAgC;UAC9B,IAAID,QAAQ,CAACX,WAAT,EAAJ,EAA4B;YAC1B,IAAIa,CAAJ;;YACA,IAAID,MAAM,KAAK,IAAf,EAAqB;cACnBC,CAAC,GAAGnC,KAAK,CAAC6B,EAAD,CAAT;YACD,CAFD,MAEO;cACLM,CAAC,GAAGpB,OAAO,CAACqB,OAAR,EAAJ;YACD;;YACD,OAAOD,CAAC,CAACE,IAAF,CAAO,MACZpC,OAAO,CAAC2B,IAAD,CAAP,CAAcS,IAAd,CAAmBZ,KAAK,IACtBV,OAAO,CAACC,GAAR,CACES,KAAK,CAACR,GAAN,CAAUqB,IAAI,IACZP,CAAC,CAACJ,IAAF,CAAO/B,IAAI,CAACwB,IAAL,CAAUQ,IAAV,EAAgBU,IAAhB,CAAP,EAA8B1C,IAAI,CAACwB,IAAL,CAAUS,EAAV,EAAcS,IAAd,CAA9B,EAAmDR,MAAnD,CADF,CADF,CADF,CADK,CAAP;UASD,CAhBD,MAgBO,IAAIG,QAAQ,CAACM,MAAT,EAAJ,EAAuB;YAC5B,OAAOjD,EAAE,CAACyB,OAAH,CAAWqB,OAAX,CAAmBN,MAAM,GAAGA,MAAM,CAACF,IAAD,EAAOC,EAAP,CAAT,GAAsB,IAA/C,EAAqDQ,IAArD,CACLG,MAAM,IAAIA,MAAM,IAAIT,CAAC,CAACU,QAAF,CAAWb,IAAX,EAAiBC,EAAjB,CADf,CAAP;UAGD;;UACD,OAAOa,SAAP;QACD;;QAED,OAAO,IAAI3B,OAAJ,CAAY,CAACqB,OAAD,EAAUO,MAAV,KAAqB;UACtC,IAAIV,QAAQ,GAAG,IAAf;UACA,IAAIC,MAAM,GAAG,IAAb;UAEAnC,IAAI,CAAC6B,IAAD,CAAJ,CACGS,IADH,CACQhB,GAAG,IAAI;YACXY,QAAQ,GAAGZ,GAAX;YACA,OAAOtB,IAAI,CAAC8B,EAAD,CAAJ,CACJQ,IADI,CACChB,GAAG,IAAKa,MAAM,GAAGb,GADlB,EAEJuB,KAFI,CAEEC,GAAG,IAAI;cACZ,IAAIA,GAAG,CAAC/B,IAAJ,KAAa,QAAjB,EAA2B;gBACzB,MAAM+B,GAAN;cACD;YACF,CANI,CAAP;UAOD,CAVH,EAWGR,IAXH,CAWQ,MAAM;YACV,IAAI,CAACH,MAAD,IAAWD,QAAQ,CAACX,WAAT,MAA0BY,MAAM,CAACZ,WAAP,EAAzC,EAA+D;cAC7D,OAAOS,CAAC,CAACe,eAAF,CAAkBjB,EAAlB,EAAsBQ,IAAtB,CAA2B,MAAML,IAAI,CAACC,QAAD,EAAWC,MAAX,CAArC,CAAP;YACD,CAFD,MAEO,IACLD,QAAQ,CAACX,WAAT,MACAW,QAAQ,CAACc,KAAT,CAAeC,OAAf,KAA2Bd,MAAM,CAACa,KAAP,CAAaC,OAAb,EAD3B,IAEAf,QAAQ,CAACgB,IAAT,IAAiBf,MAAM,CAACe,IAHnB,EAIL;cACA,OAAOjB,IAAI,CAACC,QAAD,EAAWC,MAAX,CAAX;YACD;;YACD,OAAOQ,SAAP;UACD,CAtBH,EAuBGL,IAvBH,CAuBQD,OAvBR,EAwBGQ,KAxBH,CAwBSD,MAxBT;QAyBD,CA7BM,CAAP;MA8BD,CA1FM;;MA4FP;AACJ;AACA;AACA;AACA;AACA;MACIF,QAAQ,CAACb,IAAD,EAAOC,EAAP,EAAW;QACjB,OAAO,IAAId,OAAJ,CAAY,CAACqB,OAAD,EAAUO,MAAV,KAAqB;UACtCrD,EAAE,CAACiC,IAAH,CAAQC,KAAR,CAAcE,KAAd,CAAoBwB,YAApB,CAAiCrB,EAAjC,EAAqC,YAAY;YAC/C,IAAIsB,EAAE,GAAGzD,EAAE,CAAC0D,gBAAH,CAAoBxB,IAApB,EAA0B;cACjCyB,KAAK,EAAE,GAD0B;cAEjCC,QAAQ,EAAE;YAFuB,CAA1B,CAAT;YAKA,IAAIC,EAAE,GAAG7D,EAAE,CAAC8D,iBAAH,CAAqB3B,EAArB,EAAyB;cAAEwB,KAAK,EAAE,GAAT;cAAcC,QAAQ,EAAE;YAAxB,CAAzB,CAAT;YACAH,EAAE,CAACM,EAAH,CAAM,KAAN,EAAa,YAAY;cACvBrB,OAAO,CAACR,IAAD,EAAOC,EAAP,CAAP;YACD,CAFD;YAGAsB,EAAE,CAACM,EAAH,CAAM,OAAN,EAAed,MAAf;YACAY,EAAE,CAACE,EAAH,CAAM,OAAN,EAAed,MAAf;YACAQ,EAAE,CAACO,IAAH,CAAQH,EAAR;UACD,CAbD;QAcD,CAfM,CAAP;MAgBD,CAnHM;;MAqHP;AACJ;AACA;AACA;AACA;AACA;AACA;MACII,QAAQ,CAACxC,QAAD,EAAW;QACjB,OAAO,IAAIJ,OAAJ,CAAY,CAACqB,OAAD,EAAUO,MAAV,KAAqB;UACtCjD,EAAE,CAACK,IAAH,CAAQoB,QAAR,EAAkB,UAAU0B,GAAV,EAAee,KAAf,EAAsB;YACtC,IAAIf,GAAG,IAAIA,GAAG,CAAC/B,IAAJ,IAAY,QAAvB,EAAiC;cAC/B6B,MAAM,CAACE,GAAD,CAAN;YACD,CAFD,MAEO;cACLT,OAAO,CAACS,GAAG,GAAG,IAAH,GAAUe,KAAd,CAAP;YACD;UACF,CAND;QAOD,CARM,CAAP;MASD,CAtIM;;MAwIP;AACJ;AACA;AACA;AACA;AACA;MACIC,UAAU,CAAC1C,QAAD,EAAW;QACnB,OAAO,IAAIJ,OAAJ,CAAY,CAACqB,OAAD,EAAUO,MAAV,KAAqB;UACtCjD,EAAE,CAACoE,MAAH,CAAU3C,QAAV,EAAoB,UAAU0B,GAAV,EAAe;YACjC,IAAIA,GAAG,IAAIA,GAAG,CAAC/B,IAAJ,IAAY,QAAvB,EAAiC;cAC/B6B,MAAM,CAACE,GAAD,CAAN;YACD,CAFD,MAEO;cACLT,OAAO;YACR;UACF,CAND;QAOD,CARM,CAAP;MASD,CAxJM;;MA0JP;AACJ;AACA;AACA;AACA;AACA;AACA;MACI2B,UAAU,CAACnC,IAAD,EAAOC,EAAP,EAAW;QACnB,OAAO,IAAId,OAAJ,CAAY,CAACqB,OAAD,EAAUO,MAAV,KAAqB;UACtCjD,EAAE,CAACQ,MAAH,CAAU0B,IAAV,EAAgBC,EAAhB,EAAoB,UAAUgB,GAAV,EAAe;YACjC,IAAIA,GAAG,IAAIA,GAAG,CAAC/B,IAAJ,IAAY,QAAvB,EAAiC;cAC/B6B,MAAM,CAACE,GAAD,CAAN;YACD,CAFD,MAEO;cACLT,OAAO;YACR;UACF,CAND;QAOD,CARM,CAAP;MASD,CA3KM;;MA6KP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACI,MAAM4B,YAAN,CAAmB7C,QAAnB,EAA6B8C,MAA7B,EAAqC;QACnC,IAAI,CAAC,MAAM,KAAKN,QAAL,CAAcxC,QAAd,CAAP,KAAmC8C,MAAM,GAAG,CAAhD,EAAmD;UACjD,IAAIC,QAAQ,GAAG,IAAf;;UACA,KAAK,IAAIC,CAAC,GAAGF,MAAb,EAAqBE,CAAC,GAAG,CAAzB,EAA4BA,CAAC,EAA7B,EAAiC;YAC/B,IAAI9C,GAAG,GAAGF,QAAQ,GAAG,GAAX,GAAiBgD,CAA3B;;YACA,IAAIA,CAAC,IAAIF,MAAT,EAAiB;cACf,MAAM,KAAKJ,UAAL,CAAgBxC,GAAhB,CAAN;YACD,CAFD,MAEO,IAAI,MAAM,KAAKsC,QAAL,CAActC,GAAd,CAAV,EAA8B;cACnC,MAAMnB,MAAM,CAACmB,GAAD,EAAM6C,QAAN,CAAZ;YACD;;YACDA,QAAQ,GAAG7C,GAAX;UACD;;UACD,MAAMnB,MAAM,CAACiB,QAAD,EAAW+C,QAAX,CAAZ;QACD;MACF,CAnMM;;MAqMP;AACJ;AACA;AACA;AACA;MACIpB,eAAe,CAACsB,IAAD,EAAO;QACpB,OAAO,IAAIrD,OAAJ,CAAY,CAACqB,OAAD,EAAUO,MAAV,KAAqB;UACtC9C,MAAM,CAACuE,IAAD,EAAOvB,GAAG,IAAI;YAClB,IAAIA,GAAJ,EAAS;cACPF,MAAM,CAACE,GAAD,CAAN;YACD,CAFD,MAEO;cACLT,OAAO;YACR;UACF,CANK,CAAN;QAOD,CARM,CAAP;MASD,CApNM;;MAsNP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIiC,WAAW,CAAC3D,GAAD,EAAM;QACf,IAAI4D,WAAW,GAAG,EAAlB;;QACA,IAAIC,OAAO,CAACC,QAAR,KAAqB,OAArB,IAAgC9D,GAAG,CAAC+D,KAAJ,CAAU,YAAV,CAApC,EAA6D;UAC3DH,WAAW,GAAG5D,GAAG,CAACgE,SAAJ,CAAc,CAAd,EAAiB,CAAjB,CAAd;UACAhE,GAAG,GAAGA,GAAG,CAACgE,SAAJ,CAAc,CAAd,CAAN;QACD;;QACDhE,GAAG,GAAGA,GAAG,CAACiE,OAAJ,CAAY,KAAZ,EAAmB,GAAnB,CAAN;QACA,IAAIC,IAAI,GAAGlE,GAAG,CAACmE,KAAJ,CAAU,GAAV,CAAX;;QACA,IAAI,CAACD,IAAI,CAACX,MAAV,EAAkB;UAChB,OAAOK,WAAW,GAAG5D,GAArB;QACD;;QAED,IAAIoE,UAAJ;QACA,IAAIC,KAAJ;;QACA,IAAIH,IAAI,CAAC,CAAD,CAAJ,CAAQX,MAAZ,EAAoB;UAClBa,UAAU,GAAG,EAAb;UACAC,KAAK,GAAG,CAAR;QACD,CAHD,MAGO;UACLD,UAAU,GAAG,GAAb;UACAC,KAAK,GAAG,CAAR;QACD;;QAED,SAASC,UAAT,CAAoBC,OAApB,EAA6B;UAC3BF,KAAK;;UACL,IAAID,UAAU,CAACb,MAAX,IAAqBa,UAAU,KAAK,GAAxC,EAA6C;YAC3CA,UAAU,IAAI,GAAd;UACD;;UACDA,UAAU,IAAIG,OAAd;UACA,OAAOC,IAAI,EAAX;QACD;;QAED,SAASA,IAAT,GAAgB;UACd,IAAIH,KAAK,IAAIH,IAAI,CAACX,MAAlB,EAA0B;YACxB,IAAIM,OAAO,CAACC,QAAR,KAAqB,OAAzB,EAAkC;cAChCM,UAAU,GAAGA,UAAU,CAACH,OAAX,CAAmB,KAAnB,EAA0B,IAA1B,CAAb;YACD;;YACD,OAAO5D,OAAO,CAACqB,OAAR,CAAgBkC,WAAW,GAAGQ,UAA9B,CAAP;UACD;;UAED,IAAIG,OAAO,GAAGL,IAAI,CAACG,KAAD,CAAlB;;UACA,IAAIE,OAAO,IAAI,GAAX,IAAkBA,OAAO,IAAI,IAAjC,EAAuC;YACrC,OAAOD,UAAU,CAACC,OAAD,CAAjB;UACD;;UAED,OAAO,IAAIlE,OAAJ,CAAY,CAACqB,OAAD,EAAUO,MAAV,KAAqB;YACtCjD,EAAE,CAACO,OAAH,CACE6E,UAAU,CAACb,MAAX,IAAqB,CAArB,GAAyB,GAAzB,GAA+BK,WAAW,GAAGQ,UAD/C,EAEE;cAAExB,QAAQ,EAAE;YAAZ,CAFF,EAGE,CAACT,GAAD,EAAMpB,KAAN,KAAgB;cACd,IAAIoB,GAAJ,EAAS;gBACPF,MAAM,CAACE,GAAD,CAAN;gBACA;cACD;;cAED,IAAIsC,aAAa,GAAGF,OAAO,CAACG,WAAR,EAApB;cACA,IAAIC,KAAK,GAAG,KAAZ;cACA,IAAIC,WAAW,GAAG,IAAlB;;cACA,KAAK,IAAInB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG1C,KAAK,CAACwC,MAA1B,EAAkCE,CAAC,EAAnC,EAAuC;gBACrC,IAAI1C,KAAK,CAAC0C,CAAD,CAAL,KAAac,OAAjB,EAA0B;kBACxBI,KAAK,GAAG,IAAR;kBACA;gBACD;;gBACD,IAAI5D,KAAK,CAAC0C,CAAD,CAAL,CAASiB,WAAT,OAA2BD,aAA/B,EAA8C;kBAC5CG,WAAW,GAAG7D,KAAK,CAAC0C,CAAD,CAAnB;gBACD;cACF;;cACD,IAAI,CAACkB,KAAD,IAAUC,WAAd,EAA2B;gBACzBL,OAAO,GAAGK,WAAV;cACD;;cAEDN,UAAU,CAACC,OAAD,CAAV,CAAoB5C,IAApB,CAAyBD,OAAzB;YACD,CA1BH;UA4BD,CA7BM,CAAP;QA8BD;;QAED,OAAO,IAAIrB,OAAJ,CAAY,CAACqB,OAAD,EAAUO,MAAV,KAAqB;UACtCjD,EAAE,CAACK,IAAH,CAAQuE,WAAW,GAAG5D,GAAtB,EAA2BmC,GAAG,IAAI;YAChC,IAAIA,GAAJ,EAAS;cACP,IAAIA,GAAG,CAAC/B,IAAJ,IAAY,QAAhB,EAA0B;gBACxBsB,OAAO,CAACkC,WAAW,GAAG5D,GAAf,CAAP;cACD,CAFD,MAEO;gBACLiC,MAAM,CAACE,GAAD,CAAN;cACD;YACF,CAND,MAMO;cACLqC,IAAI,GAAG7C,IAAP,CAAYD,OAAZ;YACD;UACF,CAVD;QAWD,CAZM,CAAP;MAaD;;IAtTM;EAHkC,CAA7C;EAhCA9C,EAAE,CAACiC,IAAH,CAAQC,KAAR,CAAcC,KAAd,CAAoBC,KAApB,CAA0BjC,aAA1B,GAA0CA,aAA1C"
}