{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "name",
    "config",
    "include",
    "__normalizeArray",
    "patch",
    "core",
    "Environment",
    "get",
    "__validateConfig",
    "theme",
    "$$type",
    "title",
    "toString",
    "genericToString",
    "extend",
    "supertheme",
    "basename",
    "createNamespace",
    "__convert",
    "__initializeAliases",
    "$$registry",
    "i",
    "a",
    "l",
    "length",
    "boot",
    "objectOrArray",
    "isArray",
    "aliases",
    "objectMergeWith",
    "getAll",
    "getByName",
    "isDefined",
    "undefined",
    "getTotalNumber",
    "objectGetLength",
    "__extractType",
    "keys",
    "__inheritableKeys",
    "type",
    "clazz",
    "prototype",
    "$$clazz",
    "target",
    "source",
    "id",
    "base",
    "Error",
    "__allowedKeys",
    "select",
    "true",
    "colors",
    "borders",
    "decorations",
    "fonts",
    "icons",
    "widgets",
    "appearances",
    "meta",
    "default",
    "__metaKeys",
    "color",
    "border",
    "decoration",
    "font",
    "icon",
    "appearance",
    "widget",
    "allowed",
    "key",
    "maps",
    "Array",
    "RegExp",
    "Date",
    "classname",
    "counter",
    "value",
    "mixinTheme",
    "__checkForInvalidTheme",
    "errorObj",
    "stackTrace",
    "dev",
    "StackTrace",
    "getStackTraceFromError",
    "error",
    "Theme"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/Theme.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * Theme classes contain styling information for certain aspects of the\n * graphical user interface.\n *\n * Supported themes are: colors, decorations, fonts, icons, appearances.\n * The additional meta theme allows for grouping of the individual\n * themes.\n *\n * For more details, take a look at the\n * <a href='http://qooxdoo.org/docs/#desktop/gui/theming.md' target='_blank'>\n * documentation of the theme system in the qooxdoo manual.</a>\n */\nqx.Bootstrap.define(\"qx.Theme\", {\n  statics: {\n    /*\n    ---------------------------------------------------------------------------\n       PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Theme config\n     *\n     * Example:\n     * <pre class='javascript'>\n     * qx.Theme.define(\"name\",\n     * {\n     *   aliases : {\n     *     \"aliasKey\" : \"resourceFolderOrUri\"\n     *   },\n     *   extend : otherTheme,\n     *   include : [MMixinTheme],\n     *   patch : [MMixinTheme],\n     *   colors : {},\n     *   decorations : {},\n     *   fonts : {},\n     *   widgets : {},\n     *   appearances : {},\n     *   meta : {},\n     *   boot : function(){}\n     * });\n     * </pre>\n     *\n     * For more details, take a look at the\n     * <a href='http://qooxdoo.org/docs/#desktop/gui/theming.md' target='_blank'>\n     * documentation of the theme system in the qooxdoo manual.</a>\n     *\n     * @param name {String} name of the mixin\n     * @param config {Map} config structure\n     */\n    define(name, config) {\n      if (!config) {\n        var config = {};\n      }\n\n      config.include = this.__normalizeArray(config.include);\n      config.patch = this.__normalizeArray(config.patch);\n\n      // Validate incoming data\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.__validateConfig(name, config);\n      }\n\n      // Create alias\n      var theme = {\n        $$type: \"Theme\",\n        name: name,\n        title: config.title,\n\n        // Attach toString\n        toString: this.genericToString\n      };\n\n      // Remember extend\n      if (config.extend) {\n        theme.supertheme = config.extend;\n      }\n\n      // Assign to namespace\n      theme.basename = qx.Bootstrap.createNamespace(name, theme);\n\n      // Convert theme entry from Object to Function (for prototype inheritance)\n      this.__convert(theme, config);\n\n      this.__initializeAliases(theme, config);\n\n      // Store class reference in global class registry\n      this.$$registry[name] = theme;\n\n      // Include mixin themes\n      for (var i = 0, a = config.include, l = a.length; i < l; i++) {\n        this.include(theme, a[i]);\n      }\n\n      for (var i = 0, a = config.patch, l = a.length; i < l; i++) {\n        this.patch(theme, a[i]);\n      }\n\n      // Run boot code\n      if (config.boot) {\n        config.boot();\n      }\n    },\n\n    /**\n     * Normalize an object to an array\n     *\n     * @param objectOrArray {Object|Array} Either an object that is to be\n     *   normalized to an array, or an array, which is just passed through\n     *\n     * @return {Array} Either an array that has the original object as its\n     *   single item, or the original array itself\n     */\n    __normalizeArray(objectOrArray) {\n      if (!objectOrArray) {\n        return [];\n      }\n\n      if (qx.Bootstrap.isArray(objectOrArray)) {\n        return objectOrArray;\n      } else {\n        return [objectOrArray];\n      }\n    },\n\n    /**\n     * Initialize alias inheritance\n     *\n     * @param theme {Map} The theme\n     * @param config {Map} config structure\n     */\n    __initializeAliases(theme, config) {\n      var aliases = config.aliases || {};\n      if (config.extend && config.extend.aliases) {\n        qx.Bootstrap.objectMergeWith(aliases, config.extend.aliases, false);\n      }\n\n      theme.aliases = aliases;\n    },\n\n    /**\n     * Return a map of all known themes\n     *\n     * @return {Map} known themes\n     */\n    getAll() {\n      return this.$$registry;\n    },\n\n    /**\n     * Returns a theme by name\n     *\n     * @param name {String} theme name to check\n     * @return {Object ? void} theme object\n     */\n    getByName(name) {\n      return this.$$registry[name];\n    },\n\n    /**\n     * Determine if theme exists\n     *\n     * @param name {String} theme name to check\n     * @return {Boolean} true if theme exists\n     */\n    isDefined(name) {\n      return this.getByName(name) !== undefined;\n    },\n\n    /**\n     * Determine the number of themes which are defined\n     *\n     * @return {Number} the number of classes\n     */\n    getTotalNumber() {\n      return qx.Bootstrap.objectGetLength(this.$$registry);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n       PRIVATE/INTERNAL API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * This method will be attached to all themes to return\n     * a nice identifier for them.\n     *\n     * @internal\n     * @return {String} The interface identifier\n     */\n    genericToString() {\n      return \"[Theme \" + this.name + \"]\";\n    },\n\n    /**\n     * Extract the inheritable key (could be only one)\n     *\n     * @param config {Map} The map from where to extract the key\n     * @return {String} the key which was found\n     */\n    __extractType(config) {\n      for (\n        var i = 0, keys = this.__inheritableKeys, l = keys.length;\n        i < l;\n        i++\n      ) {\n        if (config[keys[i]]) {\n          return keys[i];\n        }\n      }\n    },\n\n    /**\n     * Convert existing entry to a prototype based inheritance function\n     *\n     * @param theme {Theme} newly created theme object\n     * @param config {Map} incoming theme configuration\n     */\n    __convert(theme, config) {\n      var type = this.__extractType(config);\n\n      // Use theme key from extended theme if own one is not available\n      if (config.extend && !type) {\n        type = config.extend.type;\n      }\n\n      // Save theme type\n      theme.type = type || \"other\";\n\n      // Create pseudo class\n      var clazz = function () {};\n\n      // Process extend config\n      if (config.extend) {\n        clazz.prototype = new config.extend.$$clazz();\n      }\n\n      var target = clazz.prototype;\n      var source = config[type];\n\n      // Copy entries to prototype\n      for (var id in source) {\n        target[id] = source[id];\n\n        // Appearance themes only:\n        // Convert base flag to class reference (needed for mixin support)\n        if (target[id].base) {\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            if (!config.extend) {\n              throw new Error(\n                \"Found base flag in entry '\" +\n                  id +\n                  \"' of theme '\" +\n                  config.name +\n                  \"'. Base flags are not allowed for themes without a valid super theme!\"\n              );\n            }\n          }\n\n          target[id].base = config.extend;\n        }\n      }\n\n      // store pseudo class\n      theme.$$clazz = clazz;\n\n      // and create instance under the old key\n      theme[type] = new clazz();\n    },\n\n    /** @type {Map} Internal theme registry */\n    $$registry: {},\n\n    /** @type {Array} Keys which support inheritance */\n    __inheritableKeys: [\n      \"colors\",\n      \"borders\",\n      \"decorations\",\n      \"fonts\",\n      \"icons\",\n      \"widgets\",\n      \"appearances\",\n      \"meta\"\n    ],\n\n    /** @type {Map} allowed keys in theme definition */\n    __allowedKeys: qx.core.Environment.select(\"qx.debug\", {\n      true: {\n        title: \"string\", // String\n        aliases: \"object\", // Map\n        type: \"string\", // String\n        extend: \"object\", // Theme\n        colors: \"object\", // Map\n        borders: \"object\", // Map\n        decorations: \"object\", // Map\n        fonts: \"object\", // Map\n        icons: \"object\", // Map\n        widgets: \"object\", // Map\n        appearances: \"object\", // Map\n        meta: \"object\", // Map\n        include: \"object\", // Array\n        patch: \"object\", // Array\n        boot: \"function\" // Function\n      },\n\n      default: null\n    }),\n\n    /** @type {Map} allowed keys inside a meta theme block */\n    __metaKeys: qx.core.Environment.select(\"qx.debug\", {\n      true: {\n        color: \"object\",\n        border: \"object\",\n        decoration: \"object\",\n        font: \"object\",\n        icon: \"object\",\n        appearance: \"object\",\n        widget: \"object\"\n      },\n\n      default: null\n    }),\n\n    /**\n     * Validates incoming configuration and checks keys and values\n     *\n     * @signature function(name, config)\n     * @param name {String} The name of the class\n     * @param config {Map} Configuration map\n     * @throws {Error} if the given config is not valid (e.g. wrong key or wrong key value)\n     */\n    __validateConfig: qx.core.Environment.select(\"qx.debug\", {\n      true(name, config) {\n        var allowed = this.__allowedKeys;\n        for (var key in config) {\n          if (allowed[key] === undefined) {\n            throw new Error(\n              'The configuration key \"' +\n                key +\n                '\" in theme \"' +\n                name +\n                '\" is not allowed!'\n            );\n          }\n\n          if (config[key] == null) {\n            throw new Error(\n              'Invalid key \"' +\n                key +\n                '\" in theme \"' +\n                name +\n                '\"! The value is undefined/null!'\n            );\n          }\n\n          if (allowed[key] !== null && typeof config[key] !== allowed[key]) {\n            throw new Error(\n              'Invalid type of key \"' +\n                key +\n                '\" in theme \"' +\n                name +\n                '\"! The type of the key must be \"' +\n                allowed[key] +\n                '\"!'\n            );\n          }\n        }\n\n        // Validate maps\n        var maps = [\n          \"colors\",\n          \"borders\",\n          \"decorations\",\n          \"fonts\",\n          \"icons\",\n          \"widgets\",\n          \"appearances\",\n          \"meta\"\n        ];\n\n        for (var i = 0, l = maps.length; i < l; i++) {\n          var key = maps[i];\n\n          if (\n            config[key] !== undefined &&\n            (config[key] instanceof Array ||\n              config[key] instanceof RegExp ||\n              config[key] instanceof Date ||\n              config[key].classname !== undefined)\n          ) {\n            throw new Error(\n              'Invalid key \"' +\n                key +\n                '\" in theme \"' +\n                name +\n                '\"! The value needs to be a map!'\n            );\n          }\n        }\n\n        // Check conflicts (detect number ...)\n        var counter = 0;\n        for (var i = 0, l = maps.length; i < l; i++) {\n          var key = maps[i];\n\n          if (config[key]) {\n            counter++;\n          }\n\n          if (counter > 1) {\n            throw new Error(\n              \"You can only define one theme category per file! Invalid theme: \" +\n                name\n            );\n          }\n        }\n\n        // Validate meta\n        if (config.meta) {\n          var value;\n          for (var key in config.meta) {\n            value = config.meta[key];\n\n            if (this.__metaKeys[key] === undefined) {\n              throw new Error(\n                'The key \"' +\n                  key +\n                  '\" is not allowed inside a meta theme block.'\n              );\n            }\n\n            if (typeof value !== this.__metaKeys[key]) {\n              throw new Error(\n                'The type of the key \"' +\n                  key +\n                  '\" inside the meta block is wrong.'\n              );\n            }\n\n            if (\n              !(\n                typeof value === \"object\" &&\n                value !== null &&\n                value.$$type === \"Theme\"\n              )\n            ) {\n              throw new Error(\n                'The content of a meta theme must reference to other themes. The value for \"' +\n                  key +\n                  '\" in theme \"' +\n                  name +\n                  '\" is invalid: ' +\n                  value\n              );\n            }\n          }\n        }\n\n        // Validate extend\n        if (config.extend && config.extend.$$type !== \"Theme\") {\n          throw new Error(\n            'Invalid extend in theme \"' + name + '\": ' + config.extend\n          );\n        }\n\n        // Validate include\n        if (config.include) {\n          for (var i = 0, l = config.include.length; i < l; i++) {\n            if (\n              typeof config.include[i] == \"undefined\" ||\n              config.include[i].$$type !== \"Theme\"\n            ) {\n              throw new Error(\n                'Invalid include in theme \"' + name + '\": ' + config.include[i]\n              );\n            }\n          }\n        }\n\n        // Validate patch\n        if (config.patch) {\n          for (var i = 0, l = config.patch.length; i < l; i++) {\n            if (\n              typeof config.patch[i] === \"undefined\" ||\n              config.patch[i].$$type !== \"Theme\"\n            ) {\n              throw new Error(\n                'Invalid patch in theme \"' + name + '\": ' + config.patch[i]\n              );\n            }\n          }\n        }\n      },\n\n      default() {}\n    }),\n\n    /**\n     * Include all keys of the given mixin theme into the theme. The mixin may\n     * include keys which are already defined in the target theme. Existing\n     * features of equal name will be overwritten.\n     *\n     * @param theme {Theme} An existing theme which should be modified by including the mixin theme.\n     * @param mixinTheme {Theme} The theme to be included.\n     */\n    patch(theme, mixinTheme) {\n      this.__checkForInvalidTheme(mixinTheme);\n\n      var type = this.__extractType(mixinTheme);\n      if (type !== this.__extractType(theme)) {\n        throw new Error(\n          \"The mixins '\" +\n            theme.name +\n            \"' are not compatible '\" +\n            mixinTheme.name +\n            \"'!\"\n        );\n      }\n\n      var source = mixinTheme[type];\n      var target = theme.$$clazz.prototype;\n\n      for (var key in source) {\n        target[key] = source[key];\n      }\n    },\n\n    /**\n     * Include all keys of the given mixin theme into the theme. If the\n     * mixin includes any keys that are already available in the\n     * class, they will be silently ignored. Use the {@link #patch} method\n     * if you need to overwrite keys in the current class.\n     *\n     * @param theme {Theme} An existing theme which should be modified by including the mixin theme.\n     * @param mixinTheme {Theme} The theme to be included.\n     */\n    include(theme, mixinTheme) {\n      this.__checkForInvalidTheme(mixinTheme);\n\n      var type = mixinTheme.type;\n      if (type !== theme.type) {\n        throw new Error(\n          \"The mixins '\" +\n            theme.name +\n            \"' are not compatible '\" +\n            mixinTheme.name +\n            \"'!\"\n        );\n      }\n\n      var source = mixinTheme[type];\n      var target = theme.$$clazz.prototype;\n\n      for (var key in source) {\n        //Skip keys already present\n        if (target[key] !== undefined) {\n          continue;\n        }\n\n        target[key] = source[key];\n      }\n    },\n\n    /**\n     * Helper method to check for an invalid theme\n     *\n     * @param mixinTheme {qx.Theme?null} theme to check\n     * @throws {Error} if the theme is not valid\n     */\n    __checkForInvalidTheme(mixinTheme) {\n      if (typeof mixinTheme === \"undefined\" || mixinTheme == null) {\n        var errorObj = new Error(\"Mixin theme is not a valid theme!\");\n\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          var stackTrace = qx.dev.StackTrace.getStackTraceFromError(errorObj);\n          qx.Bootstrap.error(this, stackTrace);\n        }\n\n        throw errorObj;\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}