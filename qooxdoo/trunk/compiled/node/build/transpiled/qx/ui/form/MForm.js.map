{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "locale",
    "Manager",
    "getInstance",
    "addListener",
    "__onChangeLocale",
    "properties",
    "valid",
    "check",
    "init",
    "apply",
    "event",
    "required",
    "invalidMessage",
    "requiredInvalidMessage",
    "nullable",
    "members",
    "_applyValid",
    "value",
    "old",
    "removeState",
    "addState",
    "core",
    "Environment",
    "select",
    "true",
    "e",
    "getInvalidMessage",
    "translate",
    "setInvalidMessage",
    "getRequiredInvalidMessage",
    "setRequiredInvalidMessage",
    "false",
    "destruct",
    "removeListener",
    "ui",
    "form",
    "MForm"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/ui/form/MForm.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Mixin handling the valid and required properties for the form widgets.\n */\nqx.Mixin.define(\"qx.ui.form.MForm\", {\n  construct() {\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().addListener(\n        \"changeLocale\",\n        this.__onChangeLocale,\n        this\n      );\n    }\n  },\n\n  properties: {\n    /**\n     * Flag signaling if a widget is valid. If a widget is invalid, an invalid\n     * state will be set.\n     */\n    valid: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyValid\",\n      event: \"changeValid\"\n    },\n\n    /**\n     * Flag signaling if a widget is required.\n     */\n    required: {\n      check: \"Boolean\",\n      init: false,\n      event: \"changeRequired\"\n    },\n\n    /**\n     * Message which is shown in an invalid tooltip.\n     */\n    invalidMessage: {\n      check: \"String\",\n      init: \"\",\n      event: \"changeInvalidMessage\"\n    },\n\n    /**\n     * Message which is shown in an invalid tooltip if the {@link #required} is\n     * set to true.\n     */\n    requiredInvalidMessage: {\n      check: \"String\",\n      nullable: true,\n      event: \"changeInvalidMessage\"\n    }\n  },\n\n  members: {\n    // apply method\n    _applyValid(value, old) {\n      value ? this.removeState(\"invalid\") : this.addState(\"invalid\");\n    },\n\n    /**\n     * Locale change event handler\n     *\n     * @signature function(e)\n     * @param e {Event} the change event\n     */\n    __onChangeLocale: qx.core.Environment.select(\"qx.dynlocale\", {\n      true(e) {\n        // invalid message\n        var invalidMessage = this.getInvalidMessage();\n        if (invalidMessage && invalidMessage.translate) {\n          this.setInvalidMessage(invalidMessage.translate());\n        }\n        // required invalid message\n        var requiredInvalidMessage = this.getRequiredInvalidMessage();\n        if (requiredInvalidMessage && requiredInvalidMessage.translate) {\n          this.setRequiredInvalidMessage(requiredInvalidMessage.translate());\n        }\n      },\n\n      false: null\n    })\n  },\n\n  destruct() {\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().removeListener(\n        \"changeLocale\",\n        this.__onChangeLocale,\n        this\n      );\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,kBAAhB,EAAoC;IAClCC,SAAS,GAAG;MACmC;QAC3CN,EAAE,CAACO,MAAH,CAAUC,OAAV,CAAkBC,WAAlB,GAAgCC,WAAhC,CACE,cADF,EAEE,KAAKC,SAFP,EAGE,IAHF;MAKD;IACF,CATiC;;IAWlCC,UAAU,EAAE;MACV;AACJ;AACA;AACA;MACIC,KAAK,EAAE;QACLC,KAAK,EAAE,SADF;QAELC,IAAI,EAAE,IAFD;QAGLC,KAAK,EAAE,aAHF;QAILC,KAAK,EAAE;MAJF,CALG;;MAYV;AACJ;AACA;MACIC,QAAQ,EAAE;QACRJ,KAAK,EAAE,SADC;QAERC,IAAI,EAAE,KAFE;QAGRE,KAAK,EAAE;MAHC,CAfA;;MAqBV;AACJ;AACA;MACIE,cAAc,EAAE;QACdL,KAAK,EAAE,QADO;QAEdC,IAAI,EAAE,EAFQ;QAGdE,KAAK,EAAE;MAHO,CAxBN;;MA8BV;AACJ;AACA;AACA;MACIG,sBAAsB,EAAE;QACtBN,KAAK,EAAE,QADe;QAEtBO,QAAQ,EAAE,IAFY;QAGtBJ,KAAK,EAAE;MAHe;IAlCd,CAXsB;IAoDlCK,OAAO,EAAE;MACP;MACAC,WAAW,CAACC,KAAD,EAAQC,GAAR,EAAa;QACtBD,KAAK,GAAG,KAAKE,WAAL,CAAiB,SAAjB,CAAH,GAAiC,KAAKC,QAAL,CAAc,SAAd,CAAtC;MACD,CAJM;;MAMP;AACJ;AACA;AACA;AACA;AACA;MACIhB,SAAgB,EAAEX,EAAE,CAAC4B,IAAH,CAAQC,WAAR,CAAoBC,MAApB,CAA2B,cAA3B,EAA2C;QAC3DC,IAAI,CAACC,CAAD,EAAI;UACN;UACA,IAAIb,cAAc,GAAG,KAAKc,iBAAL,EAArB;;UACA,IAAId,cAAc,IAAIA,cAAc,CAACe,SAArC,EAAgD;YAC9C,KAAKC,iBAAL,CAAuBhB,cAAc,CAACe,SAAf,EAAvB;UACD,CALK,CAMN;;;UACA,IAAId,sBAAsB,GAAG,KAAKgB,yBAAL,EAA7B;;UACA,IAAIhB,sBAAsB,IAAIA,sBAAsB,CAACc,SAArD,EAAgE;YAC9D,KAAKG,yBAAL,CAA+BjB,sBAAsB,CAACc,SAAvB,EAA/B;UACD;QACF,CAZ0D;;QAc3DI,KAAK,EAAE;MAdoD,CAA3C;IAZX,CApDyB;;IAkFlCC,QAAQ,GAAG;MACoC;QAC3CvC,EAAE,CAACO,MAAH,CAAUC,OAAV,CAAkBC,WAAlB,GAAgC+B,cAAhC,CACE,cADF,EAEE,KAAK7B,SAFP,EAGE,IAHF;MAKD;IACF;;EA1FiC,CAApC;EArBAX,EAAE,CAACyC,EAAH,CAAMC,IAAN,CAAWC,KAAX,CAAiBxC,aAAjB,GAAiCA,aAAjC"
}