{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "IDisposable",
    "construct",
    "manager",
    "__manager",
    "__root",
    "getWindow",
    "document",
    "documentElement",
    "addListener",
    "_onLongtap",
    "_onPointerdown",
    "Registration",
    "window",
    "_onWindowBlur",
    "__rebuildStructures",
    "statics",
    "PRIORITY",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "dragstart",
    "dragend",
    "dragover",
    "dragleave",
    "drop",
    "drag",
    "dragchange",
    "droprequest",
    "IGNORE_CAN_HANDLE",
    "ALLOWED_BUTTONS",
    "MIN_DRAG_DISTANCE",
    "properties",
    "cursor",
    "check",
    "nullable",
    "init",
    "members",
    "__dropTarget",
    "__dragTarget",
    "__types",
    "__actions",
    "__keys",
    "__cache",
    "__currentType",
    "__currentAction",
    "__sessionActive",
    "__validDrop",
    "__validAction",
    "__dragTargetWidget",
    "__startConfig",
    "canHandleEvent",
    "target",
    "type",
    "registerEvent",
    "capture",
    "unregisterEvent",
    "addType",
    "addAction",
    "action",
    "supportsType",
    "supportsAction",
    "setDropAllowed",
    "isAllowed",
    "__detectAction",
    "getData",
    "Error",
    "__fireEvent",
    "getDataAsync",
    "tracker",
    "self",
    "Utils",
    "then",
    "getCurrentAction",
    "getCurrentActionAsync",
    "Environment",
    "select",
    "true",
    "Promise",
    "resolve",
    "false",
    "classname",
    "getDragTarget",
    "addData",
    "data",
    "getCurrentType",
    "isSessionActive",
    "reject",
    "actions",
    "keys",
    "current",
    "Shift",
    "Control",
    "alias",
    "Alt",
    "copy",
    "move",
    "old",
    "catch",
    "validAction",
    "relatedTarget",
    "cancelable",
    "original",
    "async",
    "dragEvent",
    "createEvent",
    "Drag",
    "setRelatedTarget",
    "result",
    "dispatchEvent",
    "undefined",
    "getDefaultPrevented",
    "__findDraggable",
    "elem",
    "nodeType",
    "getAttribute",
    "parentNode",
    "__findDroppable",
    "clearSession",
    "removeListener",
    "_onPointermove",
    "_onPointerup",
    "_onKeyDown",
    "_onKeyUp",
    "_onKeyPress",
    "_onRoll",
    "removeState",
    "e",
    "getPointerType",
    "_start",
    "isButtonOk",
    "handler",
    "DragDrop",
    "indexOf",
    "getButton",
    "isPrimary",
    "getTarget",
    "draggable",
    "widgetOriginalTarget",
    "ui",
    "Widget",
    "getWidgetByElement",
    "isAnonymous",
    "getLayoutParent",
    "addState",
    "getOriginalTarget",
    "left",
    "getDocumentLeft",
    "top",
    "getDocumentTop",
    "delta",
    "_getDelta",
    "distance",
    "Math",
    "abs",
    "x",
    "y",
    "el",
    "getNativeEvent",
    "view",
    "elementFromPoint",
    "getCursor",
    "DragDropCursor",
    "getInstance",
    "cursorEl",
    "getContentElement",
    "getDomElement",
    "contains",
    "display",
    "bom",
    "element",
    "Style",
    "get",
    "set",
    "droppable",
    "dropLeaveTarget",
    "innerTracker",
    "validDrop",
    "isCtrlPressed",
    "isShiftPressed",
    "isAltPressed",
    "deltaX",
    "deltaY",
    "stopPropagation",
    "stop",
    "iden",
    "getKeyIdentifier",
    "destruct",
    "defer",
    "addHandler"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/event/handler/DragDrop.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Event handler, which supports drag events on DOM elements.\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n * @require(qx.event.handler.Gesture)\n * @require(qx.event.handler.Keyboard)\n * @require(qx.event.handler.Capture)\n */\nqx.Class.define(\"qx.event.handler.DragDrop\", {\n  extend: qx.core.Object,\n  implement: [qx.event.IEventHandler, qx.core.IDisposable],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param manager {qx.event.Manager} Event manager for the window to use\n   */\n  construct(manager) {\n    super();\n\n    // Define shorthands\n    this.__manager = manager;\n    this.__root = manager.getWindow().document.documentElement;\n\n    // Initialize listener\n    this.__manager.addListener(this.__root, \"longtap\", this._onLongtap, this);\n    this.__manager.addListener(\n      this.__root,\n      \"pointerdown\",\n      this._onPointerdown,\n      this,\n      true\n    );\n\n    qx.event.Registration.addListener(window, \"blur\", this._onWindowBlur, this);\n\n    // Initialize data structures\n    this.__rebuildStructures();\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** @type {Integer} Priority of this handler */\n    PRIORITY: qx.event.Registration.PRIORITY_NORMAL,\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES: {\n      dragstart: 1,\n      dragend: 1,\n      dragover: 1,\n      dragleave: 1,\n      drop: 1,\n      drag: 1,\n      dragchange: 1,\n      droprequest: 1\n    },\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE: true,\n\n    /**\n     * Array of strings holding the names of the allowed mouse buttons\n     * for Drag & Drop. The default is \"left\" but could be extended with\n     * \"middle\" or \"right\"\n     */\n    ALLOWED_BUTTONS: [\"left\"],\n\n    /**\n     * The distance needed to change the mouse position before a drag session start.\n     */\n    MIN_DRAG_DISTANCE: 5\n  },\n\n  properties: {\n    /**\n     * Widget instance of the drag & drop cursor. If non is given, the default\n     * {@link qx.ui.core.DragDropCursor} will be used.\n     */\n    cursor: {\n      check: \"qx.ui.core.Widget\",\n      nullable: true,\n      init: null\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __manager: null,\n    __root: null,\n    __dropTarget: null,\n    __dragTarget: null,\n    __types: null,\n    __actions: null,\n    __keys: null,\n    __cache: null,\n    __currentType: null,\n    __currentAction: null,\n    __sessionActive: false,\n    __validDrop: false,\n    __validAction: false,\n    __dragTargetWidget: null,\n    __startConfig: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    canHandleEvent(target, type) {},\n\n    // interface implementation\n    registerEvent(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n    // interface implementation\n    unregisterEvent(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Registers a supported type\n     *\n     * @param type {String} The type to add\n     */\n    addType(type) {\n      this.__types[type] = true;\n    },\n\n    /**\n     * Registers a supported action. One of <code>move</code>,\n     * <code>copy</code> or <code>alias</code>.\n     *\n     * @param action {String} The action to add\n     */\n    addAction(action) {\n      this.__actions[action] = true;\n    },\n\n    /**\n     * Whether the current drag target supports the given type\n     *\n     * @param type {String} Any type\n     * @return {Boolean} Whether the type is supported\n     */\n    supportsType(type) {\n      return !!this.__types[type];\n    },\n\n    /**\n     * Whether the current drag target supports the given action\n     *\n     * @param type {String} Any type\n     * @return {Boolean} Whether the action is supported\n     */\n    supportsAction(type) {\n      return !!this.__actions[type];\n    },\n\n    /**\n     * Whether the current drop target allows the current drag target.\n     *\n     * @param isAllowed {Boolean} False if a drop should be disallowed\n     */\n    setDropAllowed(isAllowed) {\n      this.__validDrop = isAllowed;\n      this.__detectAction();\n    },\n\n    /**\n     * Returns the data of the given type during the <code>drop</code> event\n     * on the drop target. This method fires a <code>droprequest</code> at\n     * the drag target which should be answered by calls to {@link #addData}.\n     *\n     * Note that this is a synchronous method and if any of the drag and drop\n     * events handlers are implemented using Promises, this may fail; @see\n     * `getDataAsync`.\n     *\n     * @param type {String} Any supported type\n     * @return {var} The result data in a promise\n     */\n    getData(type) {\n      if (!this.__validDrop || !this.__dropTarget) {\n        throw new Error(\n          \"This method must not be used outside the drop event listener!\"\n        );\n      }\n\n      if (!this.__types[type]) {\n        throw new Error(\"Unsupported data type: \" + type + \"!\");\n      }\n\n      if (!this.__cache[type]) {\n        this.__currentType = type;\n        this.__fireEvent(\n          \"droprequest\",\n          this.__dragTarget,\n          this.__dropTarget,\n          false,\n          false\n        );\n      }\n\n      if (!this.__cache[type]) {\n        throw new Error(\n          \"Please use a droprequest listener to the drag source to fill the manager with data!\"\n        );\n      }\n\n      return this.__cache[type] || null;\n    },\n\n    /**\n     * Returns the data of the given type during the <code>drop</code> event\n     * on the drop target. This method fires a <code>droprequest</code> at\n     * the drag target which should be answered by calls to {@link #addData}.\n     *\n     * @param type {String} Any supported type\n     * @return {qx.Promise} The result data in a promise\n     */\n    getDataAsync(type) {\n      if (!this.__validDrop || !this.__dropTarget) {\n        throw new Error(\n          \"This method must not be used outside the drop event listener!\"\n        );\n      }\n\n      if (!this.__types[type]) {\n        throw new Error(\"Unsupported data type: \" + type + \"!\");\n      }\n\n      var tracker = {};\n      var self = this;\n      if (!this.__cache[type]) {\n        qx.event.Utils.then(tracker, function () {\n          self.__currentType = type;\n          return self.__fireEvent(\n            \"droprequest\",\n            self.__dragTarget,\n            self.__dropTarget,\n            false\n          );\n        });\n      }\n\n      return qx.event.Utils.then(tracker, function () {\n        if (!this.__cache[type]) {\n          throw new Error(\n            \"Please use a droprequest listener to the drag source to fill the manager with data!\"\n          );\n        }\n\n        return this.__cache[type] || null;\n      });\n    },\n\n    /**\n     * Returns the currently selected action (by user keyboard modifiers)\n     *\n     * @return {String} One of <code>move</code>, <code>copy</code> or\n     *    <code>alias</code>\n     */\n    getCurrentAction() {\n      this.__detectAction();\n      return this.__currentAction;\n    },\n\n    /**\n     * Returns the currently selected action (by user keyboard modifiers)\n     *\n     * @return {qx.Promise|String} One of <code>move</code>, <code>copy</code> or\n     *    <code>alias</code>\n     */\n    getCurrentActionAsync: qx.core.Environment.select(\"qx.promise\", {\n      true() {\n        var self = this;\n\n        return qx.Promise.resolve(self.__detectAction()).then(function () {\n          return self.__currentAction;\n        });\n      },\n      false() {\n        throw new Error(\n          this.classname +\n            \".getCurrentActionAsync not supported because qx.promise==false\"\n        );\n      }\n    }),\n\n    /**\n     * Returns the widget which has been the target of the drag start.\n     * @return {qx.ui.core.Widget} The widget on which the drag started.\n     */\n    getDragTarget() {\n      return this.__dragTargetWidget;\n    },\n\n    /**\n     * Adds data of the given type to the internal storage. The data\n     * is available until the <code>dragend</code> event is fired.\n     *\n     * @param type {String} Any valid type\n     * @param data {var} Any data to store\n     */\n    addData(type, data) {\n      this.__cache[type] = data;\n    },\n\n    /**\n     * Returns the type which was requested last.\n     *\n     * @return {String} The last requested data type\n     */\n    getCurrentType() {\n      return this.__currentType;\n    },\n\n    /**\n     * Returns if a drag session is currently active\n     *\n     * @return {Boolean} active drag session\n     */\n    isSessionActive() {\n      return this.__sessionActive;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL UTILS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Rebuilds the internal data storage used during a drag&drop session\n     */\n    __rebuildStructures() {\n      this.__types = {};\n      this.__actions = {};\n      this.__keys = {};\n      this.__cache = {};\n    },\n\n    /**\n     * Detects the current action and stores it under the private\n     * field <code>__currentAction</code>. Also fires the event\n     * <code>dragchange</code> on every modification.\n     *\n     * @return {qx.Promise|null}\n     */\n    __detectAction() {\n      if (this.__dragTarget == null) {\n        if (qx.core.Environment.get(\"qx.promise\")) {\n          return qx.Promise.reject();\n        } else {\n          return null;\n        }\n      }\n\n      var actions = this.__actions;\n      var keys = this.__keys;\n      var current = null;\n\n      if (this.__validDrop) {\n        if (keys.Shift && keys.Control && actions.alias) {\n          current = \"alias\";\n        } else if (keys.Shift && keys.Alt && actions.copy) {\n          current = \"copy\";\n        } else if (keys.Shift && actions.move) {\n          current = \"move\";\n        } else if (keys.Alt && actions.alias) {\n          current = \"alias\";\n        } else if (keys.Control && actions.copy) {\n          current = \"copy\";\n        } else if (actions.move) {\n          current = \"move\";\n        } else if (actions.copy) {\n          current = \"copy\";\n        } else if (actions.alias) {\n          current = \"alias\";\n        }\n      }\n\n      var self = this;\n      var tracker = {};\n      var old = this.__currentAction;\n      if (current != old) {\n        if (this.__dropTarget) {\n          qx.event.Utils.catch(function () {\n            self.__validAction = false;\n            current = null;\n          });\n          qx.event.Utils.then(tracker, function () {\n            self.__currentAction = current;\n            return self.__fireEvent(\n              \"dragchange\",\n              self.__dropTarget,\n              self.__dragTarget,\n              true\n            );\n          });\n          qx.event.Utils.then(tracker, function (validAction) {\n            self.__validAction = validAction;\n            if (!validAction) {\n              current = null;\n            }\n          });\n        }\n      }\n\n      return qx.event.Utils.then(tracker, function () {\n        if (current != old) {\n          self.__currentAction = current;\n          return self.__fireEvent(\n            \"dragchange\",\n            self.__dragTarget,\n            self.__dropTarget,\n            false\n          );\n        }\n      });\n    },\n\n    /**\n     * Wrapper for {@link qx.event.Registration#fireEvent} for drag&drop events\n     * needed in this class.\n     *\n     * @param type {String} Event type\n     * @param target {Object} Target to fire on\n     * @param relatedTarget {Object} Related target, i.e. drag or drop target\n     *    depending on the drag event\n     * @param cancelable {Boolean} Whether the event is cancelable\n     * @param original {qx.event.type.Pointer} Original pointer event\n     * @return {qx.Promise|Boolean} <code>true</code> if the event's default behavior was\n     * not prevented\n     */\n    __fireEvent(type, target, relatedTarget, cancelable, original, async) {\n      var Registration = qx.event.Registration;\n      var dragEvent = Registration.createEvent(type, qx.event.type.Drag, [\n        cancelable,\n        original\n      ]);\n\n      if (target !== relatedTarget) {\n        dragEvent.setRelatedTarget(relatedTarget);\n      }\n\n      var result = Registration.dispatchEvent(target, dragEvent);\n      if (qx.core.Environment.get(\"qx.promise\")) {\n        if (async === undefined || async) {\n          return qx.Promise.resolve(result).then(function () {\n            return !dragEvent.getDefaultPrevented();\n          });\n        } else {\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            if (qx.Promise.isPromise(result)) {\n              this.error(\n                'DragDrop event \"' +\n                  type +\n                  '\" returned a promise but a synchronous event was required, drag and drop may not work as expected (consider using getDataAsync)'\n              );\n            }\n          }\n          return result;\n        }\n      } else {\n        return result;\n      }\n    },\n\n    /**\n     * Finds next draggable parent of the given element. Maybe the element itself as well.\n     *\n     * Looks for the attribute <code>qxDraggable</code> with the value <code>on</code>.\n     *\n     * @param elem {Element} The element to query\n     * @return {Element} The next parent element which is draggable. May also be <code>null</code>\n     */\n    __findDraggable(elem) {\n      while (elem && elem.nodeType == 1) {\n        if (elem.getAttribute(\"qxDraggable\") == \"on\") {\n          return elem;\n        }\n\n        elem = elem.parentNode;\n      }\n\n      return null;\n    },\n\n    /**\n     * Finds next droppable parent of the given element. Maybe the element itself as well.\n     *\n     * Looks for the attribute <code>qxDroppable</code> with the value <code>on</code>.\n     *\n     * @param elem {Element} The element to query\n     * @return {Element} The next parent element which is droppable. May also be <code>null</code>\n     */\n    __findDroppable(elem) {\n      while (elem && elem.nodeType == 1) {\n        if (elem.getAttribute(\"qxDroppable\") == \"on\") {\n          return elem;\n        }\n\n        elem = elem.parentNode;\n      }\n\n      return null;\n    },\n\n    /**\n     * Cleans up a drag&drop session when <code>dragstart</code> was fired before.\n     *\n     * @return {qx.Promise?} promise, if one was created by event handlers\n     */\n    clearSession() {\n      //this.debug(\"clearSession\");\n\n      // Deregister from root events\n      this.__manager.removeListener(\n        this.__root,\n        \"pointermove\",\n        this._onPointermove,\n        this\n      );\n\n      this.__manager.removeListener(\n        this.__root,\n        \"pointerup\",\n        this._onPointerup,\n        this,\n        true\n      );\n\n      this.__manager.removeListener(\n        this.__root,\n        \"keydown\",\n        this._onKeyDown,\n        this,\n        true\n      );\n\n      this.__manager.removeListener(\n        this.__root,\n        \"keyup\",\n        this._onKeyUp,\n        this,\n        true\n      );\n\n      this.__manager.removeListener(\n        this.__root,\n        \"keypress\",\n        this._onKeyPress,\n        this,\n        true\n      );\n\n      this.__manager.removeListener(\n        this.__root,\n        \"roll\",\n        this._onRoll,\n        this,\n        true\n      );\n\n      var tracker = {};\n      var self = this;\n\n      // Fire dragend event\n      if (this.__dragTarget) {\n        qx.event.Utils.then(tracker, function () {\n          return self.__fireEvent(\n            \"dragend\",\n            self.__dragTarget,\n            self.__dropTarget,\n            false\n          );\n        });\n      }\n\n      return qx.event.Utils.then(tracker, function () {\n        // Cleanup\n        self.__validDrop = false;\n        self.__dropTarget = null;\n        if (self.__dragTargetWidget) {\n          self.__dragTargetWidget.removeState(\"drag\");\n          self.__dragTargetWidget = null;\n        }\n\n        // Clear init\n        //self.debug(\"Clearing drag target\");\n        self.__dragTarget = null;\n        self.__sessionActive = false;\n        self.__startConfig = null;\n        self.__rebuildStructures();\n      });\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Handler for long tap which takes care of starting the drag & drop session for\n     * touch interactions.\n     * @param e {qx.event.type.Tap} The longtap event.\n     */\n    _onLongtap(e) {\n      // only for touch\n      if (e.getPointerType() != \"touch\") {\n        return;\n      }\n      // prevent scrolling\n      this.__manager.addListener(this.__root, \"roll\", this._onRoll, this, true);\n      return this._start(e);\n    },\n\n    /**\n     * Helper to start the drag & drop session. It is responsible for firing the\n     * dragstart event and attaching the key listener.\n     * @param e {qx.event.type.Pointer} Either a longtap or pointermove event.\n     *\n     * @return {Boolean} Returns <code>false</code> if drag session should be\n     * canceled.\n     */\n    _start(e) {\n      // only for primary pointer and allowed buttons\n      var isButtonOk =\n        qx.event.handler.DragDrop.ALLOWED_BUTTONS.indexOf(e.getButton()) !== -1;\n      if (!e.isPrimary() || !isButtonOk) {\n        return false;\n      }\n\n      // start target can be none as the drag & drop handler might\n      // be created after the first start event\n      var target = this.__startConfig\n        ? this.__startConfig.target\n        : e.getTarget();\n      var draggable = this.__findDraggable(target);\n      if (draggable) {\n        // This is the source target\n        //this.debug(\"Setting dragtarget = \" + draggable);\n        this.__dragTarget = draggable;\n\n        var widgetOriginalTarget = qx.ui.core.Widget.getWidgetByElement(\n          this.__startConfig.original\n        );\n\n        while (widgetOriginalTarget && widgetOriginalTarget.isAnonymous()) {\n          widgetOriginalTarget = widgetOriginalTarget.getLayoutParent();\n        }\n        if (widgetOriginalTarget) {\n          this.__dragTargetWidget = widgetOriginalTarget;\n          widgetOriginalTarget.addState(\"drag\");\n        }\n\n        // fire cancelable dragstart\n        var self = this;\n        var tracker = {};\n        qx.event.Utils.catch(function () {\n          //self.debug(\"dragstart FAILED, setting __sessionActive=false\");\n          self.__sessionActive = false;\n        });\n        qx.event.Utils.then(tracker, function () {\n          return self.__fireEvent(\n            \"dragstart\",\n            self.__dragTarget,\n            self.__dropTarget,\n            true,\n            e\n          );\n        });\n        return qx.event.Utils.then(tracker, function (validAction) {\n          if (!validAction) {\n            return;\n          }\n          //self.debug(\"dragstart ok, setting __sessionActive=true\")\n          self.__manager.addListener(\n            self.__root,\n            \"keydown\",\n            self._onKeyDown,\n            self,\n            true\n          );\n\n          self.__manager.addListener(\n            self.__root,\n            \"keyup\",\n            self._onKeyUp,\n            self,\n            true\n          );\n\n          self.__manager.addListener(\n            self.__root,\n            \"keypress\",\n            self._onKeyPress,\n            self,\n            true\n          );\n\n          self.__sessionActive = true;\n        });\n      }\n    },\n\n    /**\n     * Event handler for the pointerdown event which stores the initial targets and the coordinates.\n     * @param e {qx.event.type.Pointer} The pointerdown event.\n     */\n    _onPointerdown(e) {\n      if (e.isPrimary()) {\n        this.__startConfig = {\n          target: e.getTarget(),\n          original: e.getOriginalTarget(),\n          left: e.getDocumentLeft(),\n          top: e.getDocumentTop()\n        };\n\n        this.__manager.addListener(\n          this.__root,\n          \"pointermove\",\n          this._onPointermove,\n          this\n        );\n\n        this.__manager.addListener(\n          this.__root,\n          \"pointerup\",\n          this._onPointerup,\n          this,\n          true\n        );\n      }\n    },\n\n    /**\n     * Event handler for the pointermove event which starts the drag session and\n     * is responsible for firing the drag, dragover and dragleave event.\n     * @param e {qx.event.type.Pointer} The pointermove event.\n     */\n    _onPointermove(e) {\n      // only allow drag & drop for primary pointer\n      if (!e.isPrimary()) {\n        return;\n      }\n\n      //this.debug(\"_onPointermove: start\");\n\n      var self = this;\n      var tracker = {};\n\n      qx.event.Utils.catch(function () {\n        return self.clearSession();\n      });\n\n      // start the drag session for mouse\n      if (!self.__sessionActive && e.getPointerType() == \"mouse\") {\n        var delta = self._getDelta(e);\n        // if the mouse moved a bit in any direction\n        var distance = qx.event.handler.DragDrop.MIN_DRAG_DISTANCE;\n        if (\n          delta &&\n          (Math.abs(delta.x) > distance || Math.abs(delta.y) > distance)\n        ) {\n          //self.debug(\"_onPointermove: outside min drag distance\");\n          qx.event.Utils.then(tracker, function () {\n            return self._start(e);\n          });\n        }\n      }\n\n      return qx.event.Utils.then(tracker, function () {\n        // check if the session has been activated\n        if (!self.__sessionActive) {\n          //self.debug(\"not active\");\n          return;\n        }\n\n        var tracker = {};\n        qx.event.Utils.then(tracker, function () {\n          //self.debug(\"active, firing drag\");\n          return self.__fireEvent(\n            \"drag\",\n            self.__dragTarget,\n            self.__dropTarget,\n            true,\n            e\n          );\n        });\n        qx.event.Utils.then(tracker, function (validAction) {\n          if (!validAction) {\n            this.clearSession();\n          }\n\n          //self.debug(\"drag\");\n          // find current hovered droppable\n          var el = e.getTarget();\n          if (self.__startConfig.target === el) {\n            // on touch devices the native events return wrong elements as target (its always the element where the dragging started)\n            el = e\n              .getNativeEvent()\n              .view.document.elementFromPoint(\n                e.getDocumentLeft(),\n                e.getDocumentTop()\n              );\n          }\n          var cursor = self.getCursor();\n          if (!cursor) {\n            cursor = qx.ui.core.DragDropCursor.getInstance();\n          }\n          var cursorEl = cursor.getContentElement().getDomElement();\n          if (cursorEl && (el === cursorEl || cursorEl.contains(el))) {\n            var display = qx.bom.element.Style.get(cursorEl, \"display\");\n            // get the cursor out of the way\n            qx.bom.element.Style.set(cursorEl, \"display\", \"none\");\n            el = e\n              .getNativeEvent()\n              .view.document.elementFromPoint(\n                e.getDocumentLeft(),\n                e.getDocumentTop()\n              );\n\n            qx.bom.element.Style.set(cursorEl, \"display\", display);\n          }\n\n          if (el !== cursorEl) {\n            var droppable = self.__findDroppable(el);\n\n            // new drop target detected\n            if (droppable && droppable != self.__dropTarget) {\n              var dropLeaveTarget = self.__dropTarget;\n\n              self.__validDrop = true; // initial value should be true\n              self.__dropTarget = droppable;\n\n              var innerTracker = {};\n              qx.event.Utils.catch(innerTracker, function () {\n                self.__dropTarget = null;\n                self.__validDrop = false;\n              });\n\n              // fire dragleave for previous drop target\n              if (dropLeaveTarget) {\n                qx.event.Utils.then(innerTracker, function () {\n                  return self.__fireEvent(\n                    \"dragleave\",\n                    dropLeaveTarget,\n                    self.__dragTarget,\n                    false,\n                    e\n                  );\n                });\n              }\n\n              qx.event.Utils.then(innerTracker, function () {\n                return self.__fireEvent(\n                  \"dragover\",\n                  droppable,\n                  self.__dragTarget,\n                  true,\n                  e\n                );\n              });\n\n              return qx.event.Utils.then(innerTracker, function (validDrop) {\n                self.__validDrop = validDrop;\n              });\n            }\n\n            // only previous drop target\n            else if (!droppable && self.__dropTarget) {\n              var innerTracker = {};\n              qx.event.Utils.then(innerTracker, function () {\n                return self.__fireEvent(\n                  \"dragleave\",\n                  self.__dropTarget,\n                  self.__dragTarget,\n                  false,\n                  e\n                );\n              });\n              return qx.event.Utils.then(innerTracker, function () {\n                self.__dropTarget = null;\n                self.__validDrop = false;\n\n                return self.__detectAction();\n              });\n            }\n          }\n        });\n        return qx.event.Utils.then(tracker, function () {\n          // Reevaluate current action\n          var keys = self.__keys;\n          keys.Control = e.isCtrlPressed();\n          keys.Shift = e.isShiftPressed();\n          keys.Alt = e.isAltPressed();\n          return self.__detectAction();\n        });\n      });\n    },\n\n    /**\n     * Helper function to compute the delta between current cursor position from given event\n     * and the stored coordinates at {@link #_onPointerdown}.\n     *\n     * @param e {qx.event.type.Pointer} The pointer event\n     *\n     * @return {Map} containing the deltaX as x, and deltaY as y.\n     */\n    _getDelta(e) {\n      if (!this.__startConfig) {\n        return null;\n      }\n\n      var deltaX = e.getDocumentLeft() - this.__startConfig.left;\n      var deltaY = e.getDocumentTop() - this.__startConfig.top;\n\n      return {\n        x: deltaX,\n        y: deltaY\n      };\n    },\n\n    /**\n     * Handler for the pointerup event which is responsible fore firing the drop event.\n     * @param e {qx.event.type.Pointer} The pointerup event\n     */\n    _onPointerup(e) {\n      if (!e.isPrimary()) {\n        return;\n      }\n\n      var tracker = {};\n      var self = this;\n\n      // Fire drop event in success case\n      if (this.__validDrop && this.__validAction) {\n        qx.event.Utils.then(tracker, function () {\n          return self.__fireEvent(\n            \"drop\",\n            self.__dropTarget,\n            self.__dragTarget,\n            false,\n            e\n          );\n        });\n      }\n\n      return qx.event.Utils.then(tracker, function () {\n        // Stop event\n        if (e.getTarget() == self.__dragTarget) {\n          e.stopPropagation();\n        }\n\n        // Clean up\n        return self.clearSession();\n      });\n    },\n\n    /**\n     * Roll listener to stop scrolling on touch devices.\n     * @param e {qx.event.type.Roll} The roll event.\n     */\n    _onRoll(e) {\n      e.stop();\n    },\n\n    /**\n     * Event listener for window's <code>blur</code> event\n     *\n     * @param e {qx.event.type.Event} Event object\n     */\n    _onWindowBlur(e) {\n      return this.clearSession();\n    },\n\n    /**\n     * Event listener for root's <code>keydown</code> event\n     *\n     * @param e {qx.event.type.KeySequence} Event object\n     */\n    _onKeyDown(e) {\n      var iden = e.getKeyIdentifier();\n      switch (iden) {\n        case \"Alt\":\n        case \"Control\":\n        case \"Shift\":\n          if (!this.__keys[iden]) {\n            this.__keys[iden] = true;\n            return this.__detectAction();\n          }\n      }\n    },\n\n    /**\n     * Event listener for root's <code>keyup</code> event\n     *\n     * @param e {qx.event.type.KeySequence} Event object\n     */\n    _onKeyUp(e) {\n      var iden = e.getKeyIdentifier();\n      switch (iden) {\n        case \"Alt\":\n        case \"Control\":\n        case \"Shift\":\n          if (this.__keys[iden]) {\n            this.__keys[iden] = false;\n            return this.__detectAction();\n          }\n      }\n    },\n\n    /**\n     * Event listener for root's <code>keypress</code> event\n     *\n     * @param e {qx.event.type.KeySequence} Event object\n     */\n    _onKeyPress(e) {\n      var iden = e.getKeyIdentifier();\n      switch (iden) {\n        case \"Escape\":\n          return this.clearSession();\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    qx.event.Registration.removeListener(\n      window,\n      \"blur\",\n      this._onWindowBlur,\n      this\n    );\n\n    // Clear fields\n    this.__dragTarget =\n      this.__dropTarget =\n      this.__manager =\n      this.__root =\n      this.__types =\n      this.__actions =\n      this.__keys =\n      this.__cache =\n        null;\n  },\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer(statics) {\n    qx.event.Registration.addHandler(statics);\n  }\n});\n"
  ],
  "mappings": "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"
}