{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "fs",
    "tool",
    "utils",
    "Promisify",
    "path",
    "require",
    "crypto",
    "sourceMap",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "outputFilename",
    "pos",
    "lastIndexOf",
    "basename",
    "substring",
    "__tmpFilename",
    "__outputFilename",
    "__mapFilename",
    "__ws",
    "createWriteStream",
    "__hash",
    "createHash",
    "setEncoding",
    "__generator",
    "SourceMapGenerator",
    "file",
    "__lineOffset",
    "members",
    "__existingHashValue",
    "getOutputFilename",
    "open",
    "stat",
    "files",
    "Utils",
    "safeStat",
    "hash",
    "data",
    "readFileAsync",
    "write",
    "read",
    "__write",
    "str",
    "addSourceFile",
    "jsFilename",
    "jsUri",
    "jsMapFilename",
    "numLines",
    "replace",
    "i",
    "length",
    "source",
    "map",
    "SourceMapConsumer",
    "eachMapping",
    "mapping",
    "generated",
    "line",
    "generatedLine",
    "column",
    "generatedColumn",
    "original",
    "originalLine",
    "originalColumn",
    "addMapping",
    "sources",
    "forEach",
    "origSource",
    "setSourceContent",
    "sourceContentFor",
    "close",
    "end",
    "hashValue",
    "renameAsync",
    "writeFileAsync",
    "JSON",
    "stringify",
    "parse",
    "toString",
    "unlinkAsync",
    "compiler",
    "targets",
    "SourceCodeCopier"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/tool/compiler/targets/SourceCodeCopier.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo\n *\n *    Copyright:\n *      2011-2019 Zenesis Limited, http://www.zenesis.com\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *\n * ************************************************************************/\n\nconst fs = qx.tool.utils.Promisify.fs;\nconst path = require(\"upath\");\n\nconst crypto = require(\"crypto\");\nconst sourceMap = require(\"source-map\");\n\n/**\n * Copies multiple javascript source files into a single destination, preserving (merging)\n * source maps as it goes.\n *\n * This will not rewrite the output files if the file content will not change.\n */\nqx.Class.define(\"qx.tool.compiler.targets.SourceCodeCopier\", {\n  extend: qx.core.Object,\n\n  /**\n   * Constructor\n   * @param outputFilename {String} the destination file for combined output\n   */\n  construct(outputFilename) {\n    super();\n\n    let pos = outputFilename.lastIndexOf(\".\");\n    let basename = outputFilename.substring(0, pos);\n\n    this.__tmpFilename = basename + \"-tmp.js\";\n    this.__outputFilename = basename + \".js\";\n    this.__mapFilename = basename + \".js.map\";\n\n    this.__ws = fs.createWriteStream(this.__tmpFilename);\n    this.__hash = crypto.createHash(\"sha256\");\n    this.__hash.setEncoding(\"hex\");\n\n    this.__generator = new sourceMap.SourceMapGenerator({\n      file: this.__mapFilename\n    });\n\n    this.__lineOffset = 0;\n  },\n\n  members: {\n    /** {String} Output filename for combined javascript */\n    __outputFilename: null,\n\n    /** {String} output filename for temporary code */\n    __tmpFilename: null,\n\n    /** {String} output filename for the combined sourcemap */\n    __mapFilename: null,\n\n    /** {String} write stream for javascript */\n    __ws: null,\n\n    /** {crypto.createHash} hash accumulator for combined javascript */\n    __hash: null,\n\n    /** {String} hash value for existing combined javascript */\n    __existingHashValue: null,\n\n    __generator: null,\n    __lineOffset: null,\n\n    /**\n     * Returns the file the code is copied to\n     */\n    getOutputFilename() {\n      return this.__outputFilename;\n    },\n\n    /**\n     * Opens the output\n     */\n    async open() {\n      let stat = await qx.tool.utils.files.Utils.safeStat(\n        this.__outputFilename\n      );\n\n      if (stat) {\n        let hash = crypto.createHash(\"sha256\");\n        hash.setEncoding(\"hex\");\n        let data = await fs.readFileAsync(this.__outputFilename, \"utf8\");\n        hash.write(data);\n        this.__existingHashValue = this.__hash.read();\n      }\n    },\n\n    /**\n     * Helper method to write output\n     * @param str {String} data to write\n     */\n    __write(str) {\n      this.__hash.write(str);\n      this.__ws.write(str);\n    },\n\n    /**\n     * Adds a source file to the output\n     *\n     * @param jsFilename {String} filename to add\n     * @param jsUri {String} uri of the file being added, relative to the output directory\n     */\n    async addSourceFile(jsFilename, jsUri) {\n      let jsMapFilename = jsFilename + \".map\";\n      let numLines = 0;\n      let data = await fs.readFileAsync(jsFilename, \"utf8\");\n      data = data.replace(/\\/\\/[@#]\\ssourceMappingURL[^\\r\\n]*/g, \"//\");\n      data += \"\\n\";\n      this.__write(data);\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] === \"\\n\") {\n          numLines++;\n        }\n      }\n\n      let stat = await qx.tool.utils.files.Utils.safeStat(jsMapFilename);\n      if (stat) {\n        let source = jsUri || jsFilename;\n        data = await fs.readFileAsync(jsMapFilename, \"utf8\");\n        var map = new sourceMap.SourceMapConsumer(data);\n        map.eachMapping(mapping => {\n          mapping = {\n            generated: {\n              line: mapping.generatedLine + this.__lineOffset,\n              column: mapping.generatedColumn\n            },\n\n            original: {\n              line: mapping.originalLine || 1,\n              column: mapping.originalColumn || 1\n            },\n\n            source: source\n          };\n\n          this.__generator.addMapping(mapping);\n        });\n        map.sources.forEach(origSource =>\n          this.__generator.setSourceContent(\n            source,\n            map.sourceContentFor(origSource)\n          )\n        );\n      }\n\n      this.__lineOffset += numLines;\n    },\n\n    /**\n     * Closes the output\n     */\n    async close() {\n      this.__write(\n        \"\\n//# sourceMappingURL=\" + path.basename(this.__mapFilename) + \"\\n\"\n      );\n\n      this.__ws.end();\n      this.__hash.end();\n      var hashValue = this.__hash.read();\n      if (!this.__existingHashValue || hashValue !== this.__existingHashValue) {\n        await fs.renameAsync(this.__tmpFilename, this.__outputFilename);\n        await fs.writeFileAsync(\n          this.__mapFilename,\n          JSON.stringify(JSON.parse(this.__generator.toString()), null, 2),\n          \"utf8\"\n        );\n\n        return true;\n      }\n      await fs.unlinkAsync(this.__tmpFilename);\n      return false;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}