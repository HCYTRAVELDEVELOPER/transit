{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "fs",
    "require",
    "babelCore",
    "types",
    "babylon",
    "async",
    "pathModule",
    "log",
    "tool",
    "utils",
    "LogManager",
    "createLog",
    "collapseMemberExpression",
    "node",
    "done",
    "doCollapse",
    "type",
    "name",
    "result",
    "elements",
    "forEach",
    "element",
    "push",
    "isIdentifier",
    "object",
    "str",
    "property",
    "computed",
    "isCollapsibleLiteral",
    "nodeType",
    "expandMemberExpression",
    "segs",
    "split",
    "expr",
    "memberExpression",
    "identifier",
    "i",
    "length",
    "literalValueToExpression",
    "value",
    "undefined",
    "nullLiteral",
    "booleanLiteral",
    "numericLiteral",
    "stringLiteral",
    "lang",
    "Type",
    "isRegExp",
    "regExpLiteral",
    "toString",
    "isDate",
    "isArray",
    "arr",
    "item",
    "arrayExpression",
    "error",
    "properties",
    "key",
    "prop",
    "objectProperty",
    "objectExpression",
    "formatValueAsCode",
    "JSON",
    "stringify",
    "Date",
    "getTime",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "analyser",
    "className",
    "library",
    "__analyser",
    "__className",
    "__metaStack",
    "__metaDefinitions",
    "__library",
    "__sourceFilename",
    "compiler",
    "ClassFile",
    "getSourcePath",
    "__requiredClasses",
    "__environmentChecks",
    "provided",
    "required",
    "__requiredAssets",
    "__translations",
    "__markers",
    "__haveMarkersFor",
    "__scope",
    "parent",
    "vars",
    "unresolved",
    "__externals",
    "__commonjsModules",
    "__taskQueueDrains",
    "__taskQueue",
    "queue",
    "task",
    "cb",
    "drain",
    "_onTaskQueueDrain",
    "err",
    "Console",
    "stack",
    "getIgnores",
    "s",
    "addIgnore",
    "__globalSymbols",
    "__privates",
    "__blockedPrivates",
    "__privateMangling",
    "getManglePrivates",
    "CF",
    "addSymbols",
    "getGlobalSymbols",
    "QX_GLOBALS",
    "COMMON_GLOBALS",
    "BROWSER_GLOBALS",
    "members",
    "__numClassesDefined",
    "__translateMessageIds",
    "__inDefer",
    "__inConstruct",
    "__classMeta",
    "__fatalCompileError",
    "__dbClassInfo",
    "__hasDefer",
    "__definingType",
    "__taskQueueDrain",
    "cbs",
    "_waitForTaskQueueDrain",
    "_queueTask",
    "getOutputPath",
    "load",
    "callback",
    "t",
    "readFile",
    "encoding",
    "src",
    "babelConfig",
    "getBabelConfig",
    "options",
    "clone",
    "modules",
    "extraPreset",
    "plugins",
    "resolve",
    "myPlugins",
    "_babelClassPlugins",
    "config",
    "babelrc",
    "sourceFileName",
    "filename",
    "sourceMaps",
    "presets",
    "CodeElimination",
    "Compiler",
    "JSX_OPTIONS",
    "generatorOpts",
    "compact",
    "parserOpts",
    "allowSuperOutsideMethod",
    "sourceType",
    "passPerPreset",
    "blacklist",
    "transform",
    "ex",
    "addMarker",
    "loc",
    "message",
    "_compileDbClassInfo",
    "keys",
    "join",
    "pos",
    "lastIndexOf",
    "substring",
    "outputPath",
    "Utils",
    "mkParentPath",
    "mappingUrl",
    "Array",
    "contains",
    "getApplicationTypes",
    "writeFile",
    "code",
    "map",
    "writeDbInfo",
    "dbClassInfo",
    "dependsOn",
    "assets",
    "translations",
    "markers",
    "fatalCompileError",
    "commonjsModules",
    "deps",
    "getRequiredClasses",
    "__usesJsx",
    "JSX",
    "classname",
    "pragma",
    "dep",
    "ignore",
    "fixAnnos",
    "section",
    "meta",
    "annotations",
    "getOuterClassMeta",
    "events",
    "statics",
    "pm",
    "apply",
    "fm",
    "applyFor",
    "extends",
    "superClass",
    "include",
    "mixins",
    "slice",
    "implement",
    "interfaces",
    "environment",
    "hasDefer",
    "info",
    "getSymbolType",
    "_requireClass",
    "defer",
    "symbolType",
    "deleteReference",
    "j",
    "locations",
    "start",
    "getAssets",
    "aliases",
    "aliasMap",
    "themeMeta",
    "themeMetaMap",
    "externals",
    "moduleName",
    "dest",
    "filter",
    "getKeyName",
    "keyName",
    "checkNodeJsDocDirectives",
    "jsdoc",
    "getJsDoc",
    "leadingComments",
    "checkJsDocDirectives",
    "elem",
    "body",
    "where",
    "location",
    "addExternal",
    "_requireAsset",
    "enterFunction",
    "path",
    "idNode",
    "id",
    "isClassMember",
    "_topLevel",
    "parentPath",
    "addDeclaration",
    "pushScope",
    "addDecl",
    "param",
    "left",
    "argument",
    "params",
    "exitFunction",
    "popScope",
    "FUNCTION_DECL_OR_EXPR",
    "enter",
    "exit",
    "comment",
    "tmp",
    "Parser",
    "parseComment",
    "append",
    "makeMeta",
    "sectionName",
    "functionName",
    "startsWith",
    "access",
    "es6ClassDeclarations",
    "needsQxCoreEnvironment",
    "COLLECT_CLASS_NAMES_VISITOR",
    "MemberExpression",
    "self",
    "collectedClasses",
    "CODE_ELIMINATION_VISITOR",
    "ClassBody",
    "CallExpression",
    "callee",
    "isLiteral",
    "arguments",
    "arg",
    "env",
    "getEnvironment",
    "envValue",
    "skip",
    "replaceWithSourceString",
    "subPath",
    "get",
    "option",
    "find",
    "replaceWith",
    "IfStatement",
    "test",
    "consequent",
    "alternate",
    "remove",
    "LogicalExpression",
    "right",
    "operator",
    "BinaryExpression",
    "indexOf",
    "Boolean",
    "UnaryExpression",
    "collectJson",
    "isProperties",
    "jsonPath",
    "nextJsonPath",
    "encodePrivate",
    "Function",
    "warn",
    "line",
    "column",
    "ALLOWED_KEYS",
    "class",
    "static",
    "normal",
    "destruct",
    "interface",
    "mixin",
    "theme",
    "title",
    "colors",
    "borders",
    "decorations",
    "fonts",
    "icons",
    "widgets",
    "appearances",
    "patch",
    "boot",
    "isValidExtendClause",
    "every",
    "FUNCTION_NAMES",
    "checkValidTopLevel",
    "allowedKeys",
    "isStatic",
    "handleTopLevelMethods",
    "functionNode",
    "traverse",
    "VISITOR",
    "CLASS_DEF_VISITOR",
    "ObjectMethod",
    "classDefPath",
    "ObjectProperty",
    "val",
    "concat",
    "isAbstract",
    "isSingleton",
    "pdNode",
    "propName",
    "data",
    "propertyType",
    "nullable",
    "allowNull",
    "check",
    "possibleValues",
    "init",
    "defaultValue",
    "eventNode",
    "eventName",
    "aliasNode",
    "aliasName",
    "aliasValue",
    "TYPE",
    "NewExpression",
    "usage",
    "isAddCreatedAt",
    "fn",
    "callExpression",
    "replace",
    "ExpressionStatement",
    "EmptyStatement",
    "JSXElement",
    "Program",
    "copyInfo",
    "hasLoadDeps",
    "assign",
    "variableDeclaration",
    "variableDeclarator",
    "inject",
    "parse",
    "program",
    "block",
    "blockStatement",
    "rootFn",
    "expressionStatement",
    "functionExpression",
    "splice",
    "Literal",
    "Identifier",
    "CHECK_FOR_UNDEFINED",
    "FunctionExpression",
    "FunctionStatement",
    "ArrowFunctionExpression",
    "VariableDeclarator",
    "FunctionDeclaration",
    "CatchClause",
    "AssignmentPattern",
    "RestElement",
    "ArrayPattern",
    "SpreadElement",
    "ClassDeclaration",
    "ClassMethod",
    "LabeledStatement",
    "BreakStatement",
    "DO_NOT_WARN_TYPES",
    "AssignmentExpression",
    "BooleanExpression",
    "WhileStatement",
    "ReturnStatement",
    "ConditionalExpression",
    "ForInStatement",
    "ArrayExpression",
    "SwitchStatement",
    "SwitchCase",
    "ThrowStatement",
    "UpdateExpression",
    "SequenceExpression",
    "ContinueStatement",
    "ForStatement",
    "TemplateLiteral",
    "AwaitExpression",
    "DoWhileStatement",
    "ForOfStatement",
    "TaggedTemplateExpression",
    "ClassExpression",
    "OptionalCallExpression",
    "JSXExpressionContainer",
    "root",
    "parentType",
    "addReference",
    "getStringArg",
    "index",
    "addTranslation",
    "entry",
    "lineNo",
    "cur",
    "msgid",
    "scope",
    "applicationTypes",
    "includes",
    "addCommonjsModule",
    "isMemberExpression",
    "thisAlias",
    "originalAlias",
    "alias",
    "aliasIsThis",
    "match",
    "classDef",
    "__pushMeta",
    "typeProp",
    "__popMeta",
    "prototype",
    "hasOwnProperty",
    "call",
    "ENVIRONMENT_CONSTANTS",
    "symbol",
    "addEnvCheck",
    "thisArgument",
    "thisExpression",
    "unshift",
    "callExpr",
    "methodName",
    "exprSplice",
    "exprUnshift",
    "arg0",
    "arg1",
    "msgid_plural",
    "arg2",
    "hasDeclaration",
    "container",
    "RESERVED_WORDS",
    "Property",
    "functionId",
    "VariableDeclaration",
    "declarations",
    "decl",
    "visitor",
    "packageName",
    "Error",
    "pop",
    "old",
    "isLoadScope",
    "valueName",
    "re",
    "RegExp",
    "isIgnored",
    "DO_NOT_ENCODE",
    "__proto__",
    "__iterator__",
    "__dirname",
    "__filename",
    "coded",
    "db",
    "getDatabase",
    "manglePrefixes",
    "nextPrefix",
    "classPrefixes",
    "prefixes",
    "prefix",
    "stub",
    "linenum",
    "Set",
    "add",
    "trim",
    "endsWith",
    "removeIgnore",
    "requiredOpts",
    "msgId",
    "fragment",
    "marker",
    "end",
    "args",
    "fromArguments",
    "opts",
    "requireOpts",
    "DEFER_SAFE_SYMBOLS",
    "some",
    "__findProperty",
    "props",
    "getUnresolvedSymbols",
    "getClassName",
    "word",
    "getRootDir",
    "sep",
    "getSourceFileExtension",
    "getOutputDir",
    "getNamespace",
    "m",
    "pragmaFrag",
    "NODE_GLOBALS",
    "RHINO_GLOBALS",
    "true"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/tool/compiler/ClassFile.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo\n *\n *    Copyright:\n *      2011-2017 Zenesis Limited, http://www.zenesis.com\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *\n * *********************************************************************** */\n\n/* eslint-disable padded-blocks */\n\nvar fs = require(\"fs\");\nvar babelCore = require(\"@babel/core\");\n\nvar types = require(\"@babel/types\");\nvar babylon = require(\"@babel/parser\");\nvar async = require(\"async\");\nvar pathModule = require(\"upath\");\n\nvar log = qx.tool.utils.LogManager.createLog(\"analyser\");\n\n/**\n * Helper method that collapses the MemberExpression into a string\n * @param node\n * @returns {string}\n */\nfunction collapseMemberExpression(node) {\n  var done = false;\n  function doCollapse(node) {\n    if (node.type == \"ThisExpression\") {\n      return \"this\";\n    }\n    if (node.type == \"Super\") {\n      return \"super\";\n    }\n    if (node.type == \"Identifier\") {\n      return node.name;\n    }\n    if (node.type == \"ArrayExpression\") {\n      var result = [];\n      node.elements.forEach(element => result.push(doCollapse(element)));\n      return result;\n    }\n    if (node.type != \"MemberExpression\") {\n      return \"(\" + node.type + \")\";\n    }\n    if (types.isIdentifier(node.object)) {\n      let str = node.object.name;\n      if (node.property.name) {\n        str += \".\" + node.property.name;\n      } else {\n        done = true;\n      }\n      return str;\n    }\n    var str;\n    if (node.object.type == \"ArrayExpression\") {\n      str = \"[]\";\n    } else {\n      str = doCollapse(node.object);\n    }\n    if (done) {\n      return str;\n    }\n    // `computed` is set if the expression is a subscript, eg `abc[def]`\n    if (node.computed) {\n      done = true;\n    } else if (node.property.name) {\n      str += \".\" + node.property.name;\n    } else {\n      done = true;\n    }\n    return str;\n  }\n\n  return doCollapse(node);\n}\n\nfunction isCollapsibleLiteral(node) {\n  let nodeType = node.type;\n  return (\n    nodeType === \"Literal\" ||\n    nodeType === \"StringLiteral\" ||\n    nodeType === \"NumericLiteral\" ||\n    nodeType === \"BooleanLiteral\" ||\n    nodeType === \"BigIntLiteral\"\n  );\n}\n\n/**\n * Helper method that expands a dotted string into MemberExpression\n * @param str\n * @returns {*}\n */\nfunction expandMemberExpression(str) {\n  var segs = str.split(\".\");\n  var expr = types.memberExpression(\n    types.identifier(segs[0]),\n    types.identifier(segs[1])\n  );\n\n  for (var i = 2; i < segs.length; i++) {\n    expr = types.memberExpression(expr, types.identifier(segs[i]));\n  }\n  return expr;\n}\n\nfunction literalValueToExpression(value) {\n  if (value === null || value === undefined) {\n    return types.nullLiteral();\n  }\n  if (typeof value == \"boolean\") {\n    return types.booleanLiteral(value);\n  }\n  if (typeof value == \"number\") {\n    return types.numericLiteral(value);\n  }\n  if (typeof value == \"string\") {\n    return types.stringLiteral(value);\n  }\n  if (qx.lang.Type.isRegExp(value)) {\n    return types.regExpLiteral(value.toString());\n  }\n  if (qx.lang.Type.isDate(value)) {\n    return types.stringLiteral(value.toString());\n  }\n\n  if (qx.lang.Type.isArray(value)) {\n    var arr = [];\n    value.forEach(function (item) {\n      arr.push(literalValueToExpression(item));\n    });\n    return types.arrayExpression(arr);\n  }\n\n  if (typeof value != \"object\") {\n    log.error(\"Cannot serialise value \" + value + \" into AST\");\n    return types.nullLiteral();\n  }\n\n  var properties = [];\n  for (var key in value) {\n    var expr = literalValueToExpression(value[key]);\n    var prop = types.objectProperty(types.stringLiteral(key), expr);\n    properties.push(prop);\n  }\n  return types.objectExpression(properties);\n}\n\nfunction formatValueAsCode(value) {\n  if (value === undefined) {\n    return \"undefined\";\n  }\n  if (value === null) {\n    return \"null\";\n  }\n  if (typeof value === \"string\") {\n    return JSON.stringify(value);\n  }\n  if (typeof value === \"object\" && value instanceof Date) {\n    return \"new Date(\" + value.getTime() + \")\";\n  }\n  return value.toString();\n}\n\n/**\n * A class file is parsed and anaysed into an instance of ClassFile; it is\n * connected to the Analyser that found the class so that dependencies can be\n * identified.\n */\nqx.Class.define(\"qx.tool.compiler.ClassFile\", {\n  extend: qx.core.Object,\n\n  /**\n   * Constructor\n   *\n   * @param analyser {Analyser} the Analyser that found the file\n   * @param className {String} the full name of the class\n   * @param library {Library} the Library the class belongs to (note that the class name is\n   *  not always enough to identify the library, eg private source files such as qxWeb.js)\n   */\n  construct(analyser, className, library) {\n    super();\n\n    this.__analyser = analyser;\n    this.__className = className;\n    this.__metaStack = [];\n    this.__metaDefinitions = {};\n    this.__library = library;\n    this.__sourceFilename = qx.tool.compiler.ClassFile.getSourcePath(\n      library,\n      className\n    );\n\n    this.__requiredClasses = {};\n    this.__environmentChecks = {\n      provided: {},\n      required: {}\n    };\n\n    this.__requiredAssets = [];\n    this.__translations = [];\n    this.__markers = [];\n    this.__haveMarkersFor = {};\n\n    this.__scope = {\n      parent: null,\n      vars: {},\n      unresolved: {}\n    };\n\n    this.__externals = [];\n    this.__commonjsModules = {};\n\n    this.__taskQueueDrains = [];\n    this.__taskQueue = async.queue(function (task, cb) {\n      task(cb);\n    });\n    this.__taskQueue.drain = this._onTaskQueueDrain;\n    this.__taskQueue.error = err => {\n      qx.tool.compiler.Console.error(err.stack || err);\n    };\n\n    analyser.getIgnores().forEach(s => this.addIgnore(s));\n    this.__globalSymbols = {};\n    this.__privates = {};\n    this.__blockedPrivates = {};\n    this.__privateMangling = analyser.getManglePrivates();\n\n    const CF = qx.tool.compiler.ClassFile;\n    const addSymbols = arr =>\n      arr.forEach(s => (this.__globalSymbols[s] = true));\n    if (analyser.getGlobalSymbols().length) {\n      addSymbols(analyser.getGlobalSymbols());\n    } else {\n      addSymbols(CF.QX_GLOBALS);\n      addSymbols(CF.COMMON_GLOBALS);\n      addSymbols(CF.BROWSER_GLOBALS);\n    }\n  },\n\n  members: {\n    __analyser: null,\n    __className: null,\n    __numClassesDefined: 0,\n    __library: null,\n    __requiredClasses: null,\n    __environmentChecks: null,\n    __requiredAssets: null,\n    __translateMessageIds: null,\n    __scope: null,\n    __inDefer: false,\n    __inConstruct: false,\n    __taskQueue: null,\n    __taskQueueDrains: null,\n    __markers: null,\n    __haveMarkersFor: null,\n    __classMeta: null,\n    __metaStack: null,\n    __metaDefinitions: null,\n    __fatalCompileError: false,\n    __translations: null,\n    __dbClassInfo: null,\n    __hasDefer: null,\n    __definingType: null,\n    __sourceFilename: null,\n    __taskQueueDrain: null,\n    __globalSymbols: null,\n    __privates: null,\n    __blockedPrivates: null,\n    __externals: null,\n    __commonjsModules: null,\n\n    _onTaskQueueDrain() {\n      var cbs = this.__taskQueueDrain;\n      this.__taskQueueDrain = [];\n      cbs.forEach(function (cb) {\n        cb();\n      });\n    },\n\n    _waitForTaskQueueDrain(cb) {\n      if (this.__taskQueue.length() == 0) {\n        cb();\n      } else {\n        this.__taskQueueDrains.push(cb);\n      }\n    },\n\n    _queueTask(cb) {\n      this.__taskQueue.push(cb);\n    },\n\n    /**\n     * Returns the absolute path to the class file\n     * @returns {string}\n     */\n    getSourcePath() {\n      return this.__sourceFilename;\n    },\n\n    /**\n     * Returns the path to the rewritten class file\n     * @returns {string}\n     */\n    getOutputPath() {\n      return qx.tool.compiler.ClassFile.getOutputPath(\n        this.__analyser,\n        this.__className\n      );\n    },\n\n    /**\n     * Loads the source, transpiles and analyses the code, storing the result in outputPath\n     *\n     * @param callback\n     *          {Function} callback for when the load is completed\n     */\n    load(callback) {\n      var t = this;\n      var className = this.__className;\n      t.__fatalCompileError = false;\n      t.__numClassesDefined = 0;\n\n      fs.readFile(\n        this.getSourcePath(),\n        { encoding: \"utf-8\" },\n        function (err, src) {\n          if (err) {\n            callback(err);\n            return;\n          }\n          var result;\n          try {\n            let babelConfig = t.__analyser.getBabelConfig() || {};\n            let options = qx.lang.Object.clone(babelConfig.options || {}, true);\n            options.modules = false;\n            let extraPreset = [\n              {\n                plugins: []\n              }\n            ];\n\n            if (babelConfig.plugins) {\n              for (let key in babelConfig.plugins) {\n                if (babelConfig.plugins[key] === true) {\n                  extraPreset[0].plugins.push(require.resolve(key));\n                } else if (babelConfig.plugins[key]) {\n                  extraPreset[0].plugins.push([\n                    require.resolve(key),\n                    babelConfig.plugins[key]\n                  ]);\n                }\n              }\n            }\n            let myPlugins = t._babelClassPlugins();\n            var config = {\n              babelrc: false,\n              sourceFileName: t.getSourcePath(),\n              filename: t.getSourcePath(),\n              sourceMaps: true,\n              presets: [\n                [\n                  {\n                    plugins: [myPlugins.CodeElimination]\n                  }\n                ],\n\n                [\n                  {\n                    plugins: [myPlugins.Compiler]\n                  }\n                ],\n\n                [require.resolve(\"@babel/preset-env\"), options],\n                [require.resolve(\"@babel/preset-typescript\")],\n                [\n                  require.resolve(\"@babel/preset-react\"),\n                  qx.tool.compiler.ClassFile.JSX_OPTIONS\n                ]\n              ],\n              generatorOpts: {\n                compact: false\n              },\n\n              parserOpts: {\n                allowSuperOutsideMethod: true,\n                sourceType: \"script\"\n              },\n\n              passPerPreset: true\n            };\n\n            if (extraPreset[0].plugins.length) {\n              config.presets.push(extraPreset);\n            }\n            if (this.__privateMangling == \"unreadable\") {\n              config.blacklist = [\"spec.functionName\"];\n            }\n            result = babelCore.transform(src, config);\n          } catch (ex) {\n            qx.tool.compiler.Console.log(ex);\n            t.addMarker(\"compiler.syntaxError\", ex.loc, ex.message);\n            t.__fatalCompileError = true;\n            t._compileDbClassInfo();\n            callback();\n            return;\n          }\n\n          if (!t.__numClassesDefined) {\n            t.addMarker(\"compiler.missingClassDef\");\n            t.__fatalCompileError = true;\n            t._compileDbClassInfo();\n            callback();\n            return;\n          }\n\n          if (!t.__metaDefinitions[className]) {\n            t.addMarker(\n              \"compiler.wrongClassName\",\n              null,\n              className,\n              Object.keys(t.__metaDefinitions).join(\", \")\n            );\n\n            t._compileDbClassInfo();\n          }\n\n          var pos = className.lastIndexOf(\".\");\n          var name = pos > -1 ? className.substring(pos + 1) : className;\n          var outputPath = t.getOutputPath();\n          qx.tool.utils.Utils.mkParentPath(outputPath, function (err) {\n            if (err) {\n              callback(err);\n              return;\n            }\n            let mappingUrl = name + \".js.map\";\n            if (\n              qx.lang.Array.contains(\n                t.__analyser.getApplicationTypes(),\n                \"browser\"\n              )\n            ) {\n              mappingUrl += \"?dt=\" + new Date().getTime();\n            }\n            fs.writeFile(\n              outputPath,\n              result.code + \"\\n\\n//# sourceMappingURL=\" + mappingUrl,\n              { encoding: \"utf-8\" },\n              function (err) {\n                if (err) {\n                  callback(err);\n                  return;\n                }\n                fs.writeFile(\n                  outputPath + \".map\",\n                  JSON.stringify(result.map, null, 2),\n                  { encoding: \"utf-8\" },\n                  function (err) {\n                    if (err) {\n                      callback(err);\n                      return;\n                    }\n                    t._waitForTaskQueueDrain(function () {\n                      callback();\n                    });\n                  }\n                );\n              }\n            );\n          });\n        }\n      );\n    },\n\n    /**\n     * Writes the data for the database; updates the record, which may have been previously\n     * used (so needs to be zero'd out)\n     * @param dbClassInfo {Map}\n     */\n    writeDbInfo(dbClassInfo) {\n      delete dbClassInfo.unresolved;\n      delete dbClassInfo.dependsOn;\n      delete dbClassInfo.assets;\n      delete dbClassInfo.translations;\n      delete dbClassInfo.markers;\n      delete dbClassInfo.fatalCompileError;\n      delete dbClassInfo.commonjsModules;\n      for (var key in this.__dbClassInfo) {\n        dbClassInfo[key] = this.__dbClassInfo[key];\n      }\n    },\n\n    /**\n     * Compiles the DbInfo POJO to be stored in the database about this class\n     * */\n    _compileDbClassInfo() {\n      var t = this;\n      var dbClassInfo = (this.__dbClassInfo = {});\n\n      // Collect the dependencies on other classes\n      var deps = this.getRequiredClasses();\n      if (t.__usesJsx) {\n        let JSX = qx.tool.compiler.ClassFile.JSX_OPTIONS;\n        let classname = JSX.pragma;\n        let pos = classname.lastIndexOf(\".\");\n        classname = classname.substring(0, pos);\n        if (!deps[classname]) {\n          deps[classname] = {};\n        }\n      }\n      for (var name in deps) {\n        var dep = deps[name];\n        if (!dep.ignore) {\n          if (!dbClassInfo.dependsOn) {\n            dbClassInfo.dependsOn = {};\n          }\n          dbClassInfo.dependsOn[name] = dep;\n        }\n      }\n\n      function fixAnnos(section) {\n        if (!section) {\n          return;\n        }\n        Object.keys(section).forEach(name => {\n          if (name[0] == \"@\") {\n            var value = section[name];\n            delete section[name];\n            name = name.substring(1);\n            var meta = section[name];\n            if (meta) {\n              if (!meta.annotations) {\n                meta.annotations = [];\n              }\n              meta.annotations.push(value);\n            }\n          }\n        });\n      }\n\n      var meta = this.getOuterClassMeta();\n      if (meta) {\n        fixAnnos(meta.events);\n        fixAnnos(meta.members);\n        fixAnnos(meta.statics);\n\n        if (meta.properties && meta.members) {\n          Object.keys(meta.properties).forEach(name => {\n            let pm = meta.properties[name];\n            if (pm.apply) {\n              let fm = meta.members[pm.apply];\n              if (fm) {\n                if (!fm.applyFor) {\n                  fm.applyFor = [];\n                }\n                fm.applyFor.push(name);\n              }\n            }\n          });\n        }\n\n        // Class heirararchy\n        dbClassInfo.extends = meta.superClass;\n        dbClassInfo.include = meta.mixins.slice(0);\n        dbClassInfo.implement = meta.interfaces.slice(0);\n      }\n\n      // Environment Checks\n      if (\n        Object.keys(this.__environmentChecks.provided).length ||\n        Object.keys(this.__environmentChecks.required).length\n      ) {\n        dbClassInfo.environment = { provided: [], required: {} };\n        for (let key in this.__environmentChecks.provided) {\n          dbClassInfo.environment.provided.push(key);\n        }\n        for (let key in this.__environmentChecks.required) {\n          dbClassInfo.environment.required[key] =\n            this.__environmentChecks.required[key];\n        }\n      }\n\n      // Save whether the class has a defer method\n      dbClassInfo.hasDefer = this.hasDefer();\n\n      // Unresolved symbols\n      dbClassInfo.unresolved = [];\n      for (let name in this.__scope.unresolved) {\n        let item = this.__scope.unresolved[name];\n        // item is undefined if it has already been removed from the list\n        if (item === undefined) {\n          continue;\n        }\n        // One of multiple classes defined in this file\n        if (this.__metaDefinitions[name]) {\n          continue;\n        }\n        var info = t.__analyser.getSymbolType(name);\n        if (info && info.className) {\n          t._requireClass(info.className, {\n            load: item.load,\n            defer: item.defer\n          });\n        } else if (info && info.symbolType == \"package\") {\n          t.deleteReference(name);\n        } else {\n          dbClassInfo.unresolved.push(item);\n          for (var j = 0; j < item.locations.length; j++) {\n            t.addMarker(\n              \"symbol.unresolved#\" + name,\n              item.locations[j].start,\n              name\n            );\n          }\n        }\n      }\n      if (!dbClassInfo.unresolved.length) {\n        delete dbClassInfo.unresolved;\n      }\n\n      // Assets\n      var assets = this.getAssets();\n      if (assets.length) {\n        dbClassInfo.assets = assets;\n      }\n      if (meta) {\n        if (meta.aliases) {\n          dbClassInfo.aliases = {};\n          for (let name in meta.aliases.aliasMap) {\n            dbClassInfo.aliases[name] = meta.aliases.aliasMap[name];\n          }\n        }\n        if (meta.themeMeta) {\n          dbClassInfo.themeMeta = {};\n          for (let name in meta.themeMeta.themeMetaMap) {\n            dbClassInfo.themeMeta[name] = meta.themeMeta.themeMetaMap[name];\n          }\n        }\n      }\n      if (this.__externals.length) {\n        dbClassInfo.externals = this.__externals;\n      }\n\n      // Translation\n      if (this.__translations.length) {\n        dbClassInfo.translations = this.__translations.slice(0);\n      }\n\n      // Markers\n      if (this.__markers.length) {\n        dbClassInfo.markers = qx.lang.Array.clone(this.__markers);\n      }\n\n      // Errors\n      if (this.__fatalCompileError) {\n        dbClassInfo.fatalCompileError = true;\n      }\n\n      // CommonJS modules\n      if (Object.keys(this.__commonjsModules).length > 0) {\n        dbClassInfo.commonjsModules = {};\n        for (let moduleName in this.__commonjsModules) {\n          dbClassInfo.commonjsModules[moduleName] = [ ...this.__commonjsModules[moduleName] ];\n        }\n      }\n\n      return dbClassInfo;\n    },\n\n    /**\n     * Returns the loaded meta data\n     */\n    getOuterClassMeta() {\n      let src = this.__metaDefinitions[this.__className] || null;\n      if (!src) {\n        return src;\n      }\n      let dest = {};\n      Object.keys(src)\n        .filter(key => key[0] != \"_\")\n        .forEach(key => (dest[key] = src[key]));\n      return dest;\n    },\n\n    /**\n     * Babel plugin\n     */\n    _babelClassPlugins() {\n      var t = this;\n\n      function getKeyName(key) {\n        var keyName = key.type == \"StringLiteral\" ? key.value : key.name;\n        return keyName;\n      }\n\n      function checkNodeJsDocDirectives(node) {\n        var jsdoc = getJsDoc(node.leadingComments);\n        if (jsdoc) {\n          checkJsDocDirectives(jsdoc, node.loc);\n        }\n        return jsdoc;\n      }\n\n      function checkJsDocDirectives(jsdoc, loc) {\n        if (!jsdoc) {\n          return jsdoc;\n        }\n        if (jsdoc[\"@use\"]) {\n          jsdoc[\"@use\"].forEach(function (elem) {\n            t._requireClass(elem.body, {\n              where: \"use\",\n              load: false,\n              location: loc\n            });\n          });\n        }\n        if (jsdoc[\"@require\"]) {\n          jsdoc[\"@require\"].forEach(function (elem) {\n            t._requireClass(elem.body, {\n              where: \"require\",\n              load: false,\n              location: loc\n            });\n          });\n        }\n        if (jsdoc[\"@optional\"]) {\n          jsdoc[\"@optional\"].forEach(function (elem) {\n            t.addIgnore(elem.body);\n          });\n        }\n        if (jsdoc[\"@ignore\"]) {\n          jsdoc[\"@ignore\"].forEach(function (elem) {\n            t.addIgnore(elem.body);\n          });\n        }\n        if (jsdoc[\"@external\"]) {\n          jsdoc[\"@external\"].forEach(function (elem) {\n            t.addExternal(elem.body);\n            t._requireAsset(elem.body);\n          });\n        }\n        if (jsdoc[\"@asset\"]) {\n          jsdoc[\"@asset\"].forEach(function (elem) {\n            t._requireAsset(elem.body);\n          });\n        }\n        return jsdoc;\n      }\n\n      function enterFunction(path, node, idNode) {\n        node = node || path.node;\n        idNode = idNode || node.id || null;\n\n        let isClassMember =\n          t.__classMeta &&\n          t.__classMeta._topLevel &&\n          t.__classMeta._topLevel.keyName == \"members\" &&\n          path.parentPath.parentPath.parentPath == t.__classMeta._topLevel.path;\n        if (idNode) {\n          t.addDeclaration(idNode.name);\n        }\n        t.pushScope(idNode ? idNode.name : null, node, isClassMember);\n\n        function addDecl(param) {\n          if (param.type == \"AssignmentPattern\") {\n            addDecl(param.left);\n          } else if (param.type == \"RestElement\") {\n            t.addDeclaration(param.argument.name);\n          } else if (param.type == \"Identifier\") {\n            t.addDeclaration(param.name);\n          } else if (param.type == \"ArrayPattern\") {\n            param.elements.forEach(elem => addDecl(elem));\n          } else if (param.type == \"ObjectPattern\") {\n            param.properties.forEach(prop => addDecl(prop.value));\n          } else {\n            t.addMarker(\"testForFunctionParameterType\", node.loc, param.type);\n          }\n        }\n        node.params.forEach(param => {\n          addDecl(param);\n        });\n        checkNodeJsDocDirectives(node);\n      }\n\n      function exitFunction(path, node) {\n        node = node || path.node;\n        t.popScope(node);\n      }\n\n      var FUNCTION_DECL_OR_EXPR = {\n        enter: path => enterFunction(path),\n        exit: path => exitFunction(path)\n      };\n\n      function getJsDoc(comment) {\n        if (!comment) {\n          return null;\n        }\n        if (!qx.lang.Type.isArray(comment)) {\n          comment = [comment];\n        }\n        var result = {};\n        comment.forEach(comment => {\n          var tmp = qx.tool.compiler.jsdoc.Parser.parseComment(comment.value);\n          for (var key in tmp) {\n            var value = tmp[key];\n            if (!result[key]) {\n              result[key] = value;\n            } else {\n              qx.lang.Array.append(result[key], value);\n            }\n          }\n        });\n\n        return result;\n      }\n\n      function makeMeta(sectionName, functionName, node) {\n        var meta;\n        if (functionName) {\n          var section = t.__classMeta[sectionName];\n          if (section === undefined) {\n            section = t.__classMeta[sectionName] = {};\n          }\n          meta = section[functionName];\n          if (meta === undefined) {\n            meta = section[functionName] = {};\n          }\n        } else {\n          meta = t.__classMeta[sectionName];\n          if (meta === undefined) {\n            meta = t.__classMeta[sectionName] = {};\n          }\n        }\n        meta.location = node.loc;\n\n        if (node.leadingComments) {\n          let jsdoc = checkNodeJsDocDirectives(node);\n          if (jsdoc) {\n            meta.jsdoc = jsdoc;\n          }\n        }\n\n        if (sectionName === \"members\" || sectionName === \"statics\") {\n          if (\n            node.type == \"ObjectMethod\" ||\n            node.value.type === \"FunctionExpression\"\n          ) {\n            meta.type = \"function\";\n          } else {\n            meta.type = \"variable\";\n          }\n          if (functionName.startsWith(\"__\")) {\n            meta.access = \"private\";\n          } else if (functionName.startsWith(\"_\")) {\n            meta.access = \"protected\";\n          } else {\n            meta.access = \"public\";\n          }\n        }\n        return meta;\n      }\n\n      var es6ClassDeclarations = 0;\n      var needsQxCoreEnvironment = false;\n\n      var COLLECT_CLASS_NAMES_VISITOR = {\n        MemberExpression(path) {\n          var self = this;\n          var str = collapseMemberExpression(path.node);\n          t._requireClass(str, { location: path.node.loc });\n          var info = t.__analyser.getSymbolType(str);\n          if (info && info.symbolType == \"class\") {\n            self.collectedClasses.push(str);\n          }\n        }\n      };\n\n      const CODE_ELIMINATION_VISITOR = {\n        ClassBody: {\n          enter(path) {\n            es6ClassDeclarations++;\n          },\n          exit(path) {\n            es6ClassDeclarations--;\n          }\n        },\n\n        CallExpression(path) {\n          const name = collapseMemberExpression(path.node.callee);\n\n          if (\n            (name === \"qx.core.Environment.select\" ||\n              name === \"qx.core.Environment.get\") &&\n            types.isLiteral(path.node.arguments[0])\n          ) {\n            const arg = path.node.arguments[0];\n            const env = t.__analyser.getEnvironment();\n            const envValue = env[arg.value];\n\n            if (envValue !== undefined) {\n              if (name === \"qx.core.Environment.get\") {\n                path.skip();\n                path.replaceWithSourceString(formatValueAsCode(envValue));\n                return;\n              } else if (name === \"qx.core.Environment.select\") {\n                const subPath = path.get(\"arguments.1\");\n                let option = subPath.node.properties.find(\n                  prop => prop.key.value === envValue.toString()\n                );\n\n                if (!option) {\n                  // try to find default value\n                  option = subPath.node.properties.find(\n                    prop => prop.key.value === \"default\"\n                  );\n                }\n\n                if (option) {\n                  // path.skip();\n                  path.replaceWith(option.value);\n                  return;\n                }\n              }\n            }\n            needsQxCoreEnvironment = path.node.loc;\n          }\n        },\n\n        IfStatement: {\n          exit(path) {\n            let node = path.node;\n\n            // If it's a literal value, we can eliminate code because we can resolve it now.  This\n            //  is really important for anything wrapped in `if (qx.core.Environment.get(\"qx.debug\")) ...`\n            //  because the `qx.core.Environment.get` is replaced with a literal value and we need to\n            //  use this to remove the unwanted code.\n            if (types.isLiteral(node.test)) {\n              if (node.test.value) {\n                path.replaceWith(node.consequent);\n              } else if (node.alternate) {\n                path.replaceWith(node.alternate);\n              } else {\n                path.remove();\n              }\n            }\n          }\n        },\n\n        LogicalExpression: {\n          exit(path) {\n            let node = path.node;\n            if (types.isLiteral(node.left) && types.isLiteral(node.right)) {\n              let result =\n                (node.operator == \"&&\" &&\n                  node.left.value &&\n                  node.right.value) ||\n                (node.operator == \"||\" &&\n                  (node.left.value || node.right.value));\n              path.replaceWith(literalValueToExpression(result));\n            }\n          }\n        },\n\n        BinaryExpression: {\n          exit(path) {\n            let node = path.node;\n            if (\n              isCollapsibleLiteral(node.left) &&\n              isCollapsibleLiteral(node.right)\n            ) {\n              if (\"+-*/\".indexOf(node.operator) > -1) {\n                let result;\n                switch (node.operator) {\n                  case \"+\":\n                    result = node.left.value + node.right.value;\n                    break;\n                  case \"-\":\n                    result = node.left.value - node.right.value;\n                    break;\n                  case \"/\":\n                    result = node.left.value / node.right.value;\n                    break;\n                  case \"*\":\n                    result = node.left.value * node.right.value;\n                    break;\n                }\n\n                path.skip();\n                path.replaceWithSourceString(formatValueAsCode(result));\n              } else {\n                let result;\n                switch (node.operator) {\n                  case \"==\":\n                    result = node.left.value == node.right.value;\n                    break;\n                  case \"===\":\n                    result = node.left.value === node.right.value;\n                    break;\n                  case \"!=\":\n                    result = node.left.value != node.right.value;\n                    break;\n                  case \"!==\":\n                    result = node.left.value !== node.right.value;\n                    break;\n                }\n\n                if (result !== undefined) {\n                  path.replaceWith(types.booleanLiteral(Boolean(result)));\n                }\n              }\n            }\n          }\n        },\n\n        UnaryExpression: {\n          exit(path) {\n            if (\n              path.node.operator === \"!\" &&\n              types.isLiteral(path.node.argument)\n            ) {\n              path.replaceWith(types.booleanLiteral(!path.node.argument.value));\n            }\n          }\n        }\n      };\n\n      function collectJson(node, isProperties, jsonPath) {\n        var result;\n\n        if (node.type == \"ObjectExpression\") {\n          result = {};\n          let nextJsonPath = jsonPath ? jsonPath + \".\" : \"\";\n          node.properties.forEach(function (prop) {\n            var key = prop.key.name;\n            if (prop.type == \"ObjectMethod\") {\n              result[key] = \"[[ ObjectMethod Function ]]\";\n            } else {\n              var value = collectJson(\n                prop.value,\n                isProperties,\n                nextJsonPath + key\n              );\n\n              result[key] = value;\n            }\n          });\n        } else if (\n          node.type == \"Literal\" ||\n          node.type == \"StringLiteral\" ||\n          node.type == \"BooleanLiteral\" ||\n          node.type == \"NumericLiteral\" ||\n          node.type == \"NullLiteral\"\n        ) {\n          if (typeof node.value == \"string\") {\n            let isIdentifier = false;\n            if (\n              isProperties &&\n              (jsonPath === \"apply\" ||\n                jsonPath === \"transform\" ||\n                jsonPath === \"isEqual\")\n            ) {\n              isIdentifier = true;\n            }\n            node.value = t.encodePrivate(node.value, isIdentifier, node.loc);\n          }\n          result = node.value;\n        } else if (node.type == \"ArrayExpression\") {\n          result = [];\n          node.elements.forEach(function (elem) {\n            result.push(collectJson(elem, isProperties));\n          });\n        } else if (node.type == \"Identifier\") {\n          node.name = t.encodePrivate(node.name, true, node.loc);\n          result = node.name;\n        } else if (\n          node.type == \"CallExpression\" ||\n          node.type == \"FunctionExpression\" ||\n          node.type == \"ArrowFunctionExpression\"\n        ) {\n          result = new Function(\"[[ Function ]]\");\n        } else if (node.type == \"MemberExpression\") {\n          result = collapseMemberExpression(node);\n        } else if (node.type == \"UnaryExpression\") {\n          if (node.operator == \"-\") {\n            let tmp = collectJson(node.argument, isProperties);\n            if (typeof tmp == \"number\") {\n              return tmp * -1;\n            }\n          } else if (node.operator == \"!\") {\n            let tmp = collectJson(node.argument, isProperties);\n            if (typeof tmp == \"boolean\") {\n              return !tmp;\n            }\n          }\n          result = \"[[ UnaryExpression ]]\";\n        } else if (\n          node.type == \"NewExpression\" ||\n          node.type == \"BinaryExpression\"\n        ) {\n          result = \"[[ \" + node.type + \" ]]\";\n        } else {\n          t.warn(\n            \"Cannot interpret AST \" +\n              node.type +\n              \" at \" +\n              t.__className +\n              (node.loc\n                ? \" [\" + node.loc.start.line + \",\" + node.loc.start.column + \"]\"\n                : \"\")\n          );\n\n          result = null;\n        }\n        return result;\n      }\n\n      const ALLOWED_KEYS = {\n        class: {\n          static: {\n            \"@\": \"object\",\n            type: \"string\", // String\n            statics: \"object\", // Map\n            environment: \"object\", // Map\n            defer: \"function\" // Function\n          },\n          normal: {\n            \"@\": \"object\",\n            \"@construct\": \"object\",\n            \"@destruct\": \"object\",\n            type: \"string\", // String\n            extend: \"function\", // Function\n            implement: \"object\", // Interface[]\n            include: \"object\", // Mixin[]\n            construct: \"function\", // Function\n            statics: \"object\", // Map\n            properties: \"object\", // Map\n            members: \"object\", // Map\n            environment: \"object\", // Map\n            events: \"object\", // Map\n            defer: \"function\", // Function\n            destruct: \"function\" // Function\n          }\n        },\n\n        interface: {\n          extend: \"object\", // Interface | Interface[]\n          statics: \"object\", // Map\n          members: \"object\", // Map\n          properties: \"object\", // Map\n          events: \"object\" // Map\n        },\n        mixin: {\n          include: \"object\", // Mixin | Mixin[]\n          statics: \"object\", // Map\n          members: \"object\", // Map\n          properties: \"object\", // Map\n          events: \"object\", // Map\n          destruct: \"function\", // Function\n          construct: \"function\" // Function\n        },\n        theme: {\n          title: \"string\", // String\n          aliases: \"object\", // Map\n          type: \"string\", // String\n          extend: \"object\", // Theme\n          colors: \"object\", // Map\n          borders: \"object\", // Map\n          decorations: \"object\", // Map\n          fonts: \"object\", // Map\n          icons: \"object\", // Map\n          widgets: \"object\", // Map\n          appearances: \"object\", // Map\n          meta: \"object\", // Map\n          include: \"object\", // Array\n          patch: \"object\", // Array\n          boot: \"function\" // Function\n        }\n      };\n\n      function isValidExtendClause(prop) {\n        if (\n          prop.value.type == \"MemberExpression\" ||\n          prop.value.type == \"Identifier\" ||\n          prop.value.type == \"NullLiteral\"\n        ) {\n          return true;\n        }\n        if (t.__classMeta.type === \"class\") {\n          return false;\n        }\n        if (prop.value.type == \"ArrayExpression\") {\n          return prop.value.elements.every(\n            elem => elem.type == \"MemberExpression\" || elem.type == \"Identifier\"\n          );\n        }\n        return false;\n      }\n\n      const FUNCTION_NAMES = {\n        construct: \"$$constructor\",\n        destruct: \"$$destructor\",\n        defer: null\n      };\n\n      function checkValidTopLevel(path) {\n        var prop = path.node;\n        var keyName = getKeyName(prop.key);\n        let allowedKeys = ALLOWED_KEYS[t.__classMeta.type];\n        if (t.__classMeta.type === \"class\") {\n          allowedKeys =\n            allowedKeys[t.__classMeta.isStatic ? \"static\" : \"normal\"];\n        }\n        if (allowedKeys[keyName] === undefined) {\n          t.addMarker(\n            \"compiler.invalidClassDefinitionEntry\",\n            prop.loc,\n            t.__classMeta.type,\n            keyName\n          );\n        }\n      }\n      function handleTopLevelMethods(path, keyName, functionNode) {\n        if (keyName == \"defer\") {\n          t.__hasDefer = true;\n          t.__inDefer = true;\n        }\n        t.__classMeta.functionName = FUNCTION_NAMES[keyName] || keyName;\n        if (FUNCTION_NAMES[keyName] !== undefined) {\n          makeMeta(keyName, null, functionNode);\n        }\n        enterFunction(path, functionNode);\n        path.traverse(VISITOR);\n        exitFunction(path, functionNode);\n        path.skip();\n        t.__classMeta.functionName = null;\n      }\n\n      var CLASS_DEF_VISITOR = {\n        ClassBody: {\n          enter(path) {\n            es6ClassDeclarations++;\n          },\n          exit(path) {\n            es6ClassDeclarations--;\n          }\n        },\n\n        ObjectMethod(path) {\n          if (path.parentPath.parentPath != this.classDefPath) {\n            path.skip();\n            path.traverse(VISITOR);\n            return;\n          }\n          var keyName = getKeyName(path.node.key);\n          checkValidTopLevel(path);\n          handleTopLevelMethods(path, keyName, path.node);\n        },\n\n        ObjectProperty(path) {\n          if (path.parentPath.parentPath != this.classDefPath) {\n            path.skip();\n            path.traverse(VISITOR);\n            return;\n          }\n          var prop = path.node;\n          var keyName = getKeyName(prop.key);\n          checkValidTopLevel(path);\n\n          if (FUNCTION_NAMES[keyName] !== undefined) {\n            let val = path.node.value;\n            val.leadingComments = (path.node.leadingComments || []).concat(\n              val.leadingComments || []\n            );\n\n            handleTopLevelMethods(path, keyName, val);\n            return;\n          }\n\n          if (keyName == \"extend\") {\n            if (!isValidExtendClause(prop)) {\n              t.addMarker(\"compiler.invalidExtendClause\", prop.value.loc);\n              t.__fatalCompileError = true;\n            } else {\n              t.__classMeta.superClass = collapseMemberExpression(prop.value);\n              t._requireClass(t.__classMeta.superClass, {\n                location: path.node.loc\n              });\n            }\n          } else if (keyName == \"type\") {\n            var type = prop.value.value;\n            t.__classMeta.isAbstract = type === \"abstract\";\n            t.__classMeta.isStatic = type === \"static\";\n            t.__classMeta.isSingleton = type === \"singleton\";\n          } else if (keyName == \"implement\") {\n            path.skip();\n            path.traverse(COLLECT_CLASS_NAMES_VISITOR, {\n              collectedClasses: t.__classMeta.interfaces\n            });\n          } else if (keyName == \"include\") {\n            path.skip();\n            path.traverse(COLLECT_CLASS_NAMES_VISITOR, {\n              collectedClasses: t.__classMeta.mixins\n            });\n          } else if (\n            keyName == \"members\" ||\n            keyName == \"statics\" ||\n            keyName == \"@\"\n          ) {\n            t.__classMeta._topLevel = {\n              path,\n              keyName\n            };\n\n            path.skip();\n            path.traverse(VISITOR);\n            t.__classMeta._topLevel = null;\n          } else if (keyName == \"properties\") {\n            path.skip();\n            if (!prop.value.properties) {\n              t.addMarker(\"class.invalidProperties\", prop.loc || null);\n            } else {\n              prop.value.properties.forEach(function (pdNode) {\n                var propName = getKeyName(pdNode.key);\n                var meta = makeMeta(\"properties\", propName, pdNode);\n                var data = collectJson(pdNode.value, true);\n                meta.name = propName;\n                meta.propertyType = \"new\";\n                [\n                  \"refine\",\n                  \"themeable\",\n                  \"event\",\n                  \"inheritable\",\n                  \"apply\",\n                  \"async\",\n                  \"group\",\n                  \"nullable\",\n                  \"init\",\n                  \"transform\"\n                ].forEach(name => (meta[name] = data[name]));\n                if (data.nullable !== undefined) {\n                  meta.allowNull = data.nullable;\n                }\n                if (data.check !== undefined) {\n                  if (qx.lang.Type.isArray(data.check)) {\n                    meta.possibleValues = data.check;\n                  } else {\n                    meta.check = data.check;\n                  }\n                }\n                if (data.init !== undefined) {\n                  meta.defaultValue = data.init;\n                }\n              });\n            }\n            path.traverse(VISITOR);\n          } else if (keyName == \"events\") {\n            path.skip();\n            if (prop.value.properties) {\n              prop.value.properties.forEach(function (eventNode) {\n                var eventName = getKeyName(eventNode.key);\n                var meta = makeMeta(\"events\", eventName, eventNode);\n                meta.name = eventName;\n                meta.type = collectJson(eventNode.value);\n              });\n            }\n            path.traverse(VISITOR);\n          } else if (keyName == \"aliases\") {\n            path.skip();\n            if (!prop.value.properties) {\n              t.addMarker(\"class.invalidAliases\", prop.loc || null);\n            } else {\n              var meta = makeMeta(\"aliases\", null, prop);\n              meta.aliasMap = {};\n              prop.value.properties.forEach(function (aliasNode) {\n                var aliasName = getKeyName(aliasNode.key);\n                var aliasValue = getKeyName(aliasNode.value);\n                meta.aliasMap[aliasName] = aliasValue;\n              });\n            }\n          } else if (keyName == \"meta\") {\n            path.skip();\n            if (!prop.value.properties) {\n              t.addMarker(\"class.invalidThemeMeta\", prop.loc || null);\n            } else {\n              let meta = makeMeta(\"themeMeta\", null, prop);\n              meta.themeMetaMap = {};\n              prop.value.properties.forEach(function (node) {\n                var key = getKeyName(node.key);\n                var value = collapseMemberExpression(node.value);\n                meta.themeMetaMap[key] = value;\n              });\n            }\n            path.traverse(VISITOR);\n          }\n        }\n      };\n\n      const TYPE = {\n        \"qx.Class.define\": \"class\",\n        \"qx.Mixin.define\": \"mixin\",\n        \"qx.Theme.define\": \"theme\",\n        \"qx.Interface.define\": \"interface\",\n        \"qx.Bootstrap.define\": \"class\"\n      };\n\n      var VISITOR = {\n        NewExpression: {\n          enter(path) {\n            var str = collapseMemberExpression(path.node.callee);\n            t._requireClass(str, { usage: \"dynamic\", location: path.node.loc });\n          },\n          exit(path) {\n            if (t.__analyser.isAddCreatedAt()) {\n              var fn = types.memberExpression(\n                types.identifier(\"qx\"),\n                types.identifier(\"$$createdAt\")\n              );\n\n              var tmp = types.callExpression(fn, [\n                path.node,\n                types.stringLiteral(t.__className.replace(/\\./g, \"/\") + \".js\"),\n                types.numericLiteral(\n                  path.node.loc ? path.node.loc.start.line : 0\n                ),\n\n                types.numericLiteral(\n                  path.node.loc ? path.node.loc.start.column : 0\n                )\n              ]);\n\n              path.replaceWith(tmp);\n              path.skip();\n            }\n          }\n        },\n\n        ExpressionStatement: {\n          enter: path => {\n            checkNodeJsDocDirectives(path.node);\n          },\n          exit: path => {\n            checkNodeJsDocDirectives(path.node);\n          }\n        },\n\n        EmptyStatement: path => {\n          checkNodeJsDocDirectives(path.node);\n        },\n\n        JSXElement(path) {\n          t.__usesJsx = true;\n        },\n\n        Program: {\n          exit(path) {\n            let dbClassInfo = t._compileDbClassInfo();\n            let copyInfo = {};\n            let hasLoadDeps = false;\n            if (dbClassInfo.dependsOn) {\n              copyInfo.dependsOn = {};\n              Object.keys(dbClassInfo.dependsOn).forEach(key => {\n                let tmp = (copyInfo.dependsOn[key] = Object.assign(\n                  {},\n                  dbClassInfo.dependsOn[key]\n                ));\n\n                if (tmp.load) {\n                  delete tmp.load;\n                  tmp.require = true;\n                  hasLoadDeps = true;\n                }\n              });\n            }\n            if (dbClassInfo.environment) {\n              copyInfo.environment = dbClassInfo.environment;\n              let required = dbClassInfo.environment.required;\n              if (required) {\n                for (let key in required) {\n                  if (required[key].load) {\n                    hasLoadDeps = true;\n                    break;\n                  }\n                }\n              }\n            }\n            let tmp = types.variableDeclaration(\"var\", [\n              types.variableDeclarator(\n                types.identifier(\"$$dbClassInfo\"),\n                literalValueToExpression(copyInfo)\n              )\n            ]);\n\n            let inject = [tmp];\n            if (hasLoadDeps) {\n              tmp = babylon.parse(\n                \"qx.Bootstrap.executePendingDefers($$dbClassInfo);\"\n              ).program.body;\n              inject.push(tmp[0]);\n            }\n            path.node.body.forEach(node => inject.push(node));\n            tmp = babylon.parse(\n              t.__className + \".$$dbClassInfo = $$dbClassInfo;\"\n            ).program.body;\n            inject.push(tmp[0]);\n            let block = types.blockStatement(inject);\n            let rootFn = types.expressionStatement(\n              types.callExpression(\n                types.functionExpression(null, [], block),\n                []\n              )\n            );\n\n            path.node.body.splice(0, path.node.body.length, rootFn);\n          }\n        },\n\n        // Babel seems to be suppressing ClassDeclarations...\n        ClassBody: {\n          enter(path) {\n            es6ClassDeclarations++;\n          },\n          exit(path) {\n            es6ClassDeclarations--;\n          }\n        },\n\n        Literal(path) {\n          if (typeof path.node.value == \"string\") {\n            path.node.value = t.encodePrivate(path.node.value, false, path.loc);\n          }\n        },\n\n        Identifier(path) {\n          path.node.name = t.encodePrivate(path.node.name, true, path.loc);\n\n          // These are AST node types which do not cause undefined references for the identifier,\n          // eg ObjectProperty could be `{ abc: 1 }`, and `abc` is not undefined, it is an identifier\n          const CHECK_FOR_UNDEFINED = {\n            ObjectProperty: 1,\n            ObjectMethod: 1,\n            FunctionExpression: 1,\n            FunctionStatement: 1,\n            ArrowFunctionExpression: 1,\n            VariableDeclarator: 1,\n            FunctionDeclaration: 1,\n            CatchClause: 1,\n            AssignmentPattern: 1,\n            RestElement: 1,\n            ArrayPattern: 1,\n            SpreadElement: 1,\n            ClassDeclaration: 1,\n            ClassMethod: 1,\n            LabeledStatement: 1,\n            BreakStatement: 1\n          };\n\n          // These are AST node types we expect to find at the root of the identifier, and which will\n          //  not trigger a warning.  The idea is that all of the types in CHECK_FOR_UNDEFINED are types\n          //  that cause references to variables, everything else is in DO_NOT_WARN_TYPES.  But, if anything\n          //  has been missed and is not in either of these lists, throw a warning so that it can be checked\n          const DO_NOT_WARN_TYPES = {\n            AssignmentExpression: 1,\n            BooleanExpression: 1,\n            CallExpression: 1,\n            BinaryExpression: 1,\n            UnaryExpression: 1,\n            WhileStatement: 1,\n            IfStatement: 1,\n            NewExpression: 1,\n            ReturnStatement: 1,\n            ConditionalExpression: 1,\n            LogicalExpression: 1,\n            ForInStatement: 1,\n            ArrayExpression: 1,\n            SwitchStatement: 1,\n            SwitchCase: 1,\n            ThrowStatement: 1,\n            ExpressionStatement: 1,\n            UpdateExpression: 1,\n            SequenceExpression: 1,\n            ContinueStatement: 1,\n            ForStatement: 1,\n            TemplateLiteral: 1,\n            AwaitExpression: 1,\n            DoWhileStatement: 1,\n            ForOfStatement: 1,\n            TaggedTemplateExpression: 1,\n            ClassExpression: 1,\n            OptionalCallExpression: 1,\n            JSXExpressionContainer: 1\n          };\n\n          let root = path;\n          while (root) {\n            let parentType = root.parentPath.node.type;\n            if (\n              parentType == \"MemberExpression\" ||\n              parentType == \"OptionalMemberExpression\"\n            ) {\n              root = root.parentPath;\n              continue;\n            }\n            if (CHECK_FOR_UNDEFINED[parentType]) {\n              return;\n            }\n            if (!DO_NOT_WARN_TYPES[parentType]) {\n              t.addMarker(\"testForUnresolved\", path.node.loc, parentType);\n            }\n            break;\n          }\n\n          let name = collapseMemberExpression(root.node);\n          if (name.startsWith(\"(\")) {\n            return;\n          }\n          let members = name.split(\".\");\n          t.addReference(members, root.node.loc);\n        },\n\n        CallExpression: {\n          enter(path) {\n            function getStringArg(index) {\n              if (index >= path.node.arguments.length) {\n                return null;\n              }\n              let arg = path.node.arguments[index];\n              if (arg.type == \"StringLiteral\") {\n                return arg.value;\n              }\n              return null;\n            }\n\n            function addTranslation(entry) {\n              let lineNo = path.node.loc ? path.node.loc.start.line : 0;\n              let cur = t.__translations[entry.msgid];\n              if (cur) {\n                if (!qx.lang.Type.isArray(cur.lineNo)) {\n                  cur.lineNo = [cur.lineNo];\n                }\n                cur.lineNo.push(lineNo);\n              } else {\n                entry.lineNo = lineNo;\n                t.__translations.push(entry);\n              }\n            }\n\n            // Are we looking at the Identifier `require`, and is it a\n            // function call (identified by having\n            // `path.node.arguments`? If so, we'll add the discovered\n            // module to the list of modules that must be browserified\n            // if the application is destined for the browser.\n            let scope;\n            let applicationTypes = t.__analyser.getApplicationTypes();\n\n            if (path.node.callee.type == \"Identifier\" &&\n                path.node?.callee?.name == \"require\" &&\n                path.node.arguments?.length == 1 &&\n                applicationTypes.includes(\"browser\")) {\n\n              // See if this is a reference to global `require` or\n              // something in the scope chain\n              for (scope = t.__scope; scope; scope = scope.parent) {\n                if (scope.vars[\"require\"]) {\n                  // It's in the scope chain. Ignore it.\n                  break;\n                }\n              }\n              // Did we reach top level without finding it in a local scope?\n              if (! scope) {\n                // Yup. It's the global one we're looking for. Ensure the argument is valid.\n                let arg = path.node.arguments[0];\n                if (types.isLiteral(arg)) {\n                  if (typeof arg.value != \"string\") {\n                    log.error(\n                      `${t.__className}: ` +\n                        \"Only literal string arguments to require() are supported: \" +\n                        arg.value\n                    );\n                  } else {\n                    qx.tool.compiler.Console.log(\n                      `${t.__className}:${path.node.loc.start.line}:` +\n                        ` automatically detected \\'require(${arg.value})\\``);\n                    t.addCommonjsModule(arg.value, t.__className, path.node.loc.start.line);\n\n                    // Don't show \"unresolved\" error for `require` since the\n                    // browserified code defines it as a global\n                    t.addIgnore(\"require\");\n                  }\n                }\n              }\n            }\n\n            if (\n              types.isMemberExpression(path.node.callee) ||\n              (es6ClassDeclarations == 0 &&\n                (path.node.callee.object?.type == \"Super\" ||\n                  path.node.callee.type == \"Super\"))\n            ) {\n              let name = collapseMemberExpression(path.node.callee);\n              let thisAlias = null;\n\n              // Try and translate aliases for \"this\"; this is a really simplistic implementation\n              //  because static code path analysis is way out of scope for the compiler, so we're\n              //  only trying to handle code like:\n              //    ```\n              //    var that = this, args = arguments;\n              //    (function() { that.base(args); })();\n              //    ```\n              if (path.node.callee.object?.type == \"Identifier\") {\n                let originalAlias = path.node.callee.object.name;\n                let alias = originalAlias;\n                let aliasIsThis = false;\n                for (let scope = t.__scope; scope; scope = scope.parent) {\n                  while (!aliasIsThis) {\n                    let tmp = scope.vars[alias];\n                    if (tmp === \"this\") {\n                      aliasIsThis = true;\n                      break;\n                    }\n                    if (typeof tmp == \"string\") {\n                      alias = tmp;\n                    } else {\n                      break;\n                    }\n                  }\n                  if (aliasIsThis || scope.isClassMember) {\n                    break;\n                  }\n                }\n                if (aliasIsThis) {\n                  name = \"this\" + name.substring(originalAlias.length);\n                  thisAlias = originalAlias;\n                }\n              }\n\n              // Class definition?  EG `qx.Class.define(...`\n              if (TYPE[name]) {\n                t.__definingType = name.match(/\\.([a-zA-Z]+)\\./)[1];\n                let node = path.node;\n                let className = node.arguments[0].value;\n                let classDef = node.arguments[1];\n\n                // We can only parse objects (eg qx.data.marshal.Json.__toClass creates objects on the fly that we cannot scan)\n                if (classDef.type != \"ObjectExpression\") {\n                  return;\n                }\n\n                // Create new meta\n                t.__pushMeta(className);\n                if (needsQxCoreEnvironment) {\n                  t._requireClass(\"qx.core.Environment\", {\n                    location: needsQxCoreEnvironment,\n                    defer: true\n                  });\n                }\n\n                let meta = makeMeta(\"clazz\", null, path.parent);\n                t.__classMeta.type = TYPE[name];\n                if (\n                  t.__definingType == \"Class\" ||\n                  t.__definingType == \"Bootstrap\"\n                ) {\n                  let typeProp = classDef.properties.find(\n                    prop =>\n                      prop.key.type == \"Identifier\" && prop.key.value == \"type\"\n                  );\n\n                  if (typeProp) {\n                    (t.__classMeta.isStatic == typeProp.value.type) ==\n                      \"Literal\" && typeProp.value.value === \"static\";\n                  }\n                }\n                checkJsDocDirectives(meta.jsdoc, path.node.loc);\n\n                t._requireClass(name, {\n                  usage: \"dynamic\",\n                  location: path.node.loc\n                });\n\n                path.skip();\n                path.traverse(CLASS_DEF_VISITOR, { classDefPath: path });\n                t.__popMeta(className);\n              } else if (name == \"qx.core.Environment.add\") {\n                let arg = path.node.arguments[0];\n                if (types.isLiteral(arg)) {\n                  if (typeof arg.value != \"string\") {\n                    log.error(\n                      \"Invalid argument to qx.core.Environment.add: \" +\n                        arg.value\n                    );\n                  } else {\n                    t.__environmentChecks.provided[arg.value] = true;\n                    if (\n                      !arg.value.startsWith(t.__className) &&\n                      !Object.prototype.hasOwnProperty.call(\n                        qx.tool.compiler.ClassFile.ENVIRONMENT_CONSTANTS,\n                        arg.value\n                      )\n                    ) {\n                      let symbol = t.__library.getSymbolType(arg.value);\n                      if (!symbol || symbol.symbolType != \"environment\") {\n                        t.addMarker(\n                          \"environment.unreachable\",\n                          path.node.loc,\n                          arg.value\n                        );\n                      }\n                    }\n                  }\n                }\n                t._requireClass(\"qx.core.Environment\", {\n                  usage: \"dynamic\",\n                  location: path.node.loc\n                });\n              } else if (name == \"qx.core.Environment.get\") {\n                let arg = path.node.arguments[0];\n                if (types.isLiteral(arg)) {\n                  if (typeof arg.value != \"string\") {\n                    log.error(\n                      \"Invalid argument to qx.core.Environment.get: \" +\n                        arg.value\n                    );\n                  } else {\n                    t.addEnvCheck(arg.value, path.node.loc);\n                  }\n                }\n                t._requireClass(\"qx.core.Environment\", {\n                  usage: \"dynamic\",\n                  location: path.node.loc\n                });\n\n                path.skip();\n                path.traverse(VISITOR);\n              } else if (name == \"qx.core.Environment.select\") {\n                let arg = path.node.arguments[0];\n                if (types.isLiteral(arg)) {\n                  if (typeof arg.value != \"string\") {\n                    log.error(\n                      \"Invalid argument to qx.core.Environment.select: \" +\n                        arg.value\n                    );\n                  } else {\n                    t.addEnvCheck(arg.value, path.node.loc);\n                  }\n                }\n\n                t._requireClass(\"qx.core.Environment\", {\n                  usage: \"dynamic\",\n                  location: path.node.loc\n                });\n\n                path.skip();\n                path.traverse(VISITOR);\n              } else if (\n                name == \"this.base\" ||\n                (es6ClassDeclarations == 0 &&\n                  (name == \"super\" || name.startsWith(\"super.\")))\n              ) {\n                let expr;\n\n                // For mixins, there is never a valid time to call this.base() in the constructor; but it is\n                //  OK in methods - but we have to refer to superclass.methodName directly.  For ordinary\n                //  classes, we need to use constructor.methodName.base.\n                if (t.__definingType == \"Mixin\") {\n                  expr = types.callExpression(\n                    expandMemberExpression(\"qx.Mixin.baseClassMethod\"),\n                    [\n                      expandMemberExpression(\"this.constructor\"),\n                      types.identifier(t.__classMeta.className),\n                      types.stringLiteral(t.__classMeta.functionName)\n                    ]\n                  );\n                  expr = types.memberExpression(expr, types.identifier(\"call\"));\n                } else if (t.__classMeta.functionName == \"$$constructor\") {\n                  expr = expandMemberExpression(\n                    t.__classMeta.superClass + \".constructor.call\"\n                  );\n                } else if (t.__classMeta.className) {\n                  expr = expandMemberExpression(\n                    t.__classMeta.className +\n                    \".superclass\" +\n                    \".prototype.\" +\n                      t.__classMeta.functionName +\n                      \".call\"\n                  );\n                } else {\n                  expr = expandMemberExpression(\n                    t.__classMeta.superClass +\n                      \".prototype.\" +\n                      t.__classMeta.functionName +\n                      \".call\"\n                  );\n                }\n                let thisArgument = thisAlias\n                  ? types.identifier(thisAlias)\n                  : types.thisExpression();\n                if (name.startsWith(\"super\")) {\n                  path.node.arguments.unshift(thisArgument);\n                } else {\n                  path.node.arguments[0] = thisArgument;\n                }\n                let callExpr = types.callExpression(expr, path.node.arguments);\n                path.replaceWith(callExpr);\n              } else if (\n                name == \"this.base.apply\" ||\n                name == \"this.base.call\"\n              ) {\n                let methodName = name == \"this.base.apply\" ? \"apply\" : \"call\";\n\n                let expr;\n                if (t.__definingType == \"Mixin\") {\n                  expr = expandMemberExpression(\n                    \"this.constructor.superclass.prototype.\" +\n                      t.__classMeta.functionName +\n                      \".call\"\n                  );\n                } else if (t.__classMeta.functionName == \"$$constructor\") {\n                  expr = expandMemberExpression(\n                    t.__classMeta.superClass + \".constructor.\" + methodName\n                  );\n                } else {\n                  expr = expandMemberExpression(\n                    t.__className +\n                      \".prototype.\" +\n                      t.__classMeta.functionName +\n                      \".base.\" +\n                      methodName\n                  );\n                }\n\n                // Original call to this.base.apply would have included arguments in the first element of the array\n                //  here we remove that because it's not needed, specifically changing\n                //    `this.base.apply(this, args)` to\n                //    `this.base.apply(this, args.slice().shift())`\n                let exprSplice = types.callExpression(\n                  types.memberExpression(\n                    path.node.arguments[1],\n                    types.identifier(\"slice\")\n                  ),\n\n                  []\n                );\n\n                let exprUnshift = types.callExpression(\n                  types.memberExpression(exprSplice, types.identifier(\"shift\")),\n                  []\n                );\n\n                let callExpr = types.callExpression(expr, [\n                  path.node.arguments[0],\n                  exprUnshift\n                ]);\n\n                path.replaceWith(callExpr);\n              } else if (name == \"this.self\") {\n                let expr = expandMemberExpression(t.__classMeta.className);\n                path.replaceWith(expr);\n              } else if (\n                name == \"this.tr\" ||\n                name == \"this.marktr\" ||\n                name == \"qx.locale.Manager.tr\" ||\n                name == \"qx.locale.Manager.marktr\"\n              ) {\n                let arg0 = getStringArg(0);\n                if (!arg0) {\n                  t.addMarker(\n                    \"translate.invalidMessageId\",\n                    path.node.loc,\n                    arg0\n                  );\n                } else {\n                  addTranslation({ msgid: arg0 });\n                }\n              } else if (\n                name == \"this.trn\" ||\n                name == \"qx.locale.Manager.trn\"\n              ) {\n                let arg0 = getStringArg(0);\n                let arg1 = getStringArg(1);\n                if (!arg0 || !arg1) {\n                  t.addMarker(\n                    \"translate.invalidMessageIds\",\n                    path.node.loc,\n                    arg0,\n                    arg1\n                  );\n                } else {\n                  addTranslation({ msgid: arg0, msgid_plural: arg1 });\n                }\n              } else if (\n                name == \"this.trc\" ||\n                name == \"qx.locale.Manager.trc\"\n              ) {\n                let arg0 = getStringArg(0);\n                let arg1 = getStringArg(1);\n                if (!arg0 || !arg1) {\n                  t.addMarker(\n                    \"translate.invalidMessageIds\",\n                    path.node.loc,\n                    arg0,\n                    arg1\n                  );\n                } else {\n                  addTranslation({ msgid: arg1, comment: arg0 });\n                }\n              } else if (\n                name == \"this.trnc\" ||\n                name == \"qx.locale.Manager.trnc\"\n              ) {\n                let arg0 = getStringArg(0);\n                let arg1 = getStringArg(1);\n                let arg2 = getStringArg(2);\n                if (!arg0 || !arg1 || !arg2) {\n                  t.addMarker(\n                    \"translate.invalidMessageIds3\",\n                    path.node.loc,\n                    arg0,\n                    arg1,\n                    arg2\n                  );\n                } else {\n                  addTranslation({\n                    msgid: arg1,\n                    msgid_plural: arg2,\n                    comment: arg0\n                  });\n                }\n              } else {\n                let pos = name.lastIndexOf(\".\");\n                // name can be \".concat\" when used with \"[].concat\"\n                if (pos > 0) {\n                  let str = name.substring(0, pos);\n                  if (!t.hasDeclaration(str)) {\n                    t._requireClass(str, {\n                      usage: \"dynamic\",\n                      location: path.node.loc\n                    });\n                  }\n                }\n              }\n            }\n          }\n        },\n\n        MemberExpression: {\n          exit(path) {\n            // regular expression or string property (eg \"aa\".charCodeAt())\n            if (path.node.object.type == \"Literal\") {\n              return;\n            }\n\n            // Handle `[ 123 ].blah()` by visiting\n            if (path.node.object.type == \"ArrayExpression\") {\n              return;\n            }\n\n            // Handle `[ 123 ].blah()` by visiting\n            if (\n              path.node.object.type == \"MemberExpression\" &&\n              path.node.object.object.type == \"ArrayExpression\"\n            ) {\n              return;\n            }\n\n            let name = collapseMemberExpression(path.node);\n            if (name.startsWith(\"(\")) {\n              return;\n            }\n            let members = name.split(\".\");\n\n            // Ignore 'this' references\n            if (members[0] === \"this\") {\n              return;\n            }\n\n            // Global variable or a local variable?\n            if (t.__globalSymbols[members[0]] || t.hasDeclaration(members[0])) {\n              return;\n            }\n\n            let info = t._requireClass(name, { location: path.node.loc });\n            if (!info || !info.className) {\n              // The code `abc.def.ghi()` will produce a member expression for both `abc.def` (two Identifier's)\n              //  and another for `abc.def` and `.ghi` (MemberExpression + Identifier).  Our logic for detecting\n              //  references and unresolved symbols expects the full `abc.def.ghi` so by excluding MemberExpression's\n              //  where the container is also a MemberExpression means that we skip the incomplete `abc.def`\n              if (path.container.type == \"MemberExpression\") {\n                return;\n              }\n              t.addReference(members, path.node.loc);\n            }\n          }\n        },\n\n        ObjectProperty: {\n          exit(path) {\n            if (this.__privateMangling == \"readable\") {\n              if (\n                path.node.value.type == \"FunctionExpression\" &&\n                path.node.value.id === null\n              ) {\n                let functionName =\n                  typeof path.node.key.value == \"string\"\n                    ? path.node.key.value\n                    : path.node.key.name;\n                if (!qx.tool.compiler.ClassFile.RESERVED_WORDS[functionName]) {\n                  path.node.value.id = types.identifier(functionName);\n                }\n              }\n            }\n          }\n        },\n\n        Property(path) {\n          if (\n            t.__classMeta &&\n            t.__classMeta._topLevel &&\n            t.__classMeta._topLevel.path == path.parentPath.parentPath\n          ) {\n            t.__classMeta.functionName = getKeyName(path.node.key);\n            makeMeta(\n              t.__classMeta._topLevel.keyName,\n              t.__classMeta.functionName,\n              path.node\n            );\n\n            path.skip();\n            let functionId = null;\n            if (this.__privateMangling == \"readable\") {\n              if (\n                path.node.value.type == \"FunctionExpression\" &&\n                path.node.value.id === null\n              ) {\n                let functionName =\n                  typeof path.node.key.value == \"string\"\n                    ? path.node.key.value\n                    : path.node.key.name;\n                if (!qx.tool.compiler.ClassFile.RESERVED_WORDS[functionName]) {\n                  functionId = types.identifier(functionName);\n                }\n              }\n            }\n            path.traverse(VISITOR);\n            if (functionId) {\n              path.node.value.id = functionId;\n            }\n            t.__classMeta.functionName = null;\n          }\n        },\n\n        ObjectMethod(path) {\n          // Methods within a top level object (ie \"members\" or \"statics\"), record the method name and meta data\n          if (\n            t.__classMeta &&\n            t.__classMeta._topLevel &&\n            t.__classMeta._topLevel.path == path.parentPath.parentPath\n          ) {\n            t.__classMeta.functionName = getKeyName(path.node.key);\n            makeMeta(\n              t.__classMeta._topLevel.keyName,\n              t.__classMeta.functionName,\n              path.node\n            );\n\n            path.skip();\n            enterFunction(path);\n            path.traverse(VISITOR);\n            exitFunction(path);\n            t.__classMeta.functionName = null;\n\n            // Otherwise traverse method as normal\n          } else {\n            path.skip();\n            enterFunction(path);\n            path.traverse(VISITOR);\n            exitFunction(path);\n          }\n        },\n\n        FunctionDeclaration: FUNCTION_DECL_OR_EXPR,\n        FunctionExpression: FUNCTION_DECL_OR_EXPR,\n        ArrowFunctionExpression: FUNCTION_DECL_OR_EXPR,\n\n        VariableDeclaration: {\n          exit(path) {\n            checkNodeJsDocDirectives(path.node);\n            path.node.declarations.forEach(decl => {\n              // Simple `var x` form\n              if (decl.id.type == \"Identifier\") {\n                let value = null;\n                //decl.id.name = t.encodePrivate(decl.id.name, true, decl.loc);\n                if (decl.init) {\n                  if (decl.init.type == \"Identifier\") {\n                    value = decl.init.name;\n                  } else if (decl.init.type == \"ThisExpression\") {\n                    value = \"this\";\n                  }\n                }\n                t.addDeclaration(decl.id.name, value);\n\n                // Object destructuring `var {a,b} = {...}`\n              } else if (decl.id.type == \"ObjectPattern\") {\n                decl.id.properties.forEach(prop => {\n                  if (prop.value.type == \"AssignmentPattern\") {\n                    t.addDeclaration(prop.value.left.name);\n                  } else {\n                    t.addDeclaration(prop.value.name);\n                  }\n                });\n\n                // Array destructuring `var [a,b] = [...]`\n              } else if (decl.id.type == \"ArrayPattern\") {\n                decl.id.elements.forEach(prop => {\n                  if (prop) {\n                    if (prop.type == \"AssignmentPattern\") {\n                      t.addDeclaration(prop.left.name);\n                    } else if (prop.type == \"RestElement\") {\n                      t.addDeclaration(prop.argument.name);\n                    } else {\n                      t.addDeclaration(prop.name);\n                    }\n                  }\n                });\n              }\n            });\n          }\n        },\n\n        ClassDeclaration(path) {\n          t.addDeclaration(path.node.id.name);\n        },\n\n        // Note that AST Explorer calls this MethodDefinition, not ClassMethod\n        ClassMethod: {\n          enter(path) {\n            enterFunction(path, path.node.value, path.node.key);\n          },\n          exit(path) {\n            exitFunction(path, path.node.value, path.node.key);\n          }\n        },\n\n        CatchClause: {\n          enter(path) {\n            t.pushScope(null, path.node);\n            t.addDeclaration(path.node.param.name);\n          },\n          exit(path) {\n            t.popScope(path.node);\n          }\n        }\n      };\n\n      return {\n        CodeElimination: { visitor: CODE_ELIMINATION_VISITOR },\n        Compiler: { visitor: VISITOR }\n      };\n    },\n\n    /**\n     * Pushes new meta data onto the stack - each meta represents a class being defined,\n     * we operate a stack so that we can handle inner classes\n     *\n     * @param className {String} name of the class being defined\n     */\n    __pushMeta(className) {\n      var pos = (className || \"\").lastIndexOf(\".\");\n      var meta = {\n        className: className,\n        packageName: pos > -1 ? className.substring(0, pos) : null,\n        name: pos > -1 ? className.substring(pos + 1) : className,\n        superClass: null,\n        interfaces: [],\n        mixins: [],\n        functionName: null\n      };\n\n      this.__metaStack.push(meta);\n      this.__classMeta = meta;\n      this.__metaDefinitions[className] = meta;\n      this.__numClassesDefined++;\n    },\n\n    /**\n     * Pops the current meta off the stack, optionally checking that the classname is correct\n     */\n    __popMeta(className) {\n      if (!this.__metaStack.length) {\n        throw new Error(\"No __metaStack entries to pop\");\n      }\n      let meta = this.__metaStack[this.__metaStack.length - 1];\n      if (className && meta.className != className) {\n        throw new Error(\n          \"Wrong __metaStack entries to pop, expected \" +\n            className +\n            \" found \" +\n            meta.className\n        );\n      }\n      this.__metaStack.pop();\n      meta = this.__metaStack[this.__metaStack.length - 1] || null;\n      this.__classMeta = meta;\n    },\n\n    /**\n     * Pushes a new scope on the stack\n     */\n    pushScope(functionName, node, isClassMember) {\n      this.__scope = {\n        functionName: functionName,\n        parent: this.__scope,\n        loc: node.loc,\n        vars: {},\n        unresolved: {},\n        isClassMember: Boolean(isClassMember)\n      };\n    },\n\n    /**\n     * Pops a scope from the stack\n     */\n    popScope(node) {\n      var old = this.__scope;\n      var scope = (this.__scope = this.__scope.parent);\n      var unresolved = scope.unresolved;\n\n      for (var name in old.unresolved) {\n        if (scope.vars[name]) {\n          continue;\n        }\n        var entry = unresolved[name];\n        if (!entry) {\n          entry = unresolved[name] = {\n            name: name,\n            locations: []\n          };\n        }\n        entry.locations.push.apply(\n          entry.locations,\n          old.unresolved[name].locations\n        );\n      }\n    },\n\n    /**\n     * Tests whether the current scope is load-time scope\n     *\n     * @returns {Boolean}\n     */\n    isLoadScope() {\n      return !this.__scope.parent;\n    },\n\n    /**\n     * Tests whether this class has a defer method\n     *\n     * @returns {Boolean}\n     */\n    hasDefer() {\n      return this.__hasDefer;\n    },\n\n    /**\n     * Adds a variable declaration to the current scope; if the symbol was\n     * previously \"unresolved\" it is removed from the unresolved list\n     *\n     * @param name {String} the name of the variabvle being declared\n     * @param valueName {String} the value to assign to the variable\n     */\n    addDeclaration(name, valueName) {\n      if (this.__scope.vars[name] === undefined) {\n        this.__scope.vars[name] = valueName || true;\n        var unresolved = this.__scope.unresolved;\n        delete unresolved[name];\n        var re = new RegExp(name + \"\\\\.\");\n        for (var tmp in unresolved) {\n          if (re.test(tmp)) {\n            delete unresolved[tmp];\n          }\n        }\n      }\n    },\n\n    /**\n     * Tests whether there is a variable declaration accessible to the current\n     * scope, ie including parent scope\n     *\n     * @param name\n     * @returns {Boolean}\n     */\n    hasDeclaration(name) {\n      var pos = name.indexOf(\".\");\n      if (pos > -1) {\n        name = name.substring(0, pos);\n      }\n      for (var tmp = this.__scope; tmp; tmp = tmp.parent) {\n        if (tmp.vars[name] !== undefined) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Adds a reference to a symbol; unknown symbols are marked as unresolved\n     * @param name\n     * @param loc\n     */\n    addReference(name, loc) {\n      if (!qx.lang.Type.isArray(name)) {\n        name = name.split(\".\");\n      }\n      var scope = this.__scope;\n      if (scope.vars[name[0]] !== undefined) {\n        return;\n      }\n\n      // Global variable or a local variable?\n      if (\n        name[0] === \"this\" ||\n        name[0] === \"[]\" ||\n        this.__globalSymbols[name[0]] ||\n        this.hasDeclaration(name[0])\n      ) {\n        return;\n      }\n\n      let str = \"\";\n      for (var i = 0; i < name.length; i++) {\n        if (i) {\n          str += \".\";\n        }\n        str += name[i];\n        if (this.__globalSymbols[str] || this.isIgnored(str)) {\n          return;\n        }\n      }\n      name = str;\n      if (\n        name == this.__className ||\n        name.startsWith(this.__className + \".\") ||\n        name.startsWith(\"(\")\n      ) {\n        return;\n      }\n\n      if (!scope.unresolved[name]) {\n        scope.unresolved[name] = {\n          name: name,\n          locations: loc ? [loc] : [],\n          load: this.isLoadScope(),\n          defer: this.__inDefer\n        };\n      } else if (loc) {\n        scope.unresolved[name].locations.push(loc);\n      }\n    },\n\n    /**\n     * Repeatably encodes a private symbol name, caching the result; ignores non-private symbols\n     *\n     * @param name {String} symbol name\n     * @param isIdentifier {boolean} whether this is usage as an identifier (and not in a string literal)\n     * @param location {Location} the location of the symbol\n     * @return {String} the encoded name if private, the original name if not private\n     */\n    encodePrivate(name, isIdentifier, location) {\n      const DO_NOT_ENCODE = {\n        __proto__: 1,\n        __iterator__: 1,\n        __dirname: 1,\n        __filename: 1\n      };\n\n      if (\n        DO_NOT_ENCODE[name] ||\n        this.__privateMangling == \"off\" ||\n        !name.startsWith(\"__\") ||\n        !name.match(/^[0-9a-z_$]+$/i)\n      ) {\n        return name;\n      }\n\n      if (name.indexOf(\"__P_\") > -1) {\n        return name;\n      }\n\n      let coded = this.__privates[name];\n      if (!coded) {\n        // Strings have to be handled differently - we need to mangle them, but only if we\n        //  know for sure that they are private members; to do this, we need to see a symbol\n        //  (identifier) first, to know that the string needs to be mangled\n        if (!isIdentifier) {\n          this.__blockedPrivates[name] = true;\n          return name;\n        }\n        if (this.__blockedPrivates[name]) {\n          this.addMarker(\"class.blockedMangle\", location, name);\n          return name;\n        }\n        let db = this.__analyser.getDatabase();\n        if (!db.manglePrefixes) {\n          db.manglePrefixes = {\n            nextPrefix: 1,\n            classPrefixes: {}\n          };\n        }\n        let prefixes = db.manglePrefixes;\n        let prefix = prefixes.classPrefixes[this.__className];\n        if (!prefix) {\n          prefix = \"__P_\" + ++prefixes.nextPrefix + \"_\";\n          prefixes.classPrefixes[this.__className] = prefix;\n        }\n\n        if (this.__privateMangling == \"readable\") {\n          coded = this.__privates[name] =\n            name + prefix + Object.keys(this.__privates).length;\n        } else {\n          coded = this.__privates[name] =\n            prefix + Object.keys(this.__privates).length;\n        }\n      }\n      return coded;\n    },\n\n    /**\n     * Removes a reference from scope; this should only really be used after scanning is complete\n     * @param name\n     */\n    deleteReference(name) {\n      delete this.__scope.unresolved[name];\n      var stub = name + \".\";\n      for (var id in this.__scope.unresolved) {\n        if (id.startsWith(stub)) {\n          delete this.__scope.unresolved[id];\n        }\n      }\n    },\n\n    /**\n     * Adds an external resource which needs to be loaded early\n     *\n     * @param name {String} name of the symbol\n     */\n    addExternal(name) {\n      if (this.__externals.indexOf(name) < 0) {\n        this.__externals.push(name);\n      }\n    },\n\n    /**\n     * Adds a CommonJS module to be browserified\n     *\n     * @param name {String} name of the module\n     */\n    addCommonjsModule(moduleName, className, linenum) {\n      if (! this.__commonjsModules[moduleName]) {\n        this.__commonjsModules[moduleName] = new Set();\n      }\n\n      this.__commonjsModules[moduleName].add(`${className}:${linenum}`);\n    },\n\n    /**\n     * Adds an ignored symbol\n     * @param name {String} name of the symbol\n     */\n    addIgnore(name) {\n      var scope = this.__scope;\n      if (!scope.ignore) {\n        scope.ignore = {};\n      }\n      var segs = name.split(\",\");\n      segs.forEach(name => {\n        name = name.trim();\n        if (name.length) {\n          if (name.endsWith(\".*\")) {\n            scope.ignore[name] = name.substring(0, name.length - 2);\n          } else if (name.endsWith(\"*\")) {\n            scope.ignore[name] = name.substring(0, name.length - 1);\n          } else {\n            scope.ignore[name] = true;\n          }\n        }\n      });\n    },\n\n    /**\n     * Tests whether a symbol has already been marked as ignore\n     * @param name {String} symbol name\n     * @return {Boolean} true if ignored\n     */\n    isIgnored(name) {\n      for (var tmp = this.__scope; tmp; tmp = tmp.parent) {\n        if (tmp.ignore) {\n          if (tmp.ignore[name]) {\n            return true;\n          }\n          for (var key in tmp.ignore) {\n            if (tmp.ignore[key] !== true) {\n              if (name.startsWith(tmp.ignore[key])) {\n                return true;\n              }\n            }\n          }\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Removes an ignored symbol\n     * @param name {String} name of the symbol\n     */\n    removeIgnore(name) {\n      var scope = this.__scope;\n      if (!scope) {\n        return;\n      }\n      var segs = name.split(\",\");\n      segs.forEach(name => delete scope.ignore[name]);\n    },\n\n    /**\n     * Adds an environment check made by the class\n     *\n     * @param name\n     * @param location {Object?} see _requireClass\n     */\n    addEnvCheck(name, location) {\n      var t = this;\n      var requiredOpts = {\n        load: t.isLoadScope(),\n        defer: t.__inDefer,\n        construct:\n          t.__classMeta && t.__classMeta.functionName == \"$$constructor\",\n        location: location\n      };\n\n      var dest = t.__environmentChecks.required[name];\n      if (!dest) {\n        dest = t.__environmentChecks.required[name] = {};\n      }\n      if (requiredOpts.load) {\n        dest.load = true;\n      }\n      if (requiredOpts.defer) {\n        dest.defer = true;\n      }\n      if (requiredOpts.construct) {\n        dest.construct = true;\n      }\n      t._requireClass(\"qx.core.Environment\", { location: location });\n      let info = t.__analyser.getSymbolType(name);\n      if (\n        !Object.prototype.hasOwnProperty.call(\n          qx.tool.compiler.ClassFile.ENVIRONMENT_CONSTANTS,\n          name\n        )\n      ) {\n        // Generally speaking, we try to have as few load dependencies as possible, and this\n        // means that in a class' `.defer()` we will still allow for runtime loading.  However,\n        // we pull environment checks up as this is a common use case; the problem this is trying\n        // to solve is instances where the feature detection class is loaded after the class which\n        // implements the polyfill, and the polyfill's defer method is then installing a polyfill\n        // when it does not need to (and should not do so).  For example, `qx.bom.client.EcmaScript`\n        // *must* load and have its defer called before the `qx.lang.normalize.Object` class has\n        // it's defer called.\n        let load = dest.load;\n        if (info && info.symbolType == \"environment\") {\n          load = true;\n        }\n        t._requireClass(name, { load: load, location: location });\n        if (info && info.symbolType == \"environment\") {\n          dest.className = info.className;\n        }\n      }\n    },\n\n    /**\n     * Adds a marker (eg warning or error)\n     *\n     * @param msgId {String} the marker message ID (@see qx.tool.compiler.Marker)\n     * @param pos {Object||null} position map; may contain a Map containing\n     *  {line,column?}, or a Map {start:{line,column}, end: {line,column}}.\n     */\n    addMarker(msgId, pos) {\n      msgId = \"qx.tool.compiler.\" + msgId;\n\n      let key = msgId;\n      let fragment = msgId.indexOf(\"#\");\n      if (fragment > -1) {\n        msgId = msgId.substring(0, fragment);\n      } else {\n        // Give each marker a unique key based on msgId and the line; use this to suppress\n        //  multiple markers\n        key += \"#\";\n        if (pos) {\n          if (pos.line) {\n            key += pos.line;\n          } else if (pos.start && pos.start.line) {\n            key += pos.start.line;\n          }\n        }\n      }\n\n      if (this.__haveMarkersFor[key]) {\n        return;\n      }\n      this.__haveMarkersFor[key] = true;\n\n      let marker = {\n        msgId: msgId\n      };\n\n      // Extract position\n      if (pos) {\n        if (pos.line) {\n          pos = { start: pos };\n        }\n        if (pos.start) {\n          let tmp = { line: pos.start.line };\n          if (pos.start.column) {\n            tmp.column = pos.start.column;\n          }\n          marker.pos = { start: tmp };\n          if (pos.end && pos.end.line) {\n            let tmp = { line: pos.end.line };\n            if (pos.end.column) {\n              tmp.column = pos.end.column;\n            }\n            marker.pos.end = tmp;\n          }\n        }\n      }\n      let args = qx.lang.Array.fromArguments(arguments, 2);\n      if (args.length) {\n        marker.args = args;\n      }\n      this.__markers.push(marker);\n    },\n\n    /**\n     * Adds a required class\n     *\n     * @param name {String} the name of the class\n     * @param opts {Map?} which is:\n     *  where {\"ignore\"|\"require\"|\"use\"|null} where it's mentioned\n     *  load {Boolean?} whether it is a load-time dependency or not\n     *  defer {Boolean?} whether the dependency is in defer or not\n     *  location {Map?} location of the token that caused the reference\n     * @return {Map?} info about the symbol type of the named class, @see {Analyser.getSymbolType}\n     */\n    _requireClass(name, opts) {\n      if (qx.lang.Type.isArray(name)) {\n        name.forEach(name => this._requireClass(name));\n        return null;\n      }\n      let t = this;\n      if (name == this.__className) {\n        return null;\n      }\n      if (!name) {\n        throw new Error(\"No classname\");\n      }\n      if (this.isIgnored(name)) {\n        return null;\n      }\n\n      let requireOpts = {\n        load: t.isLoadScope(),\n        defer: t.__inDefer,\n        construct:\n          t.__classMeta && t.__classMeta.functionName == \"$$constructor\"\n      };\n\n      if (opts) {\n        for (let key in opts) {\n          requireOpts[key] = opts[key];\n        }\n      }\n\n      let info = t.__analyser.getSymbolType(name);\n      let symbolType = info ? info.symbolType : null;\n      let className = info ? info.className : null;\n      if (symbolType != \"package\" && className && className != t.__className) {\n        // Re-check the class name as ignored if this is a member\n        if (symbolType == \"member\" && t.isIgnored(className)) {\n          return null;\n        }\n        let data = t.__requiredClasses[className];\n        if (!data) {\n          data = t.__requiredClasses[className] = {};\n        }\n\n        if (requireOpts.where !== undefined) {\n          if (requireOpts.where == \"ignore\") {\n            data.ignore = true;\n          } else if (requireOpts.where == \"require\") {\n            data.require = true;\n          }\n        }\n        if (requireOpts.load) {\n          data.load = true;\n          if (requireOpts.usage === \"dynamic\") {\n            if (data.usage !== \"static\") {\n              data.usage = \"dynamic\";\n            }\n            data.load = true;\n          } else if (!data.load) {\n            data.load = true;\n            data.usage = \"static\";\n          }\n        }\n        if (requireOpts.defer) {\n          if (requireOpts.load) {\n            data.defer = \"load\";\n          } else if (data.defer !== \"load\") {\n            data.defer = \"runtime\";\n          }\n\n          if (!name.startsWith(t.__className)) {\n            if (\n              !qx.tool.compiler.ClassFile.DEFER_SAFE_SYMBOLS.some(function (\n                symbol\n              ) {\n                return name.startsWith(symbol);\n              })\n            ) {\n              // Temporarily disabled until Qooxdoo framework catches up\n              // t.addMarker(\"defer.unsafe\", (opts && opts.location)||null, name);\n            }\n          }\n        }\n        if (requireOpts.construct) {\n          data.construct = true;\n        }\n        t.deleteReference(className);\n      }\n      return info;\n    },\n\n    /**\n     * Adds a required asset\n     * @param path\n     */\n    _requireAsset(path) {\n      if (path.indexOf(\"/\") < 0 && path.indexOf(\".\") > -1) {\n        path = path.replace(/\\./g, \"/\");\n      }\n      if (!qx.lang.Array.contains(this.__requiredAssets, path)) {\n        this.__requiredAssets.push(path);\n      }\n    },\n\n    /**\n     * Returns the assets required by the class\n     * @returns\n     */\n    getAssets() {\n      return this.__requiredAssets;\n    },\n\n    /**\n     * Finds an object property in a node tree (not a Qooxdoo property, an\n     * object property)\n     *\n     * @param props\n     * @param name\n     * @returns\n     */\n    __findProperty(props, name) {\n      for (let i = 0; i < props.length; i++) {\n        let prop = props[i];\n        if (prop.type == \"Property\") {\n          if (prop.key.type == \"Identifier\" && prop.key.name == name) {\n            return prop;\n          }\n          if (prop.key.type == \"StringLiteral\" && prop.key.value == name) {\n            return prop;\n          }\n        }\n      }\n      return null;\n    },\n\n    /**\n     * Returns the list of required classes (dependencies)\n     *\n     * @returns\n     */\n    getRequiredClasses() {\n      return this.__requiredClasses;\n    },\n\n    /**\n     * Returns a list of unresolved symbols\n     *\n     * @returns\n     */\n    getUnresolvedSymbols() {\n      return this.__scope.unresolved;\n    },\n\n    /**\n     * Returns the name of the class being compiled\n     * @returns {null}\n     */\n    getClassName() {\n      return this.__className;\n    }\n  },\n\n  defer(statics) {\n    statics.RESERVED_WORDS = {};\n    let str =\n      \"abstract  arguments await  boolean break byte  case  catch char  class  const continue debugger  default delete  do \" +\n      \"double  else  enum eval export extends  false final finally float for function goto  if  implements  import \" +\n      \"in  instanceof  int interface let  long  native  new null  package private protected public  return  short static \" +\n      \"super  switch  synchronized  this throw throws  transient true try typeof  var void volatile  while with  yield\";\n    str.split(/\\s+/).forEach(word => (statics.RESERVED_WORDS[word] = true));\n  },\n\n  statics: {\n    /**\n     * Returns the absolute path to the class file\n     *\n     * @param library  {qx.tool.compiler.app.Library}\n     * @param className {String}\n     * @returns {String}\n     */\n    getSourcePath(library, className) {\n      return pathModule.join(\n        library.getRootDir(),\n        library.getSourcePath(),\n        className.replace(/\\./g, pathModule.sep) +\n          library.getSourceFileExtension(className)\n      );\n    },\n\n    /**\n     * Returns the path to the rewritten class file\n     *\n     * @param analyser {qx.tool.compiler.Analyser}\n     * @param className {String}\n     * @returns {String}\n     */\n    getOutputPath(analyser, className) {\n      var filename = pathModule.join(\n        analyser.getOutputDir(),\n        \"transpiled\",\n        className.replace(/\\./g, pathModule.sep) + \".js\"\n      );\n\n      return filename;\n    },\n\n    /**\n     * Returns the root namespace from the classname, or null if it cannot be determined\n     * @param className\n     * @returns {*|null}\n     */\n    getNamespace(className) {\n      var m = className.match(/^([^.]+)\\./);\n      return (m && m[1]) || null;\n    },\n\n    /**\n     * These options are passed to Babel for JSX compilation; they can be changed by the CLI etc\n     * as needed.\n     *\n     * Note that at the moment they use a class that does not exist!  `qx.html.Jsx` is coming soon\n     * to a PR near you, but in the mean time you could use the compile.json `jsx` setting to\n     * change these to something else, eg `{ pragma: \"jsx.dom\", pragmaFrag: \"jsx.Fragment }` and\n     * use https://github.com/alecsgone/jsx-render in your application's code.\n     */\n    JSX_OPTIONS: {\n      pragma: \"qx.html.Jsx.createElement\",\n      pragmaFrag: \"qx.html.Jsx.FRAGMENT\"\n    },\n\n    /**\n     * Classes which are safe to access from defer methods (in addition to the class being defined)\n     */\n    DEFER_SAFE_SYMBOLS: [\n      \"qx.core.Environment\",\n      \"qx.Bootstrap\",\n      \"qx.core.Aspect\"\n    ],\n\n    /**\n     * List of global symbols to be ignored\n     */\n    QX_GLOBALS: [\n      \"qx.$$domReady\",\n      \"qx.$$environment\",\n      \"qx.$$libraries\",\n      \"qx.$$loader\",\n      \"qx.$$locales\",\n      \"qx.$$namespaceRoot\",\n      \"qx.$$resources\",\n      \"qx.$$packageData\",\n      \"qx.$$start\",\n      \"qx.$$translations\"\n    ],\n\n    COMMON_GLOBALS: [\n      \"Array\",\n      \"ArrayBuffer\",\n      \"Boolean\",\n      \"Date\",\n      \"DataView\",\n      \"EvalError\",\n      \"Error\",\n      \"Float32Array\",\n      \"Float64Array\",\n      \"Function\",\n      \"GeneratorFunction\",\n      \"Generator\",\n      \"Infinity\",\n      \"Int8Array\",\n      \"Int16Array\",\n      \"Int32Array\",\n      \"JSON\",\n      \"Map\",\n      \"Math\",\n      \"NaN\",\n      \"Number\",\n      \"Object\",\n      \"Proxy\",\n      \"Promise\",\n      \"RangeError\",\n      \"ReferenceError\",\n      \"Reflect\",\n      \"RegExp\",\n      \"Set\",\n      \"String\",\n      \"Symbol\",\n      \"SyntaxError\",\n      \"TypedArray\",\n      \"TypeError\",\n      \"Uint8Array\",\n      \"Uint8ClampedArray\",\n      \"Uint16Array\",\n      \"Uint32Array\",\n      \"URIError\",\n      \"WeakMap\",\n      \"WeakSet\",\n      \"arguments\",\n      \"atob\",\n      \"btoa\",\n      \"console\",\n      \"clearInterval\",\n      \"clearTimeout\",\n      \"decodeURI\",\n      \"decodeURIComponent\",\n      \"document\",\n      \"encodeURI\",\n      \"encodeURIComponent\",\n      \"escape\",\n      \"error\",\n      \"eval\",\n      \"isNaN\",\n      \"isFinite\",\n      \"navigator\",\n      \"parseInt\",\n      \"parseFloat\",\n      \"setInterval\",\n      \"setTimeout\",\n      \"undefined\",\n      \"unescape\",\n      \"window\"\n    ],\n\n    BROWSER_GLOBALS: [\n      \"ActiveXObject\",\n      \"Blob\",\n      \"CustomEvent\",\n      \"DOMParser\",\n      \"DOMException\",\n      \"Event\",\n      \"FileReader\",\n      \"FormData\",\n      \"Image\",\n      \"MutationObserver\",\n      \"XPathResult\",\n      \"XMLHttpRequest\",\n      \"XMLSerializer\",\n      \"XPathEvaluator\",\n      \"alert\",\n      \"document\",\n      \"history\",\n      \"location\",\n      \"navigator\",\n      \"performance\",\n      \"getComputedStyle\",\n      \"localStorage\"\n    ],\n\n    NODE_GLOBALS: [\n      \"Module\",\n      \"require\",\n      \"module\",\n      \"process\",\n      \"setImmediate\",\n      \"__dirname\",\n      \"__filename\"\n    ],\n\n    RHINO_GLOBALS: [\"Packages\", \"java\"],\n\n    RESERVED_WORDS: null,\n\n    /**\n     * These are the constants which are answered by Qooxdoo qx.core.Environment; we use out own copy here and\n     * not the one available in qx.core.Environment._defaults because we need to use the version which is appropriate\n     * for the version of Qooxdoo being compiled, not the one that this CLI is compiled with\n     */\n    ENVIRONMENT_CONSTANTS: {\n      // an always-true key (e.g. for use in qx.core.Environment.filter() calls)\n      true: true,\n      // old settings retTrue\n      \"qx.allowUrlSettings\": false,\n      \"qx.allowUrlVariants\": false,\n      \"qx.debug.property.level\": 0,\n      // old variants\n      // make sure to reflect all changes to qx.debug here in the bootstrap class!\n      \"qx.debug\": true,\n      \"qx.debug.ui.queue\": true,\n      \"qx.debug.touchpad.detection\": false,\n      \"qx.aspects\": false,\n      \"qx.dynlocale\": true,\n      \"qx.dyntheme\": true,\n      \"qx.blankpage\": \"qx/static/blank.html\",\n      \"qx.debug.databinding\": false,\n      \"qx.debug.dispose\": false,\n      // generator optimization vectors\n      \"qx.optimization.basecalls\": false,\n      \"qx.optimization.comments\": false,\n      \"qx.optimization.privates\": false,\n      \"qx.optimization.strings\": false,\n      \"qx.optimization.variables\": false,\n      \"qx.optimization.variants\": false,\n      // qooxdoo modules\n      \"module.databinding\": true,\n      \"module.logger\": true,\n      \"module.property\": true,\n      \"module.events\": true,\n      \"qx.nativeScrollBars\": false,\n      \"qx.automaticMemoryManagement\": true,\n      \"qx.promise\": true,\n      \"qx.promise.warnings\": true,\n      \"qx.promise.longStackTraces\": true\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}