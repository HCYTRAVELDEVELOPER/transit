{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "fs",
    "tool",
    "utils",
    "Promisify",
    "process",
    "require",
    "path",
    "rimraf",
    "dot",
    "metalsmith",
    "layouts",
    "markdown",
    "sass",
    "loadSass",
    "chokidar",
    "templateSettings",
    "strip",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "statics",
    "APP_NAMESPACE",
    "construct",
    "options",
    "apply",
    "arguments",
    "self",
    "Website",
    "p",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "dirname",
    "initSourceDir",
    "initTargetDir",
    "join",
    "initAppsNamespace",
    "key",
    "getOwnPropertyNames",
    "set",
    "properties",
    "appsNamespace",
    "check",
    "deferredInit",
    "sourceDir",
    "targetDir",
    "members",
    "__watcher",
    "__watcherReady",
    "__rebuildTimer",
    "__rebuilding",
    "__needsRebuild",
    "startWatcher",
    "stopWatcher",
    "files",
    "Utils",
    "correctCase",
    "getSourceDir",
    "_watcher",
    "watch",
    "on",
    "filename",
    "__onFileChange",
    "triggerRebuild",
    "err",
    "compiler",
    "Console",
    "print",
    "code",
    "stop",
    "isWatching",
    "Boolean",
    "waitForRebuildComplete",
    "__rebuildPromise",
    "rebuildAll",
    "generateSite",
    "compileScss",
    "type",
    "toLowerCase",
    "startsWith",
    "getTargetDir",
    "immediate",
    "rebuilderImpl",
    "rebuilder",
    "clearTimeout",
    "setTimeout",
    "getPages",
    "metadata",
    "pages",
    "order",
    "site",
    "forEach",
    "url",
    "index",
    "unorderedPages",
    "addPage",
    "title",
    "page",
    "undefined",
    "push",
    "file",
    "permalink",
    "navigation",
    "loadPartials",
    "partialsDir",
    "readdirAsync",
    "m",
    "match",
    "unused",
    "name",
    "ext",
    "data",
    "readFileAsync",
    "fn",
    "template",
    "log",
    "partials",
    "Promise",
    "resolve",
    "reject",
    "description",
    "email",
    "twitter_username",
    "github_username",
    "baseurl",
    "lang",
    "source",
    "destination",
    "clean",
    "use",
    "bind",
    "engine",
    "build",
    "result",
    "render",
    "outFile",
    "writeFileAsync",
    "css",
    "buildDevtools",
    "namespace",
    "getAppsNamespace",
    "chdir",
    "apps_path",
    "existsAsync",
    "sync",
    "opts",
    "noninteractive",
    "theme",
    "icontheme",
    "cli",
    "commands",
    "Create",
    "package",
    "Install",
    "install"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/tool/utils/Website.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011-2019 The authors\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (john.spackman@zenesis.com, @johnspackman)\n     * Christian Boulanger (info@bibliograph.org, @cboulanger)\n\n************************************************************************ */\n\nconst fs = qx.tool.utils.Promisify.fs;\nconst process = require(\"process\");\nconst path = require(\"upath\");\n\nconst rimraf = require(\"rimraf\");\nconst dot = require(\"dot\");\nrequire(\"jstransformer-dot\");\nconst metalsmith = require(\"metalsmith\");\nconst layouts = require(\"metalsmith-layouts\");\nconst markdown = require(\"metalsmith-markdown\");\n//const filenames = require(\"metalsmith-filenames\");\n//var permalinks = require(\"metalsmith-permalinks\");\n/**\n * @external(qx/tool/loadsass.js)\n * @ignore(loadSass)\n */\n/* global loadSass */\nconst sass = loadSass();\nconst chokidar = require(\"chokidar\");\n\n// config\ndot.templateSettings.strip = false;\n\nqx.Class.define(\"qx.tool.utils.Website\", {\n  extend: qx.core.Object,\n\n  statics: {\n    APP_NAMESPACE: \"apps\"\n  },\n\n  construct(options = {}) {\n    qx.core.Object.apply(this, arguments);\n    const self = qx.tool.utils.Website;\n    let p = qx.util.ResourceManager.getInstance().toUri(\n      \"qx/tool/website/.gitignore\"\n    );\n\n    p = path.dirname(p);\n    this.initSourceDir(p);\n    this.initTargetDir(path.join(p, \"build\"));\n    this.initAppsNamespace(self.APP_NAMESPACE);\n\n    for (let key of Object.getOwnPropertyNames(options)) {\n      this.set(key, options[key]);\n    }\n  },\n\n  properties: {\n    appsNamespace: {\n      check: \"String\",\n      deferredInit: true\n    },\n\n    sourceDir: {\n      check: \"String\",\n      deferredInit: true\n    },\n\n    targetDir: {\n      check: \"String\",\n      deferredInit: true\n    }\n  },\n\n  members: {\n    /** @type {chokidar} watcher */\n    __watcher: null,\n\n    /** @type {Boolean} whether the watcher is ready yet */\n    __watcherReady: false,\n\n    /** @type {Integer} setTimeout timer ID for debouncing builds */\n    __rebuildTimer: null,\n\n    /** @type {Boolean} Whether the build is currently taking place */\n    __rebuilding: false,\n\n    /** @type {Boolean} Whether a rebuild is needed ASAP */\n    __needsRebuild: false,\n\n    /**\n     * Starts the watcher for files in the source directory and compiles as needed\n     */\n    async startWatcher() {\n      await this.stopWatcher();\n      let sourceDir = await qx.tool.utils.files.Utils.correctCase(\n        this.getSourceDir()\n      );\n\n      this._watcher = chokidar.watch([sourceDir], {});\n      this._watcher.on(\"change\", filename =>\n        this.__onFileChange(\"change\", filename)\n      );\n\n      this._watcher.on(\"add\", filename => this.__onFileChange(\"add\", filename));\n      this._watcher.on(\"unlink\", filename =>\n        this.__onFileChange(\"unlink\", filename)\n      );\n\n      this._watcher.on(\"ready\", async () => {\n        await this.triggerRebuild(true);\n        this.__watcherReady = true;\n      });\n      this._watcher.on(\"error\", err => {\n        qx.tool.compiler.Console.print(\n          err.code == \"ENOSPC\"\n            ? \"qx.tool.cli.watch.enospcError\"\n            : \"qx.tool.cli.watch.watchError\",\n          err\n        );\n      });\n    },\n\n    /**\n     * Stops the watcher, if its running\n     */\n    async stopWatcher() {\n      if (this._watcher) {\n        await this._watcher.stop();\n        this._watcher = null;\n        this.__watcherReady = false;\n      }\n    },\n\n    /**\n     * Whether the watcher is running\n     *\n     * @return {Boolean} true if its running\n     */\n    isWatching() {\n      return Boolean(this._watcher);\n    },\n\n    /**\n     * Waits for the rebuild process to complete, if it is running\n     */\n    async waitForRebuildComplete() {\n      if (this.__rebuildPromise) {\n        await this.__rebuildPromise;\n      }\n    },\n\n    /**\n     * Rebuilds everything needed for the website\n     */\n    async rebuildAll() {\n      await this.generateSite();\n      await this.compileScss();\n    },\n\n    /**\n     * Event handler for changes to the source files\n     *\n     * @param type {String} type of change, one of \"change\", \"add\", \"unlink\"\n     * @param filename {String} the file that changed\n     */\n    __onFileChange(type, filename) {\n      if (this.__watcherReady) {\n        if (\n          !filename.toLowerCase().startsWith(this.getTargetDir().toLowerCase())\n        ) {\n          this.triggerRebuild(false);\n        }\n      }\n    },\n\n    /**\n     * Triggers a rebuild of the website, asynchronously.  Unless immediate is true,\n     * the rebuild will only happen after a short delay; but each time this is called,\n     * the delay is restarted.  This is to allow multiple files to be changed without\n     * swamping the processor with compilations.\n     *\n     * @param immediate {Boolean?} if true, rebuild starts ASAP\n     */\n    triggerRebuild(immediate) {\n      if (this.__rebuilding) {\n        this.__needsRebuild = true;\n        return;\n      }\n\n      let rebuilderImpl = async () => {\n        await this.rebuildAll();\n\n        if (this.__needsRebuild) {\n          this.__needsRebuild = false;\n          await rebuilderImpl();\n        }\n      };\n\n      let rebuilder = async () => {\n        this.__rebuilding = true;\n        try {\n          this.__rebuildPromise = rebuilderImpl();\n          await this.__rebuildPromise;\n          this.__rebuildPromise = null;\n        } finally {\n          this.__rebuilding = false;\n        }\n      };\n\n      if (this.__rebuildTimer) {\n        clearTimeout(this.__rebuildTimer);\n        this.__rebuildTimer = null;\n      }\n      this.__rebuildTimer = setTimeout(rebuilder, immediate ? 1 : 250);\n    },\n\n    /**\n     * Metalsmith Plugin that collates a list of pages that are to be included in the site navigation\n     * into the metadata, along with their URLs.\n     *\n     * If the metadata has a `sites.pages`, then it is expected to be an array of URLs which indicates\n     * the ordering to be applied; `sites.pages` is replaced with an array of objects, one per page,\n     * that contains `url` and `title` properties.\n     *\n     */\n    async getPages(files, metalsmith) {\n      var metadata = metalsmith.metadata();\n\n      var pages = [];\n      var order = {};\n      if (metadata.site.pages) {\n        metadata.site.pages.forEach((url, index) =>\n          typeof url == \"string\" ? (order[url] = index) : null\n        );\n      }\n      var unorderedPages = [];\n\n      function addPage(url, title) {\n        var page = {\n          url: url,\n          title: title\n        };\n\n        var index = order[url];\n        if (index !== undefined) {\n          pages[index] = page;\n        } else {\n          unorderedPages.push(page);\n        }\n      }\n\n      for (let filename of Object.getOwnPropertyNames(files)) {\n        let file = files[filename];\n        if (filename === \"index.html\") {\n          addPage(\"/\", file.title || \"Home Page\");\n        } else if (file.permalink || file.navigation) {\n          addPage(file.permalink || filename, file.title || \"Home Page\");\n        }\n      }\n\n      unorderedPages.forEach(page => pages.push(page));\n      metadata.site.pages = pages;\n    },\n\n    /**\n     * Metalsmith plugin that loads partials and adding them to the metadata.partials map.  Each file\n     * is added with its filename, and if it is a .html filename is also added without the .html\n     * extension.\n     *\n     */\n    async loadPartials(files, metalsmith) {\n      const metadata = metalsmith.metadata();\n      const partialsDir = path.join(this.getSourceDir(), \"partials\");\n      files = await fs.readdirAsync(partialsDir, \"utf8\");\n      for (let filename of files) {\n        let m = filename.match(/^(.+)\\.([^.]+)$/);\n        if (!m) {\n          continue;\n        }\n        let [unused, name, ext] = m;\n        if (unused) {\n          // this is simply to avoid linting errors until https://github.com/qooxdoo/qooxdoo/issues/461 is fixed\n        }\n        let data = await fs.readFileAsync(\n          path.join(partialsDir, filename),\n          \"utf8\"\n        );\n\n        let fn;\n        try {\n          fn = dot.template(data);\n        } catch (err) {\n          qx.tool.compiler.Console.log(\n            \"Failed to load partial \" + filename + \": \" + err\n          );\n\n          continue;\n        }\n        fn.name = filename;\n        metadata.partials[filename] = fn;\n        if (ext === \"html\") {\n          metadata.partials[name] = fn;\n        }\n      }\n    },\n\n    /**\n     * Generates the site with Metalsmith\n     * @returns {Promise}\n     */\n    async generateSite() {\n      await new Promise((resolve, reject) => {\n        metalsmith(this.getSourceDir())\n          .metadata({\n            site: {\n              title: \"Qooxdoo Application Server\",\n              description: 'Mini website used by \"qx serve\"',\n              email: \"info@qooxdoo.org\",\n              twitter_username: \"qooxdoo\",\n              github_username: \"qooxdoo\",\n              pages: [\"/\", \"/about/\"]\n            },\n\n            baseurl: \"\",\n            url: \"\",\n            lang: \"en\",\n            partials: {}\n          })\n          .source(path.join(this.getSourceDir(), \"src\"))\n          .destination(this.getTargetDir())\n          .clean(true)\n          .use(this.loadPartials.bind(this))\n          .use(markdown())\n          .use(this.getPages.bind(this))\n          .use(\n            layouts({\n              engine: \"dot\"\n            })\n          )\n          .build(function (err) {\n            if (err) {\n              reject(err);\n            } else {\n              resolve();\n            }\n          });\n      });\n    },\n\n    /**\n     * Compiles SCSS into CSS\n     *\n     * @returns {Promise}\n     */\n    async compileScss() {\n      let result = await new Promise((resolve, reject) => {\n        sass.render(\n          {\n            file: path.join(this.getSourceDir(), \"sass\", \"qooxdoo.scss\"),\n            outFile: path.join(this.getTargetDir(), \"qooxdoo.css\")\n          },\n\n          function (err, result) {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(result);\n            }\n          }\n        );\n      });\n      await fs.writeFileAsync(\n        path.join(this.getTargetDir(), \"qooxdoo.css\"),\n        result.css,\n        \"utf8\"\n      );\n    },\n\n    /**\n     * Build the development tool apps (APIViewer, Playground, Widgetbrowser, Demobrowser)\n     * @return {Promise<void>}\n     */\n    async buildDevtools() {\n      const namespace = this.getAppsNamespace();\n      process.chdir(this.getTargetDir());\n      let apps_path = path.join(this.getTargetDir(), namespace);\n      if (await fs.existsAsync(apps_path)) {\n        rimraf.sync(apps_path);\n      }\n      const opts = {\n        noninteractive: true,\n        namespace,\n        theme: \"indigo\",\n        icontheme: \"Tango\"\n      };\n\n      await new qx.tool.cli.commands.Create(opts).process();\n      process.chdir(apps_path);\n      for (let name of [\n        \"apiviewer\",\n        \"widgetbrowser\",\n        \"playground\",\n        \"demobrowser\"\n      ]) {\n        await new qx.tool.cli.commands.package.Install({}).install(\n          \"qooxdoo/qxl.\" + name\n        );\n      }\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEA,MAAMC,EAAE,GAAGJ,EAAE,CAACK,IAAH,CAAQC,KAAR,CAAcC,SAAd,CAAwBH,EAAnC;;EACA,MAAMI,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;EACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,OAAD,CAApB;;EAEA,MAAME,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;EACA,MAAMG,GAAG,GAAGH,OAAO,CAAC,KAAD,CAAnB;;EACAA,OAAO,CAAC,mBAAD,CAAP;;EACA,MAAMI,UAAU,GAAGJ,OAAO,CAAC,YAAD,CAA1B;;EACA,MAAMK,OAAO,GAAGL,OAAO,CAAC,oBAAD,CAAvB;;EACA,MAAMM,QAAQ,GAAGN,OAAO,CAAC,qBAAD,CAAxB,C,CACA;EACA;;EACA;AACA;AACA;AACA;;EACA;;;EACA,MAAMO,IAAI,GAAGC,QAAQ,EAArB;;EACA,MAAMC,QAAQ,GAAGT,OAAO,CAAC,UAAD,CAAxB,C,CAEA;;;EACAG,GAAG,CAACO,gBAAJ,CAAqBC,KAArB,GAA6B,KAA7B;EAEApB,EAAE,CAACqB,KAAH,CAASC,MAAT,CAAgB,uBAAhB,EAAyC;IACvCC,MAAM,EAAEvB,EAAE,CAACwB,IAAH,CAAQC,MADuB;IAGvCC,OAAO,EAAE;MACPC,aAAa,EAAE;IADR,CAH8B;;IAOvCC,SAAS,CAACC,OAAO,GAAG,EAAX,EAAe;MACtB7B,EAAE,CAACwB,IAAH,CAAQC,MAAR,CAAeK,KAAf,CAAqB,IAArB,EAA2BC,SAA3B;MACA,MAAMC,IAAI,GAAGhC,EAAE,CAACK,IAAH,CAAQC,KAAR,CAAc2B,OAA3B;MACA,IAAIC,CAAC,GAAGlC,EAAE,CAACmC,IAAH,CAAQC,eAAR,CAAwBC,WAAxB,GAAsCC,KAAtC,CACN,4BADM,CAAR;MAIAJ,CAAC,GAAGxB,IAAI,CAAC6B,OAAL,CAAaL,CAAb,CAAJ;MACA,KAAKM,aAAL,CAAmBN,CAAnB;MACA,KAAKO,aAAL,CAAmB/B,IAAI,CAACgC,IAAL,CAAUR,CAAV,EAAa,OAAb,CAAnB;MACA,KAAKS,iBAAL,CAAuBX,IAAI,CAACL,aAA5B;;MAEA,KAAK,IAAIiB,GAAT,IAAgBnB,MAAM,CAACoB,mBAAP,CAA2BhB,OAA3B,CAAhB,EAAqD;QACnD,KAAKiB,GAAL,CAASF,GAAT,EAAcf,OAAO,CAACe,GAAD,CAArB;MACD;IACF,CAtBsC;;IAwBvCG,UAAU,EAAE;MACVC,aAAa,EAAE;QACbC,KAAK,EAAE,QADM;QAEbC,YAAY,EAAE;MAFD,CADL;MAMVC,SAAS,EAAE;QACTF,KAAK,EAAE,QADE;QAETC,YAAY,EAAE;MAFL,CAND;MAWVE,SAAS,EAAE;QACTH,KAAK,EAAE,QADE;QAETC,YAAY,EAAE;MAFL;IAXD,CAxB2B;IAyCvCG,OAAO,EAAE;MACP;MACAC,QAAS,EAAE,IAFJ;;MAIP;MACAC,QAAc,EAAE,KALT;;MAOP;MACAC,QAAc,EAAE,IART;;MAUP;MACAC,QAAY,EAAE,KAXP;;MAaP;MACAC,QAAc,EAAE,KAdT;;MAgBP;AACJ;AACA;MACI,MAAMC,YAAN,GAAqB;QACnB,MAAM,KAAKC,WAAL,EAAN;QACA,IAAIT,SAAS,GAAG,MAAMnD,EAAE,CAACK,IAAH,CAAQC,KAAR,CAAcuD,KAAd,CAAoBC,KAApB,CAA0BC,WAA1B,CACpB,KAAKC,YAAL,EADoB,CAAtB;QAIA,KAAKC,QAAL,GAAgB/C,QAAQ,CAACgD,KAAT,CAAe,CAACf,SAAD,CAAf,EAA4B,EAA5B,CAAhB;;QACA,KAAKc,QAAL,CAAcE,EAAd,CAAiB,QAAjB,EAA2BC,QAAQ,IACjC,KAAKC,QAAL,CAAoB,QAApB,EAA8BD,QAA9B,CADF;;QAIA,KAAKH,QAAL,CAAcE,EAAd,CAAiB,KAAjB,EAAwBC,QAAQ,IAAI,KAAKC,QAAL,CAAoB,KAApB,EAA2BD,QAA3B,CAApC;;QACA,KAAKH,QAAL,CAAcE,EAAd,CAAiB,QAAjB,EAA2BC,QAAQ,IACjC,KAAKC,QAAL,CAAoB,QAApB,EAA8BD,QAA9B,CADF;;QAIA,KAAKH,QAAL,CAAcE,EAAd,CAAiB,OAAjB,EAA0B,YAAY;UACpC,MAAM,KAAKG,cAAL,CAAoB,IAApB,CAAN;UACA,KAAKf,QAAL,GAAsB,IAAtB;QACD,CAHD;;QAIA,KAAKU,QAAL,CAAcE,EAAd,CAAiB,OAAjB,EAA0BI,GAAG,IAAI;UAC/BvE,EAAE,CAACK,IAAH,CAAQmE,QAAR,CAAiBC,OAAjB,CAAyBC,KAAzB,CACEH,GAAG,CAACI,IAAJ,IAAY,QAAZ,GACI,+BADJ,GAEI,8BAHN,EAIEJ,GAJF;QAMD,CAPD;MAQD,CA/CM;;MAiDP;AACJ;AACA;MACI,MAAMX,WAAN,GAAoB;QAClB,IAAI,KAAKK,QAAT,EAAmB;UACjB,MAAM,KAAKA,QAAL,CAAcW,IAAd,EAAN;UACA,KAAKX,QAAL,GAAgB,IAAhB;UACA,KAAKV,QAAL,GAAsB,KAAtB;QACD;MACF,CA1DM;;MA4DP;AACJ;AACA;AACA;AACA;MACIsB,UAAU,GAAG;QACX,OAAOC,OAAO,CAAC,KAAKb,QAAN,CAAd;MACD,CAnEM;;MAqEP;AACJ;AACA;MACI,MAAMc,sBAAN,GAA+B;QAC7B,IAAI,KAAKC,QAAT,EAA2B;UACzB,MAAM,KAAKA,QAAX;QACD;MACF,CA5EM;;MA8EP;AACJ;AACA;MACI,MAAMC,UAAN,GAAmB;QACjB,MAAM,KAAKC,YAAL,EAAN;QACA,MAAM,KAAKC,WAAL,EAAN;MACD,CApFM;;MAsFP;AACJ;AACA;AACA;AACA;AACA;MACId,QAAc,CAACe,IAAD,EAAOhB,QAAP,EAAiB;QAC7B,IAAI,KAAKb,QAAT,EAAyB;UACvB,IACE,CAACa,QAAQ,CAACiB,WAAT,GAAuBC,UAAvB,CAAkC,KAAKC,YAAL,GAAoBF,WAApB,EAAlC,CADH,EAEE;YACA,KAAKf,cAAL,CAAoB,KAApB;UACD;QACF;MACF,CApGM;;MAsGP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIA,cAAc,CAACkB,SAAD,EAAY;QACxB,IAAI,KAAK/B,QAAT,EAAuB;UACrB,KAAKC,QAAL,GAAsB,IAAtB;UACA;QACD;;QAED,IAAI+B,aAAa,GAAG,YAAY;UAC9B,MAAM,KAAKR,UAAL,EAAN;;UAEA,IAAI,KAAKvB,QAAT,EAAyB;YACvB,KAAKA,QAAL,GAAsB,KAAtB;YACA,MAAM+B,aAAa,EAAnB;UACD;QACF,CAPD;;QASA,IAAIC,SAAS,GAAG,YAAY;UAC1B,KAAKjC,QAAL,GAAoB,IAApB;;UACA,IAAI;YACF,KAAKuB,QAAL,GAAwBS,aAAa,EAArC;YACA,MAAM,KAAKT,QAAX;YACA,KAAKA,QAAL,GAAwB,IAAxB;UACD,CAJD,SAIU;YACR,KAAKvB,QAAL,GAAoB,KAApB;UACD;QACF,CATD;;QAWA,IAAI,KAAKD,QAAT,EAAyB;UACvBmC,YAAY,CAAC,KAAKnC,QAAN,CAAZ;UACA,KAAKA,QAAL,GAAsB,IAAtB;QACD;;QACD,KAAKA,QAAL,GAAsBoC,UAAU,CAACF,SAAD,EAAYF,SAAS,GAAG,CAAH,GAAO,GAA5B,CAAhC;MACD,CA7IM;;MA+IP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,MAAMK,QAAN,CAAehC,KAAf,EAAsBhD,UAAtB,EAAkC;QAChC,IAAIiF,QAAQ,GAAGjF,UAAU,CAACiF,QAAX,EAAf;QAEA,IAAIC,KAAK,GAAG,EAAZ;QACA,IAAIC,KAAK,GAAG,EAAZ;;QACA,IAAIF,QAAQ,CAACG,IAAT,CAAcF,KAAlB,EAAyB;UACvBD,QAAQ,CAACG,IAAT,CAAcF,KAAd,CAAoBG,OAApB,CAA4B,CAACC,GAAD,EAAMC,KAAN,KAC1B,OAAOD,GAAP,IAAc,QAAd,GAA0BH,KAAK,CAACG,GAAD,CAAL,GAAaC,KAAvC,GAAgD,IADlD;QAGD;;QACD,IAAIC,cAAc,GAAG,EAArB;;QAEA,SAASC,OAAT,CAAiBH,GAAjB,EAAsBI,KAAtB,EAA6B;UAC3B,IAAIC,IAAI,GAAG;YACTL,GAAG,EAAEA,GADI;YAETI,KAAK,EAAEA;UAFE,CAAX;UAKA,IAAIH,KAAK,GAAGJ,KAAK,CAACG,GAAD,CAAjB;;UACA,IAAIC,KAAK,KAAKK,SAAd,EAAyB;YACvBV,KAAK,CAACK,KAAD,CAAL,GAAeI,IAAf;UACD,CAFD,MAEO;YACLH,cAAc,CAACK,IAAf,CAAoBF,IAApB;UACD;QACF;;QAED,KAAK,IAAIpC,QAAT,IAAqB3C,MAAM,CAACoB,mBAAP,CAA2BgB,KAA3B,CAArB,EAAwD;UACtD,IAAI8C,IAAI,GAAG9C,KAAK,CAACO,QAAD,CAAhB;;UACA,IAAIA,QAAQ,KAAK,YAAjB,EAA+B;YAC7BkC,OAAO,CAAC,GAAD,EAAMK,IAAI,CAACJ,KAAL,IAAc,WAApB,CAAP;UACD,CAFD,MAEO,IAAII,IAAI,CAACC,SAAL,IAAkBD,IAAI,CAACE,UAA3B,EAAuC;YAC5CP,OAAO,CAACK,IAAI,CAACC,SAAL,IAAkBxC,QAAnB,EAA6BuC,IAAI,CAACJ,KAAL,IAAc,WAA3C,CAAP;UACD;QACF;;QAEDF,cAAc,CAACH,OAAf,CAAuBM,IAAI,IAAIT,KAAK,CAACW,IAAN,CAAWF,IAAX,CAA/B;QACAV,QAAQ,CAACG,IAAT,CAAcF,KAAd,GAAsBA,KAAtB;MACD,CA7LM;;MA+LP;AACJ;AACA;AACA;AACA;AACA;MACI,MAAMe,YAAN,CAAmBjD,KAAnB,EAA0BhD,UAA1B,EAAsC;QACpC,MAAMiF,QAAQ,GAAGjF,UAAU,CAACiF,QAAX,EAAjB;QACA,MAAMiB,WAAW,GAAGrG,IAAI,CAACgC,IAAL,CAAU,KAAKsB,YAAL,EAAV,EAA+B,UAA/B,CAApB;QACAH,KAAK,GAAG,MAAMzD,EAAE,CAAC4G,YAAH,CAAgBD,WAAhB,EAA6B,MAA7B,CAAd;;QACA,KAAK,IAAI3C,QAAT,IAAqBP,KAArB,EAA4B;UAC1B,IAAIoD,CAAC,GAAG7C,QAAQ,CAAC8C,KAAT,CAAe,iBAAf,CAAR;;UACA,IAAI,CAACD,CAAL,EAAQ;YACN;UACD;;UACD,IAAI,CAACE,MAAD,EAASC,IAAT,EAAeC,GAAf,IAAsBJ,CAA1B;;UACA,IAAIE,MAAJ,EAAY,CACV;UACD;;UACD,IAAIG,IAAI,GAAG,MAAMlH,EAAE,CAACmH,aAAH,CACf7G,IAAI,CAACgC,IAAL,CAAUqE,WAAV,EAAuB3C,QAAvB,CADe,EAEf,MAFe,CAAjB;UAKA,IAAIoD,EAAJ;;UACA,IAAI;YACFA,EAAE,GAAG5G,GAAG,CAAC6G,QAAJ,CAAaH,IAAb,CAAL;UACD,CAFD,CAEE,OAAO/C,GAAP,EAAY;YACZvE,EAAE,CAACK,IAAH,CAAQmE,QAAR,CAAiBC,OAAjB,CAAyBiD,GAAzB,CACE,4BAA4BtD,QAA5B,GAAuC,IAAvC,GAA8CG,GADhD;YAIA;UACD;;UACDiD,EAAE,CAACJ,IAAH,GAAUhD,QAAV;UACA0B,QAAQ,CAAC6B,QAAT,CAAkBvD,QAAlB,IAA8BoD,EAA9B;;UACA,IAAIH,GAAG,KAAK,MAAZ,EAAoB;YAClBvB,QAAQ,CAAC6B,QAAT,CAAkBP,IAAlB,IAA0BI,EAA1B;UACD;QACF;MACF,CAvOM;;MAyOP;AACJ;AACA;AACA;MACI,MAAMtC,YAAN,GAAqB;QACnB,MAAM,IAAI0C,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;UACrCjH,UAAU,CAAC,KAAKmD,YAAL,EAAD,CAAV,CACG8B,QADH,CACY;YACRG,IAAI,EAAE;cACJM,KAAK,EAAE,4BADH;cAEJwB,WAAW,EAAE,iCAFT;cAGJC,KAAK,EAAE,kBAHH;cAIJC,gBAAgB,EAAE,SAJd;cAKJC,eAAe,EAAE,SALb;cAMJnC,KAAK,EAAE,CAAC,GAAD,EAAM,SAAN;YANH,CADE;YAURoC,OAAO,EAAE,EAVD;YAWRhC,GAAG,EAAE,EAXG;YAYRiC,IAAI,EAAE,IAZE;YAaRT,QAAQ,EAAE;UAbF,CADZ,EAgBGU,MAhBH,CAgBU3H,IAAI,CAACgC,IAAL,CAAU,KAAKsB,YAAL,EAAV,EAA+B,KAA/B,CAhBV,EAiBGsE,WAjBH,CAiBe,KAAK/C,YAAL,EAjBf,EAkBGgD,KAlBH,CAkBS,IAlBT,EAmBGC,GAnBH,CAmBO,KAAK1B,YAAL,CAAkB2B,IAAlB,CAAuB,IAAvB,CAnBP,EAoBGD,GApBH,CAoBOzH,QAAQ,EApBf,EAqBGyH,GArBH,CAqBO,KAAK3C,QAAL,CAAc4C,IAAd,CAAmB,IAAnB,CArBP,EAsBGD,GAtBH,CAuBI1H,OAAO,CAAC;YACN4H,MAAM,EAAE;UADF,CAAD,CAvBX,EA2BGC,KA3BH,CA2BS,UAAUpE,GAAV,EAAe;YACpB,IAAIA,GAAJ,EAAS;cACPuD,MAAM,CAACvD,GAAD,CAAN;YACD,CAFD,MAEO;cACLsD,OAAO;YACR;UACF,CAjCH;QAkCD,CAnCK,CAAN;MAoCD,CAlRM;;MAoRP;AACJ;AACA;AACA;AACA;MACI,MAAM1C,WAAN,GAAoB;QAClB,IAAIyD,MAAM,GAAG,MAAM,IAAIhB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;UAClD9G,IAAI,CAAC6H,MAAL,CACE;YACElC,IAAI,EAAEjG,IAAI,CAACgC,IAAL,CAAU,KAAKsB,YAAL,EAAV,EAA+B,MAA/B,EAAuC,cAAvC,CADR;YAEE8E,OAAO,EAAEpI,IAAI,CAACgC,IAAL,CAAU,KAAK6C,YAAL,EAAV,EAA+B,aAA/B;UAFX,CADF,EAME,UAAUhB,GAAV,EAAeqE,MAAf,EAAuB;YACrB,IAAIrE,GAAJ,EAAS;cACPuD,MAAM,CAACvD,GAAD,CAAN;YACD,CAFD,MAEO;cACLsD,OAAO,CAACe,MAAD,CAAP;YACD;UACF,CAZH;QAcD,CAfkB,CAAnB;QAgBA,MAAMxI,EAAE,CAAC2I,cAAH,CACJrI,IAAI,CAACgC,IAAL,CAAU,KAAK6C,YAAL,EAAV,EAA+B,aAA/B,CADI,EAEJqD,MAAM,CAACI,GAFH,EAGJ,MAHI,CAAN;MAKD,CA/SM;;MAiTP;AACJ;AACA;AACA;MACI,MAAMC,aAAN,GAAsB;QACpB,MAAMC,SAAS,GAAG,KAAKC,gBAAL,EAAlB;QACA3I,OAAO,CAAC4I,KAAR,CAAc,KAAK7D,YAAL,EAAd;QACA,IAAI8D,SAAS,GAAG3I,IAAI,CAACgC,IAAL,CAAU,KAAK6C,YAAL,EAAV,EAA+B2D,SAA/B,CAAhB;;QACA,IAAI,MAAM9I,EAAE,CAACkJ,WAAH,CAAeD,SAAf,CAAV,EAAqC;UACnC1I,MAAM,CAAC4I,IAAP,CAAYF,SAAZ;QACD;;QACD,MAAMG,IAAI,GAAG;UACXC,cAAc,EAAE,IADL;UAEXP,SAFW;UAGXQ,KAAK,EAAE,QAHI;UAIXC,SAAS,EAAE;QAJA,CAAb;QAOA,MAAM,IAAI3J,EAAE,CAACK,IAAH,CAAQuJ,GAAR,CAAYC,QAAZ,CAAqBC,MAAzB,CAAgCN,IAAhC,EAAsChJ,OAAtC,EAAN;QACAA,OAAO,CAAC4I,KAAR,CAAcC,SAAd;;QACA,KAAK,IAAIjC,IAAT,IAAiB,CACf,WADe,EAEf,eAFe,EAGf,YAHe,EAIf,aAJe,CAAjB,EAKG;UACD,MAAM,IAAIpH,EAAE,CAACK,IAAH,CAAQuJ,GAAR,CAAYC,QAAZ,CAAqBE,OAArB,CAA6BC,OAAjC,CAAyC,EAAzC,EAA6CC,OAA7C,CACJ,iBAAiB7C,IADb,CAAN;QAGD;MACF;;IA/UM;EAzC8B,CAAzC;EA1CApH,EAAE,CAACK,IAAH,CAAQC,KAAR,CAAc2B,OAAd,CAAsB9B,aAAtB,GAAsCA,aAAtC"
}