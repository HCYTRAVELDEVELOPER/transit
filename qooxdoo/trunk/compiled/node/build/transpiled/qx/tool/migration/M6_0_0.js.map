{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "process",
    "require",
    "path",
    "semver",
    "fs",
    "tool",
    "utils",
    "Promisify",
    "Class",
    "define",
    "extend",
    "migration",
    "BaseMigration",
    "members",
    "migrateCompileJs",
    "compileJsFilename",
    "join",
    "cwd",
    "existsAsync",
    "data",
    "readFileAsync",
    "indexOf",
    "announce",
    "markAsPending",
    "migrateQooxdooJs",
    "model",
    "config",
    "Registry",
    "getInstance",
    "set",
    "warnOnly",
    "validate",
    "load",
    "getValue",
    "getSchemaUri",
    "getRunner",
    "getDryRun",
    "setValue",
    "save",
    "markAsApplied",
    "migrateConfigFiles",
    "dryRun",
    "pkg",
    "cli",
    "commands",
    "Package",
    "migrateFiles",
    "lockfile",
    "filename",
    "cache_dir",
    "ConfigDb",
    "getDirectory",
    "package_cache_name",
    "checkFilesToRename",
    "length",
    "renameFilesUnlessDryRun",
    "replaceInFilesUnlessDryRun",
    "files",
    "from",
    "to",
    "migrateManifest",
    "verbose",
    "getVerbose",
    "updateManifest",
    "manifestModel",
    "Utils",
    "getManifestModels",
    "lang",
    "Type",
    "isArray",
    "valid",
    "obj",
    "keyExists",
    "transform",
    "authors",
    "isString",
    "name",
    "isObject",
    "email",
    "map",
    "r",
    "version",
    "coerced",
    "coerce",
    "compiler",
    "Console",
    "warn",
    "getDataPath",
    "String",
    "unset",
    "info",
    "getRelativeDataPath",
    "updateDependencyUnlessDryRun",
    "updateSchemaUnlessDryRun",
    "updateQxDependencyUnlessDryRun",
    "setValidate",
    "migrateCompileJson",
    "compileJsonModel",
    "Compile",
    "eslintExtends",
    "newEsLintExtends",
    "M6_0_0"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/tool/migration/M6_0_0.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2021 The authors\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Boulanger (info@bibliograph.org, @cboulanger)\n\n**********************************************************************/\n\nconst process = require(\"process\");\nconst path = require(\"upath\");\nconst semver = require(\"semver\");\nconst fs = qx.tool.utils.Promisify.fs;\n\n/**\n * Migration class for updating from v5 to v6\n */\nqx.Class.define(\"qx.tool.migration.M6_0_0\", {\n  extend: qx.tool.migration.BaseMigration,\n  members: {\n    /**\n     * Check for legacy compile.js - needs manual intervention\n     */\n    async migrateCompileJs() {\n      let compileJsFilename = path.join(process.cwd(), \"compile.js\");\n      if (await fs.existsAsync(compileJsFilename)) {\n        let data = await fs.readFileAsync(compileJsFilename, \"utf8\");\n        if (data.indexOf(\"module.exports\") < 0) {\n          this.announce(\n            `Your compile.js appears to be missing a module.exports statement and must be manually updated - please see https://git.io/fjBqU for more details`\n          );\n\n          this.markAsPending();\n        }\n      }\n    },\n\n    async migrateQooxdooJs() {\n      let compileJsFilename = path.join(process.cwd(), \"qooxdoo.json\");\n      if (await fs.existsAsync(compileJsFilename)) {\n        let model = await qx.tool.config.Registry.getInstance()\n          .set({\n            warnOnly: true,\n            validate: false\n          })\n          .load();\n        if (model.getValue(\"$schema\") !== model.getSchemaUri()) {\n          if (this.getRunner().getDryRun()) {\n            this.markAsPending(\"Add schema to qooxdoo.json\");\n          } else {\n            model.setValue(\"$schema\", model.getSchemaUri());\n            model.save();\n            this.markAsApplied();\n          }\n        }\n      }\n    },\n\n    async migrateConfigFiles() {\n      let dryRun = this.getRunner().getDryRun();\n      let pkg = qx.tool.cli.commands.Package;\n      let cwd = process.cwd();\n      // rename configuration files from initial names\n      // replace those static variables with verbatims\n      let migrateFiles = [\n        [path.join(cwd, pkg.lockfile.filename), path.join(cwd, \"contrib.json\")],\n        [path.join(cwd, pkg.cache_dir), path.join(cwd, \"contrib\")],\n        [\n          path.join(\n            qx.tool.cli.ConfigDb.getDirectory(),\n            pkg.package_cache_name\n          ),\n\n          path.join(qx.tool.cli.ConfigDb.getDirectory(), \"contrib-cache.json\")\n        ]\n      ];\n\n      // change names in .gitignore\n      if ((await this.checkFilesToRename(migrateFiles)).length) {\n        await this.renameFilesUnlessDryRun(migrateFiles);\n        if (dryRun) {\n          this.announce(\".gitignore needs to be updated.\");\n          this.markAsPending(3);\n        } else {\n          await this.replaceInFilesUnlessDryRun([\n            {\n              files: path.join(cwd, \".gitignore\"),\n              from: \"contrib/\",\n              to: \"qx_packages/\"\n            },\n\n            {\n              files: path.join(cwd, \".gitignore\"),\n              from: \"contrib.json\",\n              to: \"qx-lock.json\"\n            }\n          ]);\n\n          this.markAsApplied();\n        }\n      }\n    },\n\n    async migrateManifest() {\n      let dryRun = this.getRunner().getDryRun();\n      let verbose = this.getRunner().getVerbose();\n      // Update all Manifests\n      let updateManifest = false;\n      for (const manifestModel of await qx.tool.config.Utils.getManifestModels()) {\n        await manifestModel\n          .set({\n            warnOnly: true,\n            validate: false\n          })\n          .load();\n        if (!qx.lang.Type.isArray(manifestModel.getValue(\"info.authors\"))) {\n          updateManifest = true;\n        }\n        if (!semver.valid(manifestModel.getValue(\"info.version\"))) {\n          updateManifest = true;\n        }\n        let obj = {\n          \"info.qooxdoo-versions\": null,\n          \"info.qooxdoo-range\": null,\n          \"provides.type\": null,\n          \"requires.qxcompiler\": null,\n          \"requires.qooxdoo-sdk\": null,\n          \"requires.qooxdoo-compiler\": null\n        };\n\n        if (manifestModel.keyExists(obj)) {\n          updateManifest = true;\n        }\n        if (updateManifest) {\n          if (dryRun) {\n            this.markAsPending(2);\n          } else {\n            manifestModel\n              .transform(\"info.authors\", authors => {\n                if (authors === \"\") {\n                  return [];\n                } else if (qx.lang.Type.isString(authors)) {\n                  return [\n                    {\n                      name: authors\n                    }\n                  ];\n                } else if (qx.lang.Type.isObject(authors)) {\n                  return [\n                    {\n                      name: authors.name,\n                      email: authors.email\n                    }\n                  ];\n                } else if (qx.lang.Type.isArray(authors)) {\n                  return authors.map(r =>\n                    qx.lang.Type.isObject(r)\n                      ? {\n                          name: r.name,\n                          email: r.email\n                        }\n                      : {\n                          name: r\n                        }\n                  );\n                }\n                return [];\n              })\n              .transform(\"info.version\", version => {\n                let coerced = semver.coerce(version);\n                if (coerced === null) {\n                  qx.tool.compiler.Console.warn(\n                    `Version string '${version}' in ${manifestModel.getDataPath()} is not a valid semver version, will be set to 1.0.0`\n                  );\n\n                  return \"1.0.0\";\n                }\n                return String(coerced);\n              })\n              .unset(\"info.qooxdoo-versions\")\n              .unset(\"info.qooxdoo-range\")\n              .unset(\"provides.type\")\n              .unset(\"requires.qxcompiler\")\n              .unset(\"requires.qooxdoo-compiler\")\n              .unset(\"requires.qooxdoo-sdk\");\n            verbose &&\n              qx.tool.compiler.Console.info(\n                `Updated settings in ${manifestModel.getRelativeDataPath()}.`\n              );\n\n            await manifestModel.save();\n            this.markAsApplied();\n            await this.updateDependencyUnlessDryRun(\n              manifestModel,\n              \"@qooxdoo/compiler\",\n              \"^1.0.0\"\n            );\n\n            verbose &&\n              qx.tool.compiler.Console.info(\n                `Updated dependencies in ${manifestModel.getRelativeDataPath()}.`\n              );\n          }\n        }\n        // update schema\n        await this.updateSchemaUnlessDryRun(\n          manifestModel,\n          \"https://qooxdoo.org/schema/Manifest-1-0-0.json\"\n        );\n\n        // update qooxdoo version\n        await this.updateQxDependencyUnlessDryRun(manifestModel);\n\n        // save Manifest file\n        if (!this.getRunner().getDryRun()) {\n          manifestModel.setValidate(false); // shouldn't be necessary\n          await manifestModel.save();\n        }\n      }\n    },\n\n    async migrateCompileJson() {\n      let compileJsonModel = qx.tool.config.Compile.getInstance().set({\n        warnOnly: true,\n        validate: false\n      });\n\n      await compileJsonModel.load();\n      let eslintExtends = compileJsonModel.getValue(\"eslintConfig.extends\");\n      let newEsLintExtends = [\n        \"@qooxdoo/qx/browser\",\n        \"@qooxdoo/qx\",\n        \"@qooxdoo/jsdoc-disable\"\n      ];\n\n      if (eslintExtends !== newEsLintExtends) {\n        if (this.getRunner().getDryRun()) {\n          this.announce(\"eslintConfig.extends will be updated.\");\n          this.markAsPending();\n        } else {\n          compileJsonModel.setValue(\"eslintConfig.extends\", newEsLintExtends);\n          this.markAsApplied();\n        }\n      }\n      await this.updateSchemaUnlessDryRun(\n        compileJsonModel,\n        \"https://qooxdoo.org/schema/compile-1-0-0.json\"\n      );\n\n      if (!this.getRunner().getDryRun()) {\n        await compileJsonModel.save();\n        compileJsonModel.set({ validate: true });\n        await compileJsonModel.load();\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}