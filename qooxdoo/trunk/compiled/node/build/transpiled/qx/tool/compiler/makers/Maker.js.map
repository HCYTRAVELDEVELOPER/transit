{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "path",
    "require",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "construct",
    "_compiledClasses",
    "properties",
    "dbFilename",
    "init",
    "nullable",
    "check",
    "apply",
    "environment",
    "outputTypescript",
    "outputTypescriptTo",
    "noErase",
    "success",
    "hasWarnings",
    "events",
    "making",
    "made",
    "writingApplications",
    "writingApplication",
    "writtenApplication",
    "writtenApplications",
    "members",
    "_analyser",
    "make",
    "Error",
    "classname",
    "getOutputDir",
    "eraseOutputDir",
    "dir",
    "resolve",
    "pwd",
    "process",
    "cwd",
    "startsWith",
    "length",
    "tool",
    "utils",
    "files",
    "Utils",
    "deleteRecursive",
    "__applyDbFilename",
    "value",
    "oldValue",
    "getAnalyser",
    "_createAnalyser",
    "addListener",
    "evt",
    "data",
    "getData",
    "classFile",
    "getClassName",
    "getRecentlyCompiledClasses",
    "eraseAfter",
    "classes",
    "analyser",
    "compiler",
    "Analyser",
    "join",
    "getDbFilename",
    "setOutputDir",
    "makers",
    "Maker"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/tool/compiler/makers/Maker.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo\n *\n *    Copyright:\n *      2011-2017 Zenesis Limited, http://www.zenesis.com\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *\n * *********************************************************************** */\n\nvar path = require(\"upath\");\n\n/**\n * Base class for makers; does not include anything about targets, locales, etc (see AbstractAppMaker)\n */\nqx.Class.define(\"qx.tool.compiler.makers.Maker\", {\n  extend: qx.core.Object,\n  type: \"abstract\",\n\n  construct() {\n    super();\n    this._compiledClasses = {};\n  },\n\n  properties: {\n    /** Database filename relative to the target's output directory; if null, defaults to db.json; absolute paths can be used */\n    dbFilename: {\n      init: null,\n      nullable: true,\n      check: \"String\",\n      apply: \"__applyDbFilename\"\n    },\n\n    /** Map of environment settings */\n    environment: {\n      init: null,\n      nullable: true\n    },\n\n    /** Whether to write a typescript .d.ts file for all classes */\n    outputTypescript: {\n      init: false,\n      nullable: false,\n      check: \"Boolean\"\n    },\n\n    /** Filename for the typescript, if `outputTypescript == true` */\n    outputTypescriptTo: {\n      init: \"qooxdoo.d.ts\",\n      nullable: false,\n      check: \"String\"\n    },\n\n    /** Blocks automatic deleting of the output directory */\n    noErase: {\n      init: false,\n      check: \"Boolean\"\n    },\n\n    /** Whether the make has succeeded, null during/before make */\n    success: {\n      init: null,\n      nullable: true,\n      check: \"Boolean\"\n    },\n\n    /** Whether the make has any warnings, null during/before make */\n    hasWarnings: {\n      init: null,\n      nullable: true,\n      check: \"Boolean\"\n    }\n  },\n\n  events: {\n    making: \"qx.event.type.Event\",\n    made: \"qx.event.type.Event\",\n    writingApplications: \"qx.event.type.Event\",\n    writingApplication: \"qx.event.type.Data\",\n    writtenApplication: \"qx.event.type.Data\",\n    writtenApplications: \"qx.event.type.Event\"\n  },\n\n  members: {\n    /** {Analyser} current analyser (created on demand) */\n    _analyser: null,\n\n    /** Lookup of classes which have been compiled this session; this is a map where the keys are\n     * the class name and the value is `true`, it is erased periodically\n     */\n    _compiledClasses: null,\n\n    /**\n     * Makes the application\n     *\n     * @abstract\n     */\n    async make() {\n      throw new Error(\"No implementation for \" + this.classname + \".make\");\n    },\n\n    /**\n     * Returns the output directory, with a trailing slash\n     *\n     * @returns {String}\n     * @abstract\n     */\n    getOutputDir() {\n      throw new Error(\n        \"No implementation for \" + this.classname + \".getOutputDir\"\n      );\n    },\n\n    /**\n     * Erases the output directory\n     */\n    async eraseOutputDir() {\n      var dir = path.resolve(this.getOutputDir());\n      var pwd = path.resolve(process.cwd());\n      if (pwd.startsWith(dir) && dir.length <= pwd.length) {\n        throw new Error(\n          \"Output directory (\" + dir + \") is a parent directory of PWD\"\n        );\n      }\n      await qx.tool.utils.files.Utils.deleteRecursive(this.getOutputDir());\n    },\n\n    /**\n     * Apply for databaseName property\n     * @param value\n     * @param oldValue\n     * @private\n     */\n    __applyDbFilename(value, oldValue) {\n      if (this._analyser) {\n        throw new Error(\n          \"Cannot change the database filename once an Analyser has been created\"\n        );\n      }\n    },\n\n    /**\n     * Gets the analyser, creating it if necessary\n     * @returns {Analyser}\n     */\n    getAnalyser() {\n      if (this._analyser) {\n        return this._analyser;\n      }\n      this._analyser = this._createAnalyser();\n      this._analyser.addListener(\"compiledClass\", evt => {\n        let data = evt.getData();\n        this._compiledClasses[data.classFile.getClassName()] = true;\n      });\n      return this._analyser;\n    },\n\n    /**\n     * Returns a list of classes which have been compiled in this session\n     *\n     * @param eraseAfter {Boolean?} if true, the list is reset after returning\n     * @return {Map} list of class names that have been compiled\n     */\n    getRecentlyCompiledClasses(eraseAfter) {\n      let classes = this._compiledClasses;\n      if (eraseAfter) {\n        this._compiledClasses = {};\n      }\n      return classes;\n    },\n\n    /**\n     * Creates the analyser\n     * @returns {Analyser}\n     * @protected\n     */\n    _createAnalyser() {\n      var analyser = (this._analyser = new qx.tool.compiler.Analyser(\n        path.join(this.getOutputDir(), this.getDbFilename() || \"db.json\")\n      ));\n\n      analyser.setOutputDir(this.getOutputDir());\n      return analyser;\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEA,IAAIC,IAAI,GAAGC,OAAO,CAAC,OAAD,CAAlB;EAEA;AACA;AACA;;;EACAL,EAAE,CAACM,KAAH,CAASC,MAAT,CAAgB,+BAAhB,EAAiD;IAC/CC,MAAM,EAAER,EAAE,CAACS,IAAH,CAAQC,MAD+B;IAE/CC,IAAI,EAAE,UAFyC;;IAI/CC,SAAS,GAAG;MACV;MACA,KAAKC,gBAAL,GAAwB,EAAxB;IACD,CAP8C;;IAS/CC,UAAU,EAAE;MACV;MACAC,UAAU,EAAE;QACVC,IAAI,EAAE,IADI;QAEVC,QAAQ,EAAE,IAFA;QAGVC,KAAK,EAAE,QAHG;QAIVC,KAAK,EAAE;MAJG,CAFF;;MASV;MACAC,WAAW,EAAE;QACXJ,IAAI,EAAE,IADK;QAEXC,QAAQ,EAAE;MAFC,CAVH;;MAeV;MACAI,gBAAgB,EAAE;QAChBL,IAAI,EAAE,KADU;QAEhBC,QAAQ,EAAE,KAFM;QAGhBC,KAAK,EAAE;MAHS,CAhBR;;MAsBV;MACAI,kBAAkB,EAAE;QAClBN,IAAI,EAAE,cADY;QAElBC,QAAQ,EAAE,KAFQ;QAGlBC,KAAK,EAAE;MAHW,CAvBV;;MA6BV;MACAK,OAAO,EAAE;QACPP,IAAI,EAAE,KADC;QAEPE,KAAK,EAAE;MAFA,CA9BC;;MAmCV;MACAM,OAAO,EAAE;QACPR,IAAI,EAAE,IADC;QAEPC,QAAQ,EAAE,IAFH;QAGPC,KAAK,EAAE;MAHA,CApCC;;MA0CV;MACAO,WAAW,EAAE;QACXT,IAAI,EAAE,IADK;QAEXC,QAAQ,EAAE,IAFC;QAGXC,KAAK,EAAE;MAHI;IA3CH,CATmC;IA2D/CQ,MAAM,EAAE;MACNC,MAAM,EAAE,qBADF;MAENC,IAAI,EAAE,qBAFA;MAGNC,mBAAmB,EAAE,qBAHf;MAINC,kBAAkB,EAAE,oBAJd;MAKNC,kBAAkB,EAAE,oBALd;MAMNC,mBAAmB,EAAE;IANf,CA3DuC;IAoE/CC,OAAO,EAAE;MACP;MACAC,SAAS,EAAE,IAFJ;;MAIP;AACJ;AACA;MACIrB,gBAAgB,EAAE,IAPX;;MASP;AACJ;AACA;AACA;AACA;MACI,MAAMsB,IAAN,GAAa;QACX,MAAM,IAAIC,KAAJ,CAAU,2BAA2B,KAAKC,SAAhC,GAA4C,OAAtD,CAAN;MACD,CAhBM;;MAkBP;AACJ;AACA;AACA;AACA;AACA;MACIC,YAAY,GAAG;QACb,MAAM,IAAIF,KAAJ,CACJ,2BAA2B,KAAKC,SAAhC,GAA4C,eADxC,CAAN;MAGD,CA5BM;;MA8BP;AACJ;AACA;MACI,MAAME,cAAN,GAAuB;QACrB,IAAIC,GAAG,GAAGpC,IAAI,CAACqC,OAAL,CAAa,KAAKH,YAAL,EAAb,CAAV;QACA,IAAII,GAAG,GAAGtC,IAAI,CAACqC,OAAL,CAAaE,OAAO,CAACC,GAAR,EAAb,CAAV;;QACA,IAAIF,GAAG,CAACG,UAAJ,CAAeL,GAAf,KAAuBA,GAAG,CAACM,MAAJ,IAAcJ,GAAG,CAACI,MAA7C,EAAqD;UACnD,MAAM,IAAIV,KAAJ,CACJ,uBAAuBI,GAAvB,GAA6B,gCADzB,CAAN;QAGD;;QACD,MAAMxC,EAAE,CAAC+C,IAAH,CAAQC,KAAR,CAAcC,KAAd,CAAoBC,KAApB,CAA0BC,eAA1B,CAA0C,KAAKb,YAAL,EAA1C,CAAN;MACD,CA1CM;;MA4CP;AACJ;AACA;AACA;AACA;AACA;MACIc,QAAiB,CAACC,KAAD,EAAQC,QAAR,EAAkB;QACjC,IAAI,KAAKpB,SAAT,EAAoB;UAClB,MAAM,IAAIE,KAAJ,CACJ,uEADI,CAAN;QAGD;MACF,CAxDM;;MA0DP;AACJ;AACA;AACA;MACImB,WAAW,GAAG;QACZ,IAAI,KAAKrB,SAAT,EAAoB;UAClB,OAAO,KAAKA,SAAZ;QACD;;QACD,KAAKA,SAAL,GAAiB,KAAKsB,eAAL,EAAjB;;QACA,KAAKtB,SAAL,CAAeuB,WAAf,CAA2B,eAA3B,EAA4CC,GAAG,IAAI;UACjD,IAAIC,IAAI,GAAGD,GAAG,CAACE,OAAJ,EAAX;UACA,KAAK/C,gBAAL,CAAsB8C,IAAI,CAACE,SAAL,CAAeC,YAAf,EAAtB,IAAuD,IAAvD;QACD,CAHD;;QAIA,OAAO,KAAK5B,SAAZ;MACD,CAxEM;;MA0EP;AACJ;AACA;AACA;AACA;AACA;MACI6B,0BAA0B,CAACC,UAAD,EAAa;QACrC,IAAIC,OAAO,GAAG,KAAKpD,gBAAnB;;QACA,IAAImD,UAAJ,EAAgB;UACd,KAAKnD,gBAAL,GAAwB,EAAxB;QACD;;QACD,OAAOoD,OAAP;MACD,CAtFM;;MAwFP;AACJ;AACA;AACA;AACA;MACIT,eAAe,GAAG;QAChB,IAAIU,QAAQ,GAAI,KAAKhC,SAAL,GAAiB,IAAIlC,EAAE,CAAC+C,IAAH,CAAQoB,QAAR,CAAiBC,QAArB,CAC/BhE,IAAI,CAACiE,IAAL,CAAU,KAAK/B,YAAL,EAAV,EAA+B,KAAKgC,aAAL,MAAwB,SAAvD,CAD+B,CAAjC;QAIAJ,QAAQ,CAACK,YAAT,CAAsB,KAAKjC,YAAL,EAAtB;QACA,OAAO4B,QAAP;MACD;;IApGM;EApEsC,CAAjD;EA3BAlE,EAAE,CAAC+C,IAAH,CAAQoB,QAAR,CAAiBK,MAAjB,CAAwBC,KAAxB,CAA8BtE,aAA9B,GAA8CA,aAA9C"
}