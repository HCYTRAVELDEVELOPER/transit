{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "fs",
    "require",
    "process",
    "path",
    "Class",
    "define",
    "extend",
    "tool",
    "cli",
    "commands",
    "Command",
    "statics",
    "getYargsCommand",
    "command",
    "describe",
    "builder",
    "type",
    "alias",
    "default",
    "import",
    "force",
    "members",
    "argv",
    "manifestConfig",
    "config",
    "Manifest",
    "getInstance",
    "load",
    "manifestData",
    "getData",
    "values",
    "Object",
    "assign",
    "info",
    "provides",
    "authors",
    "classname",
    "copyright",
    "Date",
    "getFullYear",
    "class_namespaces",
    "split",
    "manifest_namepaces",
    "namespace",
    "utils",
    "Utils",
    "UserError",
    "template_name",
    "template_path",
    "potential_dirs",
    "join",
    "cwd",
    "getTemplateDir",
    "found",
    "dir",
    "existsAsync",
    "template",
    "readFileAsync",
    "header_template",
    "header_template_path",
    "readFileSync",
    "e",
    "dirname",
    "includes",
    "var_name",
    "replace",
    "RegExp",
    "header",
    "final_content",
    "relative_path",
    "absolute_path",
    "file_exists",
    "accessSync",
    "mkdirSync",
    "recursive",
    "mode",
    "writeFileAsync",
    "message",
    "local_templates_path",
    "local_copy_path",
    "basename",
    "add"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/tool/cli/commands/add/Class.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2017 Christian Boulanger and others\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Boulanger (info@bibliograph.org, @cboulanger)\n\n************************************************************************ */\nconst fs = require(\"fs\");\nconst process = require(\"process\");\nconst path = require(\"upath\");\n/**\n * Add a new class file to the current project, based on a template.\n *\n * Syntax: `qx add class <classname> [--type=template_name] [--extend=extended_class] [--import] [--from-pkg=package_name]`\n * If omitted, `--type` defaults to \"default\". The path to the template file will be calculated as follows:\n * 1. transform template_name to ${template_name}.tmpl.js\n * 2. check if this file exists in the \"templates/class\" folder\n *    a. of a package, if the --from-pkg paramater wass passed (not implemented)\n *    b. otherwise, of the current project\n *    c. finally, of the CLI library\n *\n * If the --import flag is set, copy the template to the templates/class folder of the current project,\n * so it can be customized and used instead of the one shipped with the CLI.\n *\n * If you place a file named `header.js` in the root of your project, this header will be used verbatim\n * as the ${header} template variable instead of the generic header template, which is populated with\n * information from Manifest.json\n *\n * (Package support is not yet implemented)\n *\n */\nqx.Class.define(\"qx.tool.cli.commands.add.Class\", {\n  extend: qx.tool.cli.commands.Command,\n  statics: {\n    getYargsCommand() {\n      return {\n        command: \"class <classname> [options]\",\n        describe:\n          \"adds a new class file to the current project, based on a template.\",\n        builder: {\n          type: {\n            alias: \"t\",\n            describe: \"the type of the class (optional).\",\n            default: \"default\"\n          },\n\n          extend: {\n            alias: \"e\",\n            describe: \"the base class of the new class\"\n          },\n\n          import: {\n            describe:\n              \"import the template to the `templates/class` folder of the current project, where it can be customized\"\n          },\n\n          force: {\n            alias: \"f\",\n            describe: \"overwrite an existing file\"\n          }\n        }\n      };\n    }\n  },\n\n  members: {\n    async process() {\n      let argv = this.argv;\n\n      // read Manifest.json\n      let manifestConfig = await qx.tool.config.Manifest.getInstance().load();\n      let manifestData = manifestConfig.getData();\n\n      // prepare template vars\n      let values = Object.assign({}, manifestData.info, manifestData.provides);\n      // @todo Add support for authors, ask interactively if author info should be taken\n      // from Manifest or entered manually, then create string representation to insert.\n      values.authors = \"\";\n      values.classname = argv.classname;\n      values.extend = argv.extend ? argv.extend : \"qx.core.Object\";\n\n      // @todo ask interactively for copyright holder, create a setting in Manifest.json\n      values.copyright = new Date().getFullYear();\n\n      // check top-level namespace\n      let class_namespaces = argv.classname.split(/\\./);\n      let manifest_namepaces = values.namespace.split(/\\./);\n      if (class_namespaces[0] !== manifest_namepaces[0]) {\n        throw new qx.tool.utils.Utils.UserError(\n          `Invalid top namespace '${class_namespaces[0]}'. Must be '${manifest_namepaces[0]}'.`\n        );\n      }\n\n      // get path to the template file\n      let template_name = argv.type;\n      let template_path;\n      let potential_dirs = [\n        // 1. in the templates/class dir of the current project\n        path.join(process.cwd(), \"templates\"),\n        // 2. in the templates/class dir of cli\n        qx.tool.utils.Utils.getTemplateDir()\n        // 3. @todo: in a package's templates dir\n      ];\n      let found = false;\n      for (let dir of potential_dirs) {\n        template_path = path.join(dir, \"class\", template_name + \".tmpl.js\");\n        if (await fs.existsAsync(template_path)) {\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        throw new qx.tool.utils.Utils.UserError(\n          `Template ${template_name} does not exist.`\n        );\n      }\n      let template = await fs.readFileAsync(template_path, \"utf-8\");\n\n      // handle header macro in the project root\n      let header_template;\n      let header_template_path = path.join(process.cwd(), \"header.js\");\n      try {\n        header_template = fs.readFileSync(header_template_path, \"utf-8\");\n      } catch (e) {\n        // if none exists, use header template in the same folder as the template itself\n        header_template_path = path.join(\n          path.dirname(template_path),\n          \"header.tmpl.js\"\n        );\n\n        try {\n          header_template = fs.readFileSync(header_template_path, \"utf-8\");\n        } catch (e) {}\n      }\n      if (header_template) {\n        // replace template vars in header\n        if (header_template_path.includes(\".tmpl.js\")) {\n          for (let var_name in values) {\n            header_template = header_template.replace(\n              new RegExp(`\\\\$\\{${var_name}\\}`, \"g\"),\n              values[var_name]\n            );\n          }\n        }\n        values.header = header_template;\n      }\n\n      // replace template vars\n      let final_content = template;\n      for (let var_name in values) {\n        final_content = final_content.replace(\n          new RegExp(`\\\\$\\{${var_name}\\}`, \"g\"),\n          values[var_name]\n        );\n      }\n      // check if file already exists\n      let relative_path =\n        path.join(\"source\", \"class\", ...class_namespaces) + \".js\";\n      let absolute_path = path.join(process.cwd(), relative_path);\n      let file_exists = false;\n      try {\n        fs.accessSync(absolute_path);\n        file_exists = true;\n      } catch (e) {}\n      if (file_exists && !argv.force) {\n        throw new qx.tool.utils.Utils.UserError(\n          `Class file ${relative_path} already exists. Use --force to overwrite it`\n        );\n      }\n\n      // write out new class file\n      try {\n        fs.mkdirSync(path.dirname(absolute_path), {\n          recursive: true,\n          mode: 0o755\n        });\n\n        await fs.writeFileAsync(absolute_path, final_content, \"utf-8\");\n      } catch (e) {\n        throw new qx.tool.utils.Utils.UserError(\n          `Cannot write to ${absolute_path}: ${e.message}`\n        );\n      }\n\n      // import\n      if (argv.import) {\n        let local_templates_path = path.join(\n          process.cwd(),\n          \"templates\",\n          \"class\"\n        );\n\n        let local_copy_path = path.join(\n          local_templates_path,\n          path.basename(template_path)\n        );\n\n        try {\n          fs.mkdirSync(path.dirname(local_templates_path), {\n            recursive: true,\n            mode: 0o755\n          });\n\n          await fs.writeFileAsync(local_copy_path, template, \"utf-8\");\n        } catch (e) {\n          throw new qx.tool.utils.Utils.UserError(\n            `Cannot copy template to ${local_templates_path}: ${e.message}`\n          );\n        }\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}