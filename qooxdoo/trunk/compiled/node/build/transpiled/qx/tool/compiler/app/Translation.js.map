{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "fs",
    "require",
    "promisify",
    "readFile",
    "log",
    "tool",
    "utils",
    "LogManager",
    "createLog",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "library",
    "locale",
    "setLibrary",
    "setLocale",
    "__translations",
    "__headers",
    "properties",
    "nullable",
    "check",
    "init",
    "writeLineNumbers",
    "members",
    "__mtime",
    "__onRead",
    "getPoFilename",
    "getLibrary",
    "getRootDir",
    "getTranslationPath",
    "getLocale",
    "checkRead",
    "read",
    "poFile",
    "stat",
    "files",
    "Utils",
    "safeStat",
    "mtime",
    "undefined",
    "t",
    "Promise",
    "resolve",
    "reject",
    "err",
    "code",
    "encoding",
    "then",
    "data",
    "entry",
    "lastKey",
    "saveEntry",
    "key",
    "msgctxt",
    "msgid",
    "set",
    "value",
    "append",
    "index",
    "m",
    "match",
    "replace",
    "parseInt",
    "split",
    "forEach",
    "line",
    "lineNo",
    "trim",
    "type",
    "comment",
    "comments",
    "translator",
    "extracted",
    "reference",
    "ref",
    "classname",
    "includes",
    "push",
    "flags",
    "previous",
    "tmp",
    "warn",
    "length",
    "substring",
    "error",
    "write",
    "writeTo",
    "filename",
    "cb",
    "lines",
    "refStr",
    "isWriteLineNumbers",
    "addStr",
    "join",
    "msgid_plural",
    "lang",
    "Type",
    "isArray",
    "msgstr",
    "Promisify",
    "writeFileAsync",
    "hasEntryValue",
    "id",
    "getEntry",
    "every",
    "Boolean",
    "deleteEntry",
    "getOrCreateEntry",
    "getEntries",
    "getHeaders",
    "compiler",
    "app",
    "Translation"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/tool/compiler/app/Translation.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo\n *\n *    Copyright:\n *      2011-2017 Zenesis Limited, http://www.zenesis.com\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *\n * *********************************************************************** */\n\nvar fs = require(\"fs\");\n\nconst { promisify } = require(\"util\");\nconst readFile = promisify(fs.readFile);\n\nvar log = qx.tool.utils.LogManager.createLog(\"translation\");\n\n/**\n * Reads and writes .po files for translation\n */\nqx.Class.define(\"qx.tool.compiler.app.Translation\", {\n  extend: qx.core.Object,\n\n  /**\n   * Constructor\n   * @param library {Library}\n   * @param locale {String}\n   */\n  construct(library, locale) {\n    super();\n    this.setLibrary(library);\n    if (locale) {\n      this.setLocale(locale);\n    }\n    this.__translations = {};\n    this.__headers = {};\n  },\n\n  properties: {\n    /** The library that this translation is for */\n    library: {\n      nullable: false,\n      check: \"qx.tool.compiler.app.Library\"\n    },\n\n    /** The locale */\n    locale: {\n      init: \"en\",\n      nullable: false,\n      check: \"String\"\n    },\n\n    /** Whether to write line numbers to .po files */\n    writeLineNumbers: {\n      init: false,\n      check: \"Boolean\"\n    }\n  },\n\n  members: {\n    __translations: null,\n    __headers: null,\n    __mtime: 0,\n    __onRead: null,\n\n    /**\n     * Filename for the .po file\n     * @returns {string}\n     */\n    getPoFilename() {\n      var library = this.getLibrary();\n      return (\n        library.getRootDir() +\n        \"/\" +\n        library.getTranslationPath() +\n        \"/\" +\n        this.getLocale() +\n        \".po\"\n      );\n    },\n\n    /**\n     * Reads the .po file, but only if it has not been loaded or has changed\n     *\n     * @returns {Promise}|\n     */\n    async checkRead() {\n      if (!this.__mtime) {\n        return this.read();\n      }\n      var poFile = this.getPoFilename();\n      let stat = await qx.tool.utils.files.Utils.safeStat(poFile);\n      if (stat && this.__mtime == stat.mtime) {\n        return undefined;\n      }\n      return this.read();\n    },\n\n    /**\n     * Reads the .po file\n     */\n    read() {\n      var t = this;\n      if (t.__onRead) {\n        return t.__onRead;\n      }\n\n      return (t.__onRead = new Promise((resolve, reject) => {\n        t.__translations = {};\n        t.__headers = {};\n        var poFile = this.getPoFilename();\n\n        fs.stat(poFile, function (err, stat) {\n          if (err) {\n            if (err.code == \"ENOENT\") {\n              resolve();\n              return undefined;\n            }\n            reject(err);\n            return undefined;\n          }\n          t.__mtime = stat.mtime;\n          return readFile(poFile, { encoding: \"utf8\" }).then(data => {\n            var entry = null;\n            var lastKey = null;\n\n            function saveEntry() {\n              if (entry) {\n                var key;\n                if (entry.msgctxt) {\n                  key = entry.msgctxt + \":\" + entry.msgid;\n                } else {\n                  key = entry.msgid;\n                }\n                t.__translations[key] = entry;\n              }\n              entry = null;\n              lastKey = null;\n            }\n\n            function set(key, value, append) {\n              var index = null;\n              var m = key.match(/^([^[]+)\\[([0-9]+)\\]$/);\n              value = value\n                .replace(/\\\\t/g, \"\\t\")\n                .replace(/\\\\r/g, \"\\r\")\n                .replace(/\\\\n/g, \"\\n\")\n                .replace(/\\\\\"/g, '\"');\n              if (m) {\n                key = m[1];\n                index = parseInt(m[2]);\n                if (entry[key] === undefined) {\n                  entry[key] = [];\n                }\n                if (!append || typeof entry[key][index] !== \"string\") {\n                  entry[key][index] = value;\n                } else {\n                  entry[key][index] += value;\n                }\n              } else if (!append || typeof entry[key] !== \"string\") {\n                entry[key] = value;\n              } else {\n                entry[key] += value;\n              }\n            }\n\n            data.split(\"\\n\").forEach(function (line, lineNo) {\n              line = line.trim();\n              if (!line) {\n                saveEntry();\n                return;\n              }\n\n              if (!entry) {\n                entry = {};\n              }\n\n              // Comment?\n              var m = line.match(/^#([^ ]?) (.*)$/);\n              if (m) {\n                var type = m[1];\n                var comment = m[2];\n                var key;\n                if (!entry.comments) {\n                  entry.comments = {};\n                }\n                switch (type) {\n                  case \"\":\n                    entry.comments.translator = comment;\n                    break;\n\n                  case \".\":\n                    entry.comments.extracted = comment;\n                    break;\n\n                  case \":\":\n                    if (!entry.comments.reference) {\n                      entry.comments.reference = {};\n                    }\n                    {\n                      const ref = entry.comments.reference;\n                      (\n                        (comment && comment.match(/[\\w/\\.]+:\\d+/g)) ||\n                        []\n                      ).forEach(entry => {\n                        const split = entry.split(\":\");\n                        const classname = split[0];\n                        const lineNo = parseInt(split[1], 10);\n                        if (!ref[classname]) {\n                          ref[classname] = [lineNo];\n                        } else if (!ref[classname].includes(lineNo)) {\n                          ref[classname].push(lineNo);\n                        }\n                      });\n                    }\n                    break;\n\n                  case \",\":\n                    entry.comments.flags = comment.split(\",\");\n                    break;\n\n                  case \"|\":\n                    m = comment.match(/^([^\\s]+)\\s+(.*)$/);\n                    if (m) {\n                      if (!entry.previous) {\n                        entry.previous = {};\n                      }\n                      var tmp = m[1];\n                      if (tmp == \"msgctxt\" || tmp == \"msgid\") {\n                        entry[tmp] = m[2];\n                      } else {\n                        log.warn(\"Cannot interpret line \" + (lineNo + 1));\n                      }\n                    } else {\n                      log.warn(\"Cannot interpret line \" + (lineNo + 1));\n                    }\n                    break;\n                }\n\n                return;\n              }\n\n              if (line[0] == '\"' && line[line.length - 1] == '\"') {\n                line = line.substring(1, line.length - 1);\n                if (\n                  !lastKey.match(/^.*\\[\\d+\\]$/) &&\n                  (lastKey === null || entry[lastKey] === undefined)\n                ) {\n                  log.error(\n                    \"Cannot interpret line because there is no key to append to, line \" +\n                      (lineNo + 1)\n                  );\n                } else {\n                  set(lastKey, line, true);\n                }\n                return;\n              }\n\n              // Part of the translation\n              if (line == \"#\") {\n                return;\n              }\n              m = line.match(/^([^\\s]+)\\s+(.*)$/);\n              if (!m) {\n                log.warn(\"Cannot interpret line \" + (lineNo + 1));\n                return;\n              }\n\n              key = lastKey = m[1];\n              var value = m[2];\n              if (\n                value.length >= 2 &&\n                value[0] == '\"' &&\n                value[value.length - 1] == '\"'\n              ) {\n                value = value.substring(1, value.length - 1);\n                set(key, value);\n              }\n            });\n\n            if (entry) {\n              saveEntry();\n            }\n\n            resolve();\n          });\n        });\n      }));\n    },\n\n    /**\n     * Writes the .po file\n     */\n    async write() {\n      this.writeTo(this.getPoFilename());\n    },\n\n    /**\n     * Writes the .po file to a specific filename\n     * @param filename {String}\n     */\n    writeTo(filename, cb) {\n      var t = this;\n      var lines = [];\n\n      function write(key, value) {\n        if (value === undefined || value === null) {\n          return;\n        }\n        value = value\n          .replace(/\\t/g, \"\\\\t\")\n          .replace(/\\r/g, \"\\\\r\")\n          .replace(/\\n/g, \"\\\\n\")\n          .replace(/\"/g, '\\\\\"');\n        lines.push(key + ' \"' + value + '\"');\n      }\n\n      for (var msgid in t.__translations) {\n        var entry = t.__translations[msgid];\n        if (entry.comments) {\n          if (entry.comments.translator) {\n            lines.push(\"# \" + entry.comments.translator);\n          }\n          if (entry.comments.extracted) {\n            lines.push(\"#. \" + entry.comments.extracted);\n          }\n          if (entry.comments.reference) {\n            let refStr = \"#:\";\n            const ref = entry.comments.reference;\n            for (let classname in ref) {\n              if (ref[classname]) {\n                if (this.isWriteLineNumbers()) {\n                  for (let lineNo of ref[classname]) {\n                    const addStr = \" \" + classname + \":\" + lineNo;\n                    if (refStr.length + addStr.length > 78) {\n                      // 78 is default length in python po library\n                      // line break\n                      lines.push(refStr);\n                      refStr = \"#:\" + addStr;\n                    } else {\n                      refStr += addStr;\n                    }\n                  }\n                } else {\n                  const addStr = \" \" + classname;\n                  if (refStr.length + addStr.length > 78) {\n                    // 78 is default length in python po library\n                    // line break\n                    lines.push(refStr);\n                    refStr = \"#:\" + addStr;\n                  } else {\n                    refStr += addStr;\n                  }\n                }\n              }\n            }\n            if (refStr.length > 3) {\n              // write remaining refStr\n              lines.push(refStr);\n            }\n          }\n          if (entry.comments.flags) {\n            lines.push(\"#, \" + entry.comments.flags.join(\",\"));\n          }\n        } else {\n          lines.push(\"#\");\n        }\n        if (entry.msgctxt) {\n          lines.push('msgctxt \"' + entry.msgctxt + '\"');\n        }\n        write(\"msgid\", entry.msgid);\n        write(\"msgid_plural\", entry.msgid_plural);\n        if (qx.lang.Type.isArray(entry.msgstr)) {\n          entry.msgstr.forEach(function (value, index) {\n            write(\"msgstr[\" + index + \"]\", value);\n          });\n        } else if (entry.msgid_plural) {\n          write(\"msgstr[0]\", \"\");\n          write(\"msgstr[1]\", \"\");\n        } else {\n          write(\"msgstr\", entry.msgstr || \"\");\n        }\n        lines.push(\"\");\n      }\n      var data = lines.join(\"\\n\");\n      return qx.tool.utils.Promisify.fs.writeFileAsync(filename, data, {\n        encoding: \"utf8\"\n      });\n    },\n\n    /**\n     * Tests whether an entry exists and has translation values\n     *\n     * @param id {String} msgid\n     * @return {Boolean}\n     */\n    hasEntryValue(id) {\n      let entry = this.getEntry(id);\n      if (!entry) {\n        return false;\n      }\n      if (qx.lang.Type.isArray(entry.msgstr)) {\n        return entry.msgstr.every(value => Boolean(value));\n      }\n      return Boolean(entry.msgstr);\n    },\n\n    /**\n     * Returns the entry with the given msgid, null if it does not exist\n     * @param id\n     * @returns {*|null}\n     */\n    getEntry(id) {\n      return this.__translations[id] || null;\n    },\n\n    /**\n     * Deletes the entry with the given msgid; return the deleted value, or null if it does not exist\n     * @param id\n     * @returns {*|null}\n     */\n    deleteEntry(id) {\n      let entry = this.__translations[id] || null;\n      delete this.__translations[id];\n      return entry;\n    },\n\n    /**\n     * Returns the entry with the given msgid, creating it if it does not exist\n     * @param id\n     * @returns {*|null}\n     */\n    getOrCreateEntry(id) {\n      var t = this;\n      var entry = t.__translations[id];\n      if (!entry) {\n        entry = t.__translations[id] = {\n          msgid: id\n        };\n      }\n      return entry;\n    },\n\n    /**\n     * Returns all entries\n     * @returns {null}\n     */\n    getEntries() {\n      return this.__translations;\n    },\n\n    /**\n     * Returns the translation headers\n     * @returns {null}\n     */\n    getHeaders() {\n      return this.__headers;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}