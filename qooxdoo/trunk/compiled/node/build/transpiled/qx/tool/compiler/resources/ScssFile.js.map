{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "fs",
    "tool",
    "utils",
    "Promisify",
    "path",
    "require",
    "sass",
    "loadSass",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "target",
    "library",
    "filename",
    "__library",
    "__filename",
    "__target",
    "__sourceFiles",
    "__importAs",
    "properties",
    "file",
    "nullable",
    "check",
    "event",
    "themeFile",
    "init",
    "members",
    "__outputDir",
    "__absLocations",
    "compile",
    "outputFilename",
    "dirname",
    "inputFileData",
    "loadSource",
    "Promise",
    "resolve",
    "reject",
    "render",
    "data",
    "outputStyle",
    "sourceMap",
    "outFile",
    "basename",
    "importer",
    "url",
    "prev",
    "done",
    "contents",
    "tmp",
    "functions",
    "$filename",
    "$url",
    "__qooxdooUrlImpl",
    "error",
    "result",
    "compiler",
    "Console",
    "status",
    "line",
    "column",
    "message",
    "writeFileAsync",
    "css",
    "toString",
    "then",
    "map",
    "catch",
    "keys",
    "_analyseFilename",
    "currentFilename",
    "m",
    "match",
    "namespace",
    "externalUrl",
    "dir",
    "getAnalyser",
    "getLibraries",
    "find",
    "startsWith",
    "getRootDir",
    "libResourceDir",
    "join",
    "isThemeFile",
    "getThemePath",
    "getResourcePath",
    "getNamespace",
    "relative",
    "reloadSource",
    "process",
    "cwd",
    "getThemeFilename",
    "getResourceFilename",
    "absFilename",
    "extname",
    "exists",
    "existsSync",
    "name",
    "undefined",
    "readFileAsync",
    "promises",
    "replace",
    "p1",
    "offset",
    "pathInfo",
    "newLibrary",
    "findLibrary",
    "push",
    "c",
    "substring",
    "length",
    "targetFile",
    "getOutputDir",
    "all",
    "getSourceFilenames",
    "getValue",
    "types",
    "String",
    "resources",
    "ScssFile"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/tool/compiler/resources/ScssFile.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo\n *\n *    Copyright:\n *      2011-2019 Zenesis Limited, http://www.zenesis.com\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *\n * *********************************************************************** */\n/* eslint-disable @qooxdoo/qx/no-illegal-private-usage */\n\nconst fs = qx.tool.utils.Promisify.fs;\nconst path = require(\"upath\");\n/**\n * @external(qx/tool/loadsass.js)\n * @ignore(loadSass)\n */\n/* global loadSass */\nconst sass = loadSass();\n\n/**\n * @ignore(process)\n */\nqx.Class.define(\"qx.tool.compiler.resources.ScssFile\", {\n  extend: qx.core.Object,\n\n  construct(target, library, filename) {\n    super();\n    this.__library = library;\n    this.__filename = filename;\n    this.__target = target;\n    this.__sourceFiles = {};\n    this.__importAs = {};\n  },\n\n  properties: {\n    file: {\n      nullable: false,\n      check: \"String\",\n      event: \"changeFile\"\n    },\n\n    themeFile: {\n      init: false,\n      check: \"Boolean\"\n    }\n  },\n\n  members: {\n    __library: null,\n    __filename: null,\n    __outputDir: null,\n    __absLocations: null,\n    __sourceFiles: null,\n    __importAs: null,\n\n    /**\n     * Compiles the SCSS, returns a list of files that were imported)\n     *\n     * @param outputFilename {String} output\n     * @return {String[]} dependent files\n     */\n    async compile(outputFilename) {\n      this.__outputDir = path.dirname(outputFilename);\n      this.__absLocations = {};\n\n      let inputFileData = await this.loadSource(\n        this.__filename,\n        this.__library\n      );\n\n      await new qx.Promise((resolve, reject) => {\n        sass.render(\n          {\n            // Always have file so that the source map knows the name of the original\n            file: this.__filename,\n\n            // data provides the contents, `file` is only used for the sourcemap filename\n            data: inputFileData,\n\n            outputStyle: \"compressed\",\n            sourceMap: true,\n            outFile: path.basename(outputFilename),\n\n            /*\n             * Importer\n             */\n            importer: (url, prev, done) => {\n              let contents = this.__sourceFiles[url];\n              if (!contents) {\n                let tmp = this.__importAs[url];\n                if (tmp) {\n                  contents = this.__sourceFiles[tmp];\n                }\n              }\n              return contents ? { contents } : null;\n            },\n\n            functions: {\n              \"qooxdooUrl($filename, $url)\": ($filename, $url, done) =>\n                this.__qooxdooUrlImpl($filename, $url, done)\n            }\n          },\n\n          (error, result) => {\n            if (error) {\n              qx.tool.compiler.Console.error(\n                \"Error status \" +\n                  error.status +\n                  \" in \" +\n                  this.__filename +\n                  \"[\" +\n                  error.line +\n                  \",\" +\n                  error.column +\n                  \"]: \" +\n                  error.message\n              );\n\n              resolve(error); // NOT reject\n              return;\n            }\n\n            fs.writeFileAsync(outputFilename, result.css.toString(), \"utf8\")\n              .then(() =>\n                fs.writeFileAsync(\n                  outputFilename + \".map\",\n                  result.map.toString(),\n                  \"utf8\"\n                )\n              )\n              .then(() => resolve(null))\n              .catch(reject);\n          }\n        );\n      });\n\n      return Object.keys(this.__sourceFiles);\n    },\n\n    _analyseFilename(url, currentFilename) {\n      var m = url.match(/^([a-z0-9_.]+):(\\/?[^\\/].*)/);\n      if (m) {\n        return {\n          namespace: m[1],\n          filename: m[2],\n          externalUrl: null\n        };\n      }\n\n      // It's a real URL like http://abc.com/..\n      if (url.match(/^[a-z0-9_]+:\\/\\//)) {\n        return {\n          externalUrl: url\n        };\n      }\n\n      // It's either absolute to the website (i.e. begins with a slash) or it's\n      //  relative to the current file\n      if (url[0] == \"/\") {\n        return {\n          namespace: null,\n          filename: url\n        };\n      }\n\n      // Must be relative to current file\n      let dir = path.dirname(currentFilename);\n      let filename = path.resolve(dir, url);\n      let library = this.__target\n        .getAnalyser()\n        .getLibraries()\n        .find(library =>\n          filename.startsWith(path.resolve(library.getRootDir()))\n        );\n\n      if (!library) {\n        qx.tool.compiler.Console.error(\n          \"Cannot find library for \" + url + \" in \" + currentFilename\n        );\n\n        return null;\n      }\n\n      let libResourceDir = path.join(\n        library.getRootDir(),\n        this.isThemeFile() ? library.getThemePath() : library.getResourcePath()\n      );\n\n      return {\n        namespace: library.getNamespace(),\n        filename: path.relative(libResourceDir, filename),\n        externalUrl: null\n      };\n    },\n\n    reloadSource(filename) {\n      filename = path.resolve(filename);\n      delete this.__sourceFiles[filename];\n      return this.loadSource(filename);\n    },\n\n    async loadSource(filename, library) {\n      filename = path.relative(\n        process.cwd(),\n        path.resolve(\n          this.isThemeFile()\n            ? library.getThemeFilename(filename)\n            : library.getResourceFilename(filename)\n        )\n      );\n\n      let absFilename = filename;\n      if (path.extname(absFilename) == \"\") {\n        absFilename += \".scss\";\n      }\n\n      let exists = fs.existsSync(absFilename);\n      if (!exists) {\n        let name = path.basename(absFilename);\n        if (name[0] != \"_\") {\n          let tmp = path.join(path.dirname(absFilename), \"_\" + name);\n          exists = fs.existsSync(tmp);\n          if (exists) {\n            absFilename = tmp;\n          }\n        }\n      }\n      if (!exists) {\n        this.__sourceFiles[absFilename] = null;\n        return null;\n      }\n\n      if (this.__sourceFiles[absFilename] !== undefined) {\n        return qx.Promise.resolve(this.__sourceFiles[absFilename]);\n      }\n\n      let contents = await fs.readFileAsync(absFilename, \"utf8\");\n      let promises = [];\n      contents = contents.replace(\n        /@import\\s+[\"']([^;]+)[\"']/gi,\n        (match, p1, offset) => {\n          let pathInfo = this._analyseFilename(p1, absFilename);\n          if (pathInfo.externalUrl) {\n            return '@import \"' + pathInfo.externalUrl + '\"';\n          }\n          let newLibrary = this.__target\n            .getAnalyser()\n            .findLibrary(pathInfo.namespace);\n          if (!newLibrary) {\n            qx.tool.compiler.Console.error(\n              \"Cannot find file to import, url=\" +\n                p1 +\n                \" in file \" +\n                absFilename\n            );\n\n            return null;\n          }\n          promises.push(this.loadSource(pathInfo.filename, newLibrary));\n          let filename = this.isThemeFile()\n            ? newLibrary.getThemeFilename(pathInfo.filename)\n            : newLibrary.getResourceFilename(pathInfo.filename);\n          return '@import \"' + path.relative(process.cwd(), filename) + '\"';\n        }\n      );\n\n      contents = contents.replace(\n        /\\burl\\s*\\(\\s*([^\\)]+)*\\)/gi,\n        (match, url) => {\n          let c = url[0];\n          if (c === \"'\" || c === '\"') {\n            url = url.substring(1);\n          }\n          c = url[url.length - 1];\n          if (c === \"'\" || c === '\"') {\n            url = url.substring(0, url.length - 1);\n          }\n          //return `qooxdooUrl(\"${filename}\", \"${url}\")`;\n          let pathInfo = this._analyseFilename(url, filename);\n\n          if (pathInfo) {\n            if (pathInfo.externalUrl) {\n              return `url(\"${pathInfo.externalUrl}\")`;\n            }\n\n            if (pathInfo.namespace) {\n              let targetFile = path.relative(\n                process.cwd(),\n                path.join(\n                  this.__target.getOutputDir(),\n                  \"resource\",\n                  pathInfo.filename\n                )\n              );\n\n              let relative = path.relative(this.__outputDir, targetFile);\n              return `url(\"${relative}\")`;\n            }\n          }\n\n          return `url(\"${url}\")`;\n        }\n      );\n\n      this.__sourceFiles[absFilename] = contents;\n      this.__importAs[filename] = absFilename;\n\n      await qx.Promise.all(promises);\n      return contents;\n    },\n\n    getSourceFilenames() {\n      return Object.keys(this.__sourceFiles);\n    },\n\n    __qooxdooUrlImpl($filename, $url, done) {\n      let currentFilename = $filename.getValue();\n      let url = $url.getValue();\n\n      let pathInfo = this._analyseFilename(url, currentFilename);\n\n      if (pathInfo) {\n        if (pathInfo.externalUrl) {\n          return sass.types.String(\"url(\" + pathInfo.externalUrl + \")\");\n        }\n\n        if (pathInfo.namespace) {\n          let targetFile = path.relative(\n            process.cwd(),\n            path.join(\n              this.__target.getOutputDir(),\n              \"resource\",\n              pathInfo.filename\n            )\n          );\n\n          let relative = path.relative(this.__outputDir, targetFile);\n          return sass.types.String(\"url(\" + relative + \")\");\n        }\n      }\n\n      return sass.types.String(\"url(\" + url + \")\");\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}