{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "literals",
    "tool",
    "utils",
    "json",
    "Tokenizer",
    "tokenTypes",
    "STRING",
    "NUMBER",
    "TRUE",
    "FALSE",
    "NULL",
    "objectStates",
    "_START_",
    "OPEN_OBJECT",
    "PROPERTY",
    "COMMA",
    "propertyStates",
    "KEY",
    "COLON",
    "arrayStates",
    "OPEN_ARRAY",
    "VALUE",
    "defaultSettings",
    "verbose",
    "source",
    "location",
    "startLine",
    "startColumn",
    "startOffset",
    "endLine",
    "endColumn",
    "endOffset",
    "start",
    "line",
    "column",
    "offset",
    "end",
    "comment",
    "value",
    "name",
    "token",
    "comments",
    "undefined",
    "valueComments",
    "forEach",
    "push",
    "loc",
    "parseObject",
    "input",
    "tokenizer",
    "settings",
    "Parser",
    "startToken",
    "object",
    "type",
    "children",
    "state",
    "hasMore",
    "LEFT_BRACE",
    "tokenIndex",
    "next",
    "RIGHT_BRACE",
    "endToken",
    "property",
    "parseProperty",
    "length",
    "error",
    "unexpectedToken",
    "substring",
    "unexpectedEnd",
    "key",
    "colonToken",
    "parseValue",
    "parseArray",
    "array",
    "LEFT_BRACKET",
    "RIGHT_BRACKET",
    "parseLiteral",
    "isLiteral",
    "indexOf",
    "replace",
    "literal",
    "rawValue",
    "arguments",
    "parseToAst",
    "Object",
    "assign",
    "tokenize",
    "result",
    "parse",
    "message",
    "showCodeFragment",
    "linePosition",
    "columnPosition",
    "lines",
    "split",
    "marker",
    "Array",
    "join",
    "ParseError",
    "SyntaxError",
    "constructor",
    "fullMessage",
    "rawMessage"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/tool/utils/json/Parser.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo\n *\n *    Copyright:\n *      2011-2019 Zenesis Limited, http://www.zenesis.com\n *      Vlad Trushin <monospectr@mail.ru> (https://github.com/vtrushin)\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *      * Vlad Trushin (monospectr@mail.ru, @vtrushin)\n *\n * *********************************************************************** */\n\n/**\n * Parser, based on json-to-ast by Vlad trushin\n */\n\nqx.Class.define(\"qx.tool.utils.json.Parser\", {\n  statics: {\n    literals: [\n      qx.tool.utils.json.Tokenizer.tokenTypes.STRING,\n      qx.tool.utils.json.Tokenizer.tokenTypes.NUMBER,\n      qx.tool.utils.json.Tokenizer.tokenTypes.TRUE,\n      qx.tool.utils.json.Tokenizer.tokenTypes.FALSE,\n      qx.tool.utils.json.Tokenizer.tokenTypes.NULL\n    ],\n\n    objectStates: {\n      _START_: 0,\n      OPEN_OBJECT: 1,\n      PROPERTY: 2,\n      COMMA: 3\n    },\n\n    propertyStates: {\n      _START_: 0,\n      KEY: 1,\n      COLON: 2\n    },\n\n    arrayStates: {\n      _START_: 0,\n      OPEN_ARRAY: 1,\n      VALUE: 2,\n      COMMA: 3\n    },\n\n    defaultSettings: {\n      verbose: true,\n      source: null\n    },\n\n    location(\n      startLine,\n      startColumn,\n      startOffset,\n      endLine,\n      endColumn,\n      endOffset,\n      source\n    ) {\n      return {\n        start: {\n          line: startLine,\n          column: startColumn,\n          offset: startOffset\n        },\n\n        end: {\n          line: endLine,\n          column: endColumn,\n          offset: endOffset\n        },\n\n        source: source || null\n      };\n    },\n\n    comment(value, name, token) {\n      if (token.comments !== undefined) {\n        var valueComments = value[name];\n        if (valueComments === undefined) {\n          valueComments = value[name] = [];\n        }\n        token.comments.forEach(function (comment) {\n          valueComments.push({\n            loc: comment.loc,\n            source: comment.value\n          });\n        });\n      }\n    },\n\n    parseObject(input, tokenizer, settings) {\n      const { objectStates } = qx.tool.utils.json.Parser;\n      const tokenTypes = qx.tool.utils.json.Tokenizer.tokenTypes;\n\n      // object: LEFT_BRACE (property (COMMA property)*)? RIGHT_BRACE\n      let startToken;\n      let object = {\n        type: \"object\",\n        children: []\n      };\n\n      let state = objectStates._START_;\n\n      while (tokenizer.hasMore()) {\n        const token = tokenizer.token();\n\n        switch (state) {\n          case objectStates._START_: {\n            if (token.type === tokenTypes.LEFT_BRACE) {\n              startToken = token;\n              state = objectStates.OPEN_OBJECT;\n              if (settings.verbose) {\n                object.startToken = tokenizer.tokenIndex;\n                qx.tool.utils.json.Parser.comment(\n                  object,\n                  \"leadingComments\",\n                  token\n                );\n              }\n              tokenizer.next();\n            } else {\n              return null;\n            }\n            break;\n          }\n\n          case objectStates.OPEN_OBJECT: {\n            if (token.type === tokenTypes.RIGHT_BRACE) {\n              if (settings.verbose) {\n                object.loc = qx.tool.utils.json.Parser.location(\n                  startToken.loc.start.line,\n                  startToken.loc.start.column,\n                  startToken.loc.start.offset,\n                  token.loc.end.line,\n                  token.loc.end.column,\n                  token.loc.end.offset,\n                  settings.source\n                );\n\n                object.endToken = tokenizer.tokenIndex;\n                qx.tool.utils.json.Parser.comment(\n                  object,\n                  \"trailingComments\",\n                  token\n                );\n              }\n              tokenizer.next();\n              return {\n                value: object\n              };\n            }\n            const property = qx.tool.utils.json.Parser.parseProperty(\n              input,\n              tokenizer,\n              settings\n            );\n\n            object.children.push(property.value);\n            state = objectStates.PROPERTY;\n\n            break;\n          }\n\n          case objectStates.PROPERTY: {\n            if (token.type === tokenTypes.RIGHT_BRACE) {\n              if (settings.verbose) {\n                object.loc = qx.tool.utils.json.Parser.location(\n                  startToken.loc.start.line,\n                  startToken.loc.start.column,\n                  startToken.loc.start.offset,\n                  token.loc.end.line,\n                  token.loc.end.column,\n                  token.loc.end.offset,\n                  settings.source\n                );\n\n                object.endToken = tokenizer.tokenIndex;\n                qx.tool.utils.json.Parser.comment(\n                  object,\n                  \"trailingComments\",\n                  token\n                );\n              }\n              tokenizer.next();\n              return {\n                value: object\n              };\n            } else if (token.type === tokenTypes.COMMA) {\n              qx.tool.utils.json.Parser.comment(\n                object.children[object.children.length - 1],\n                \"trailingComments\",\n                token\n              );\n\n              state = objectStates.COMMA;\n              tokenizer.next();\n            } else {\n              qx.tool.utils.json.Parser.error(\n                qx.tool.utils.json.Parser.unexpectedToken(\n                  input.substring(token.loc.start.offset, token.loc.end.offset),\n                  token.loc.start.line,\n                  token.loc.start.column\n                ),\n\n                input,\n                token.loc.start.line,\n                token.loc.start.column\n              );\n            }\n            break;\n          }\n\n          case objectStates.COMMA: {\n            const property = qx.tool.utils.json.Parser.parseProperty(\n              input,\n              tokenizer,\n              settings\n            );\n\n            if (property) {\n              object.children.push(property.value);\n              state = objectStates.PROPERTY;\n            } else {\n              qx.tool.utils.json.Parser.error(\n                qx.tool.utils.json.Parser.unexpectedToken(\n                  input.substring(token.loc.start.offset, token.loc.end.offset),\n                  token.loc.start.line,\n                  token.loc.start.column\n                ),\n\n                input,\n                token.loc.start.line,\n                token.loc.start.column\n              );\n            }\n            break;\n          }\n        }\n      }\n\n      qx.tool.utils.json.Parser.error(\n        qx.tool.utils.json.Parser.unexpectedEnd()\n      );\n\n      return null;\n    },\n\n    parseProperty(input, tokenizer, settings) {\n      const { objectStates, propertyStates } = qx.tool.utils.json.Parser;\n      const tokenTypes = qx.tool.utils.json.Tokenizer.tokenTypes;\n\n      // property: STRING COLON value\n      let startToken;\n      let property = {\n        type: \"property\",\n        key: null,\n        value: null\n      };\n\n      let state = objectStates._START_;\n\n      while (tokenizer.hasMore()) {\n        const token = tokenizer.token();\n\n        switch (state) {\n          case propertyStates._START_: {\n            if (token.type === tokenTypes.STRING) {\n              const key = {\n                type: \"identifier\",\n                value: token.value\n              };\n\n              if (settings.verbose) {\n                key.loc = token.loc;\n                property.startToken =\n                  key.startToken =\n                  key.endToken =\n                    tokenizer.tokenIndex;\n                qx.tool.utils.json.Parser.comment(\n                  key,\n                  \"leadingComments\",\n                  token\n                );\n              }\n              startToken = token;\n              property.key = key;\n              state = propertyStates.KEY;\n              tokenizer.next();\n            } else {\n              return null;\n            }\n            break;\n          }\n\n          case propertyStates.KEY: {\n            if (token.type === tokenTypes.COLON) {\n              if (settings.verbose) {\n                qx.tool.utils.json.Parser.comment(\n                  property.key,\n                  \"trailingComments\",\n                  token\n                );\n\n                property.colonToken = token;\n              }\n              state = propertyStates.COLON;\n              tokenizer.next();\n            } else {\n              qx.tool.utils.json.Parser.error(\n                qx.tool.utils.json.Parser.unexpectedToken(\n                  input.substring(token.loc.start.offset, token.loc.end.offset),\n                  token.loc.start.line,\n                  token.loc.start.column\n                ),\n\n                input,\n                token.loc.start.line,\n                token.loc.start.column\n              );\n            }\n            break;\n          }\n\n          case propertyStates.COLON: {\n            const value = qx.tool.utils.json.Parser.parseValue(\n              input,\n              tokenizer,\n              settings\n            );\n\n            property.value = value.value;\n            if (settings.verbose) {\n              property.endToken = value.value.endToken;\n              property.loc = qx.tool.utils.json.Parser.location(\n                startToken.loc.start.line,\n                startToken.loc.start.column,\n                startToken.loc.start.offset,\n                value.value.loc.end.line,\n                value.value.loc.end.column,\n                value.value.loc.end.offset,\n                settings.source\n              );\n            }\n            return {\n              value: property\n            };\n          }\n        }\n      }\n\n      return null;\n    },\n\n    parseArray(input, tokenizer, settings) {\n      const { arrayStates } = qx.tool.utils.json.Parser;\n      const tokenTypes = qx.tool.utils.json.Tokenizer.tokenTypes;\n\n      // array: LEFT_BRACKET (value (COMMA value)*)? RIGHT_BRACKET\n      let startToken;\n      let array = {\n        type: \"array\",\n        children: []\n      };\n\n      let state = arrayStates._START_;\n      let token;\n\n      while (tokenizer.hasMore()) {\n        token = tokenizer.token();\n\n        switch (state) {\n          case arrayStates._START_: {\n            if (token.type === tokenTypes.LEFT_BRACKET) {\n              startToken = token;\n              if (settings.verbose) {\n                array.startToken = tokenizer.tokenIndex;\n                qx.tool.utils.json.Parser.comment(\n                  array,\n                  \"leadingComments\",\n                  token\n                );\n              }\n              state = arrayStates.OPEN_ARRAY;\n              tokenizer.next();\n            } else {\n              return null;\n            }\n            break;\n          }\n\n          case arrayStates.OPEN_ARRAY: {\n            if (token.type === tokenTypes.RIGHT_BRACKET) {\n              if (settings.verbose) {\n                array.loc = qx.tool.utils.json.Parser.location(\n                  startToken.loc.start.line,\n                  startToken.loc.start.column,\n                  startToken.loc.start.offset,\n                  token.loc.end.line,\n                  token.loc.end.column,\n                  token.loc.end.offset,\n                  settings.source\n                );\n\n                array.endToken = tokenizer.tokenIndex;\n                qx.tool.utils.json.Parser.comment(\n                  array,\n                  \"trailingComments\",\n                  token\n                );\n              }\n              tokenizer.next();\n              return {\n                value: array\n              };\n            }\n            let value = qx.tool.utils.json.Parser.parseValue(\n              input,\n              tokenizer,\n              settings\n            );\n\n            array.children.push(value.value);\n            state = arrayStates.VALUE;\n\n            break;\n          }\n\n          case arrayStates.VALUE: {\n            if (token.type === tokenTypes.RIGHT_BRACKET) {\n              if (settings.verbose) {\n                array.loc = qx.tool.utils.json.Parser.location(\n                  startToken.loc.start.line,\n                  startToken.loc.start.column,\n                  startToken.loc.start.offset,\n                  token.loc.end.line,\n                  token.loc.end.column,\n                  token.loc.end.offset,\n                  settings.source\n                );\n\n                array.endToken = tokenizer.tokenIndex;\n                qx.tool.utils.json.Parser.comment(\n                  array,\n                  \"trailingComments\",\n                  token\n                );\n              }\n              tokenizer.next();\n              return {\n                value: array\n              };\n            } else if (token.type === tokenTypes.COMMA) {\n              state = arrayStates.COMMA;\n              tokenizer.next();\n            } else {\n              qx.tool.utils.json.Parser.error(\n                qx.tool.utils.json.Parser.unexpectedToken(\n                  input.substring(token.loc.start.offset, token.loc.end.offset),\n                  token.loc.start.line,\n                  token.loc.start.column\n                ),\n\n                input,\n                token.loc.start.line,\n                token.loc.start.column\n              );\n            }\n            break;\n          }\n\n          case arrayStates.COMMA: {\n            let value = qx.tool.utils.json.Parser.parseValue(\n              input,\n              tokenizer,\n              settings\n            );\n\n            array.children.push(value.value);\n            state = arrayStates.VALUE;\n            break;\n          }\n        }\n      }\n\n      qx.tool.utils.json.Parser.error(\n        qx.tool.utils.json.Parser.unexpectedEnd()\n      );\n\n      return null;\n    },\n\n    parseLiteral(input, tokenizer, settings) {\n      // literal: STRING | NUMBER | TRUE | FALSE | NULL\n      const token = tokenizer.token();\n\n      const isLiteral =\n        qx.tool.utils.json.Parser.literals.indexOf(token.type) !== -1;\n\n      if (isLiteral) {\n        let value = token.value;\n        if (token.type == qx.tool.utils.json.Tokenizer.tokenTypes.STRING) {\n          value = value.replace(/\\\\(.)/g, \"$1\");\n        }\n        const literal = {\n          type: \"literal\",\n          value: value,\n          rawValue: input.substring(\n            token.loc.start.offset,\n            token.loc.end.offset\n          )\n        };\n\n        if (settings.verbose) {\n          literal.loc = token.loc;\n          literal.startToken = literal.endToken = tokenizer.tokenIndex;\n          qx.tool.utils.json.Parser.comment(literal, \"leadingComments\", token);\n        }\n        tokenizer.next();\n        return {\n          value: literal\n        };\n      }\n\n      return null;\n    },\n\n    parseValue(input, tokenizer, settings) {\n      // value: literal | object | array\n      const token = tokenizer.token();\n\n      const value =\n        qx.tool.utils.json.Parser.parseLiteral(...arguments) ||\n        qx.tool.utils.json.Parser.parseObject(...arguments) ||\n        qx.tool.utils.json.Parser.parseArray(...arguments);\n\n      if (value) {\n        return value;\n      }\n      qx.tool.utils.json.Parser.error(\n        qx.tool.utils.json.Parser.unexpectedToken(\n          input.substring(token.loc.start.offset, token.loc.end.offset),\n          token.loc.start.line,\n          token.loc.start.column\n        ),\n\n        input,\n        token.loc.start.line,\n        token.loc.start.column\n      );\n\n      return null;\n    },\n\n    parseToAst(input, settings) {\n      settings = Object.assign(\n        {},\n        qx.tool.utils.json.Parser.defaultSettings,\n        settings\n      );\n\n      const tokenizer = new qx.tool.utils.json.Tokenizer(input, settings);\n      tokenizer.tokenize();\n\n      if (!tokenizer.hasMore()) {\n        qx.tool.utils.json.Parser.error(\n          qx.tool.utils.json.Parser.unexpectedEnd()\n        );\n      }\n\n      const value = qx.tool.utils.json.Parser.parseValue(\n        input,\n        tokenizer,\n        settings\n      );\n\n      if (!tokenizer.hasMore()) {\n        var result = value.value;\n        if (settings.verbose) {\n          result.tokenizer = tokenizer;\n        }\n        return result;\n      }\n      const token = tokenizer.next();\n      qx.tool.utils.json.Parser.error(\n        qx.tool.utils.json.Parser.unexpectedToken(\n          input.substring(token.loc.start.offset, token.loc.end.offset),\n          token.loc.start.line,\n          token.loc.start.column\n        ),\n\n        input,\n        token.loc.start.line,\n        token.loc.start.column\n      );\n\n      return null;\n    },\n\n    parse(input, settings) {\n      return qx.tool.utils.json.Parser.parseToAst(input, settings);\n    },\n\n    unexpectedEnd() {\n      return \"Unexpected end of JSON input\";\n    },\n\n    unexpectedToken(token, line, column) {\n      return `Unexpected token <${token}> at ${line}:${column}`;\n    },\n\n    error(message, source, line, column) {\n      function showCodeFragment(source, linePosition, columnPosition) {\n        const lines = source.split(/\\n|\\r\\n?|\\f/);\n        const line = lines[linePosition - 1];\n        const marker = new Array(columnPosition).join(\" \") + \"^\";\n\n        return line + \"\\n\" + marker;\n      }\n\n      class ParseError extends SyntaxError {\n        constructor(message, source, linePosition, columnPosition) {\n          const fullMessage = linePosition\n            ? message +\n              \"\\n\" +\n              showCodeFragment(source, linePosition, columnPosition)\n            : message;\n          super(fullMessage);\n          this.rawMessage = message;\n        }\n      }\n\n      throw new ParseError(message, source, line, column);\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}