{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "fs",
    "require",
    "async",
    "hash",
    "promisify",
    "readFile",
    "writeFile",
    "log",
    "tool",
    "utils",
    "LogManager",
    "createLog",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "dbFilename",
    "__dbFilename",
    "__libraries",
    "__librariesByNamespace",
    "__initialClassesToScan",
    "IndexedArray",
    "__cldrs",
    "__translations",
    "__classFiles",
    "__environmentChecks",
    "properties",
    "outputDir",
    "nullable",
    "check",
    "applicationTypes",
    "init",
    "trackLineNumbers",
    "processResources",
    "addCreatedAt",
    "environment",
    "apply",
    "babelConfig",
    "ignores",
    "globalSymbols",
    "manglePrivates",
    "writePoLineNumbers",
    "events",
    "compilingClass",
    "compiledClass",
    "alreadyCompiledClass",
    "saveDatabase",
    "members",
    "__opened",
    "__resManager",
    "__db",
    "__classes",
    "__inDefer",
    "__qooxdooVersion",
    "__environmentHash",
    "open",
    "p",
    "resManager",
    "isProcessResources",
    "compiler",
    "resources",
    "Manager",
    "Promise",
    "all",
    "loadDatabase",
    "resolve",
    "initialScan",
    "cb",
    "t",
    "debug",
    "parallel",
    "findAllResources",
    "then",
    "catch",
    "each",
    "library",
    "scanForClasses",
    "err",
    "getNamespace",
    "Json",
    "loadJsonAsync",
    "getDbFilename",
    "resetDatabase",
    "dispose",
    "fireDataEventAsync",
    "saveJsonAsync",
    "getDatabase",
    "analyseClasses",
    "db",
    "metaWrittenLog",
    "compiledClasses",
    "metaFixupDescendants",
    "listenerId",
    "addListener",
    "evt",
    "data",
    "getData",
    "oldDbClassInfo",
    "extends",
    "implement",
    "forEach",
    "name",
    "include",
    "dbClassInfo",
    "classFile",
    "getClassName",
    "Promisify",
    "map",
    "call",
    "classes",
    "toArray",
    "getConstructDependencies",
    "className",
    "deps",
    "info",
    "classInfo",
    "dependsOn",
    "depName",
    "push",
    "getIndirectLoadDependencies",
    "load",
    "classIndex",
    "length",
    "getClassInfo",
    "_addRequiredClass",
    "code",
    "Console",
    "error",
    "message",
    "removeListenerById",
    "fixupMetaData",
    "classname",
    "meta",
    "fixupEntry",
    "obj",
    "jsdoc",
    "Parser",
    "parseJsDoc",
    "fixupSection",
    "sectionName",
    "section",
    "clazz",
    "destruct",
    "defer",
    "updateMetaData",
    "classEntities",
    "analyseClassEntities",
    "first",
    "loadMetaData",
    "entityTypeName",
    "entityName",
    "entityMeta",
    "type",
    "entityInfo",
    "appearsIn",
    "overriddenFrom",
    "abstract",
    "mixin",
    "inherited",
    "access",
    "startsWith",
    "event",
    "property",
    "interfaces",
    "i",
    "mixins",
    "superClass",
    "lang",
    "Type",
    "isArray",
    "addPropertyAccessor",
    "propertyMeta",
    "methodName",
    "accessorType",
    "returnType",
    "valueType",
    "desc",
    "newInfo",
    "body",
    "paramName",
    "propertyName",
    "upname",
    "String",
    "firstUp",
    "group",
    "msg",
    "hasSignature",
    "mergeSignature",
    "src",
    "Array",
    "clone",
    "eventName",
    "eventInfo",
    "eventMeta",
    "Boolean",
    "keys",
    "refine",
    "result",
    "propertyInfo",
    "memberName",
    "memberMeta",
    "memberInfo",
    "cachedMeta",
    "saveMetaData",
    "Error",
    "filename",
    "ClassFile",
    "getOutputPath",
    "JSON",
    "stringify",
    "encoding",
    "str",
    "parse",
    "calcDescendants",
    "descendants",
    "tmp",
    "analyzeMeta",
    "toSave",
    "getOuterClassMeta",
    "indexOf",
    "getDependentClasses",
    "getCachedClassInfo",
    "forceScan",
    "getLibraryFromClassname",
    "sourceClassFilename",
    "getSourcePath",
    "outputClassFilename",
    "scanFile",
    "sourceStat",
    "files",
    "Utils",
    "safeStat",
    "outputStat",
    "outputJsonStat",
    "dbMtime",
    "mtime",
    "Date",
    "e",
    "getTime",
    "assign",
    "libraryName",
    "writeDbInfo",
    "callback",
    "getCldr",
    "locale",
    "cldr",
    "app",
    "Cldr",
    "loadCLDR",
    "getTranslation",
    "id",
    "translation",
    "Translation",
    "setWriteLineNumbers",
    "isWritePoLineNumbers",
    "checkRead",
    "updateTranslations",
    "appLibrary",
    "locales",
    "libraries",
    "copyAllMsgs",
    "filter",
    "lib",
    "libTranslations",
    "read",
    "toHashCode",
    "unusedEntries",
    "msgid",
    "getEntries",
    "isAppClass",
    "isClass",
    "classLibrary",
    "find",
    "translations",
    "isEmpty",
    "entry",
    "msgstr",
    "every",
    "value",
    "getEntry",
    "libTranslation",
    "libEntry",
    "getOrCreateEntry",
    "msgid_plural",
    "comments",
    "extracted",
    "comment",
    "reference",
    "ref",
    "fileName",
    "replace",
    "fnAddReference",
    "lineNo",
    "arr",
    "includes",
    "deleteEntry",
    "write",
    "getQooxdooPath",
    "findLibrary",
    "getRootDir",
    "getLibraries",
    "addLibrary",
    "addClass",
    "removeClass",
    "remove",
    "getSymbolType",
    "j",
    "symbolType",
    "getClassFilename",
    "path",
    "setEnvironmentCheck",
    "key",
    "undefined",
    "getEnvironmentCheck",
    "getResourceManager",
    "getQooxdooVersion",
    "getVersion",
    "getResDbFilename",
    "m",
    "match",
    "resDb",
    "_applyEnvironment",
    "isContextChanged",
    "environmentHash",
    "compilerVersion",
    "config",
    "getCompilerVersion",
    "updateEnvironmentData",
    "reduce",
    "acc",
    "Analyser"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/tool/compiler/Analyser.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo\n *\n *    Copyright:\n *      2011-2017 Zenesis Limited, http://www.zenesis.com\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *\n * *********************************************************************** */\n\n/* eslint no-nested-ternary: 0 */\n/* eslint no-inner-declarations: 0 */\n\nvar fs = require(\"fs\");\nvar async = require(\"async\");\n\nvar hash = require(\"object-hash\");\n\nconst { promisify } = require(\"util\");\nconst readFile = promisify(fs.readFile);\nconst writeFile = promisify(fs.writeFile);\n\nvar log = qx.tool.utils.LogManager.createLog(\"analyser\");\n\n/**\n * Entry point for analysing source files; maintains a list of known libraries\n * (eg a qooxdoo application, packages, qooxdoo framework etc.), known classes\n * (and the files and library in which the class is defined, and environment\n * checks which have been used (env checks imply a dependency).\n */\nqx.Class.define(\"qx.tool.compiler.Analyser\", {\n  extend: qx.core.Object,\n\n  /**\n   * Constructor\n   *\n   * @param dbFilename\n   *          {String} the name of the database, defaults to \"db.json\"\n   */\n  construct(dbFilename) {\n    super();\n\n    this.__dbFilename = dbFilename || \"db.json\";\n    this.__libraries = [];\n    this.__librariesByNamespace = {};\n    this.__initialClassesToScan = new qx.tool.utils.IndexedArray();\n    this.__cldrs = {};\n    this.__translations = {};\n    this.__classFiles = {};\n    this.__environmentChecks = {};\n  },\n\n  properties: {\n    /** Output directory for the compiled application */\n    outputDir: {\n      nullable: true,\n      check: \"String\"\n    },\n\n    /** Supported application types */\n    applicationTypes: {\n      init: [\"node\", \"browser\"],\n      check: \"Array\"\n    },\n\n    /** Whether to preserve line numbers */\n    trackLineNumbers: {\n      check: \"Boolean\",\n      init: false,\n      nullable: false\n    },\n\n    /** Whether to process resources */\n    processResources: {\n      init: true,\n      nullable: false,\n      check: \"Boolean\"\n    },\n\n    /** Whether to add `$$createdAt` to new objects */\n    addCreatedAt: {\n      init: false,\n      nullable: false,\n      check: \"Boolean\"\n    },\n\n    /** Environment during compile time */\n    environment: {\n      init: null,\n      check: \"Map\",\n      apply: \"_applyEnvironment\"\n    },\n\n    /** configuration of babel */\n    babelConfig: {\n      init: null,\n      nullable: true,\n      check: \"Object\"\n    },\n\n    /** list of global ignores */\n    ignores: {\n      init: [],\n      nullable: false,\n      check: \"Array\"\n    },\n\n    /** list of global symbols */\n    globalSymbols: {\n      init: [],\n      nullable: false,\n      check: \"Array\"\n    },\n\n    /** Whether and how to mangle private identifiers */\n    manglePrivates: {\n      init: \"readable\",\n      check: [\"off\", \"readable\", \"unreadable\"]\n    },\n\n    /** Whether to write line numbers to .po files */\n    writePoLineNumbers: {\n      init: false,\n      check: \"Boolean\"\n    }\n  },\n\n  events: {\n    /**\n     * Fired when a class is about to be compiled; data is a map:\n     *\n     * dbClassInfo: {Object} the newly populated class info\n     * oldDbClassInfo: {Object} the previous populated class info\n     * classFile - {ClassFile} the qx.tool.compiler.ClassFile instance\n     */\n    compilingClass: \"qx.event.type.Data\",\n\n    /**\n     * Fired when a class is compiled; data is a map:\n     * dbClassInfo: {Object} the newly populated class info\n     * oldDbClassInfo: {Object} the previous populated class info\n     * classFile - {ClassFile} the qx.tool.compiler.ClassFile instance\n     */\n    compiledClass: \"qx.event.type.Data\",\n\n    /**\n     * Fired when a class is already compiled (but needed for compilation); data is a map:\n     * className: {String}\n     * dbClassInfo: {Object} the newly populated class info\n     */\n    alreadyCompiledClass: \"qx.event.type.Data\",\n\n    /**\n     * Fired when the database is been saved\n     * database: {Object} the database to save\n     */\n    saveDatabase: \"qx.event.type.Data\"\n  },\n\n  members: {\n    __opened: false,\n    __resManager: null,\n    __dbFilename: null,\n    __db: null,\n\n    /** {Library[]} All libraries */\n    __libraries: null,\n\n    /** {Map{String,Library}} Lookup of libraries, indexed by namespace */\n    __librariesByNamespace: null,\n\n    __classes: null,\n    __initialClassesToScan: null,\n    __cldrs: null,\n    __translations: null,\n\n    __classFiles: null,\n    __environmentChecks: null,\n    __inDefer: false,\n    __qooxdooVersion: null,\n    __environmentHash: null,\n\n    /**\n     * Opens the analyser, loads database etc\n     *\n     * @async\n     */\n    open() {\n      var p;\n      if (!this.__opened) {\n        this.__opened = true;\n\n        var resManager = null;\n        if (this.isProcessResources()) {\n          resManager = new qx.tool.compiler.resources.Manager(this);\n        }\n        this.__resManager = resManager;\n        p = Promise.all([\n          this.loadDatabase(),\n          resManager && resManager.loadDatabase()\n        ]);\n      } else {\n        p = Promise.resolve();\n      }\n\n      return p;\n    },\n\n    /**\n     * Scans the source files for javascript class and resource references and\n     * calculates the dependency tree\n     *\n     * @param cb\n     */\n    initialScan(cb) {\n      var t = this;\n\n      if (!this.__db) {\n        this.__db = {};\n      }\n\n      log.debug(\"Scanning source code\");\n      async.parallel(\n        [\n          // Load Resources\n          function (cb) {\n            if (!t.__resManager) {\n              cb(null);\n              return;\n            }\n\n            t.__resManager\n              .findAllResources()\n              .then(() => cb())\n              .catch(cb);\n          },\n\n          // Find all classes\n          function (cb) {\n            async.each(\n              t.__libraries,\n              function (library, cb) {\n                library.scanForClasses(err => {\n                  log.debug(\"Finished scanning for \" + library.getNamespace());\n                  cb(err);\n                });\n              },\n              err => {\n                log.debug(\"Finished scanning for all libraries\");\n                cb(err);\n              }\n            );\n          }\n        ],\n\n        function (err) {\n          log.debug(\"processed source and resources\");\n          cb(err);\n        }\n      );\n    },\n\n    /**\n     * Loads the database if available\n     */\n    async loadDatabase() {\n      this.__db =\n        (await qx.tool.utils.Json.loadJsonAsync(this.getDbFilename())) || {};\n    },\n\n    /**\n     * Resets the database\n     *\n     * @return {Promise}\n     */\n    resetDatabase() {\n      this.__db = null;\n\n      if (this.__resManager) {\n        this.__resManager.dispose();\n        this.__resManager = null;\n      }\n\n      this.__opened = false;\n      return this.open();\n    },\n\n    /**\n     * Saves the database\n     */\n    async saveDatabase() {\n      log.debug(\"saving generator database\");\n      await this.fireDataEventAsync(\"saveDatabase\", this.__db);\n      await qx.tool.utils.Json.saveJsonAsync(\n        this.getDbFilename(),\n        this.__db\n      ).then(() => this.__resManager && this.__resManager.saveDatabase());\n    },\n\n    /**\n     * Returns the loaded database\n     *\n     * @returns\n     */\n    getDatabase() {\n      return this.__db;\n    },\n\n    /**\n     * Parses all the source files recursively until all classes and all\n     * dependent classes are loaded\n     */\n    async analyseClasses() {\n      var t = this;\n      if (!this.__db) {\n        this.__db = {};\n      }\n      var db = this.__db;\n      var metaWrittenLog = {};\n\n      var compiledClasses = {};\n      var metaFixupDescendants = {};\n      var listenerId = this.addListener(\"compiledClass\", function (evt) {\n        var data = evt.getData();\n        if (data.oldDbClassInfo) {\n          if (data.oldDbClassInfo.extends) {\n            metaFixupDescendants[data.oldDbClassInfo.extends] = true;\n          }\n          if (data.oldDbClassInfo.implement) {\n            data.oldDbClassInfo.implement.forEach(\n              name => (metaFixupDescendants[name] = true)\n            );\n          }\n          if (data.oldDbClassInfo.include) {\n            data.oldDbClassInfo.include.forEach(\n              name => (metaFixupDescendants[name] = true)\n            );\n          }\n        }\n\n        if (data.dbClassInfo.extends) {\n          metaFixupDescendants[data.dbClassInfo.extends] = true;\n        }\n        if (data.dbClassInfo.implement) {\n          data.dbClassInfo.implement.forEach(\n            name => (metaFixupDescendants[name] = true)\n          );\n        }\n        if (data.dbClassInfo.include) {\n          data.dbClassInfo.include.forEach(\n            name => (metaFixupDescendants[name] = true)\n          );\n        }\n\n        compiledClasses[data.classFile.getClassName()] = data;\n      });\n\n      // Note that it is important to pre-load the classes in all libraries - this is because\n      //  Babel plugins MUST be synchronous (ie cannot afford an async lookup of files on disk\n      //  in mid parse)\n      await qx.tool.utils.Promisify.map(this.__libraries, async library =>\n        qx.tool.utils.Promisify.call(cb => library.scanForClasses(cb))\n      );\n\n      var classes = (t.__classes = t.__initialClassesToScan.toArray());\n\n      function getConstructDependencies(className) {\n        var deps = [];\n        var info = t.__db.classInfo[className];\n        if (info.dependsOn) {\n          for (var depName in info.dependsOn) {\n            if (info.dependsOn[depName].construct) {\n              deps.push(depName);\n            }\n          }\n        }\n        return deps;\n      }\n\n      function getIndirectLoadDependencies(className) {\n        var deps = [];\n        var info = t.__db.classInfo[className];\n        if (info && info.dependsOn) {\n          for (var depName in info.dependsOn) {\n            if (info.dependsOn[depName].load) {\n              getConstructDependencies(depName).forEach(function (className) {\n                deps.push(className);\n              });\n            }\n          }\n        }\n        return deps;\n      }\n\n      for (var classIndex = 0; classIndex < classes.length; classIndex++) {\n        try {\n          let dbClassInfo = await qx.tool.utils.Promisify.call(cb =>\n            t.getClassInfo(classes[classIndex], cb)\n          );\n\n          if (dbClassInfo) {\n            var deps = dbClassInfo.dependsOn;\n            for (var depName in deps) {\n              t._addRequiredClass(depName);\n            }\n          }\n        } catch (err) {\n          if (err.code === \"ENOCLASSFILE\") {\n            qx.tool.compiler.Console.error(err.message);\n          } else {\n            throw err;\n          }\n        }\n      }\n\n      classes.forEach(function (className) {\n        var info = t.__db.classInfo[className];\n        var deps = getIndirectLoadDependencies(className);\n        deps.forEach(function (depName) {\n          if (!info.dependsOn) {\n            info.dependsOn = {};\n          }\n          if (!info.dependsOn[depName]) {\n            info.dependsOn[depName] = {};\n          }\n          info.dependsOn[depName].load = true;\n        });\n      });\n      t.removeListenerById(listenerId);\n\n      function fixupMetaData(classname, meta) {\n        function fixupEntry(obj) {\n          if (obj && obj.jsdoc) {\n            qx.tool.compiler.jsdoc.Parser.parseJsDoc(obj.jsdoc, classname, t);\n          }\n        }\n        function fixupSection(sectionName) {\n          var section = meta[sectionName];\n          if (section) {\n            for (var name in section) {\n              fixupEntry(section[name]);\n            }\n          }\n        }\n\n        fixupSection(\"properties\");\n        fixupSection(\"events\");\n        fixupSection(\"members\");\n        fixupSection(\"statics\");\n        fixupEntry(meta.clazz);\n        fixupEntry(meta.construct);\n        fixupEntry(meta.destruct);\n        fixupEntry(meta.defer);\n      }\n\n      async function updateMetaData(classname, meta) {\n        var classEntities = {\n          members: {},\n          properties: {},\n          events: {}\n        };\n\n        async function analyseClassEntities(meta, first) {\n          if (typeof meta == \"string\") {\n            meta = await loadMetaData(meta);\n          }\n          if (!meta) {\n            return;\n          }\n\n          [\"members\", \"properties\", \"events\"].forEach(entityTypeName => {\n            if (!meta[entityTypeName]) {\n              return;\n            }\n\n            for (let entityName in meta[entityTypeName]) {\n              let entityMeta = meta[entityTypeName][entityName];\n\n              if (\n                entityMeta.type === \"function\" ||\n                entityTypeName === \"properties\" ||\n                entityTypeName === \"events\"\n              ) {\n                var entityInfo = classEntities[entityTypeName][entityName];\n\n                if (!entityInfo) {\n                  entityInfo = classEntities[entityTypeName][entityName] = {\n                    appearsIn: {},\n                    overriddenFrom: null,\n                    jsdoc: null,\n                    abstract: meta.type === \"interface\",\n                    mixin: meta.type === \"mixin\" && !first,\n                    inherited: !first,\n                    access: entityName.startsWith(\"__\")\n                      ? \"private\"\n                      : entityName.startsWith(\"_\")\n                      ? \"protected\"\n                      : \"public\"\n                  };\n                }\n\n                if (entityMeta.event) {\n                  entityInfo.event = entityMeta.event;\n                }\n\n                if (entityMeta.property) {\n                  entityInfo.property = entityMeta.property;\n                }\n\n                if (meta.type === \"mixin\" && entityInfo.abstract) {\n                  entityInfo.mixin = true;\n                }\n\n                if (meta.type !== \"interface\") {\n                  entityInfo.abstract = false;\n                } else {\n                  entityInfo[\"interface\"] = true;\n                }\n\n                if (!first) {\n                  entityInfo.appearsIn[meta.className] = meta.type;\n                }\n                if (!first && !entityInfo.overriddenFrom) {\n                  entityInfo.overriddenFrom = meta.className;\n                }\n\n                if (!entityInfo.jsdoc) {\n                  entityInfo.jsdoc = entityMeta.jsdoc;\n                }\n              }\n            }\n          });\n\n          if (meta.interfaces) {\n            for (let i = 0; i < meta.interfaces.length; i++) {\n              await analyseClassEntities(meta.interfaces[i]);\n            }\n          }\n          if (meta.mixins) {\n            for (let i = 0; i < meta.mixins.length; i++) {\n              await analyseClassEntities(meta.mixins[i]);\n            }\n          }\n          if (meta.superClass) {\n            // Arrays of superclass are allowed for interfaces\n            if (qx.lang.Type.isArray(meta.superClass)) {\n              for (var i = 0; i < meta.superClass.length; i++) {\n                await analyseClassEntities(meta.superClass[i]);\n              }\n            } else {\n              await analyseClassEntities(meta.superClass);\n            }\n          }\n\n          if (meta.properties) {\n            function addPropertyAccessor(\n              propertyMeta,\n              methodName,\n              accessorType,\n              returnType,\n              valueType,\n              desc\n            ) {\n              var entityInfo = classEntities.members[methodName];\n              if (!entityInfo || entityInfo.abstract) {\n                var newInfo = (classEntities.members[methodName] = {\n                  appearsIn: entityInfo ? entityInfo.appearsIn : {},\n                  overriddenFrom:\n                    (entityInfo && entityInfo.appearsIn[0]) || null,\n                  jsdoc: {\n                    \"@description\": [\n                      {\n                        name: \"@description\",\n                        body: desc\n                      }\n                    ]\n                  },\n\n                  property: accessorType,\n                  inherited: !first,\n                  mixin: propertyMeta.mixin,\n                  access: \"public\"\n                });\n\n                if (returnType) {\n                  newInfo.jsdoc[\"@return\"] = [\n                    {\n                      name: \"@return\",\n                      type: returnType,\n                      desc: \"Returns the value for \" + propertyMeta.name\n                    }\n                  ];\n                }\n                if (valueType) {\n                  newInfo.jsdoc[\"@param\"] = [\n                    {\n                      name: \"@param\",\n                      type: valueType,\n                      paramName: \"value\",\n                      desc: \"Value for \" + propertyMeta.name\n                    }\n                  ];\n                }\n              }\n            }\n            for (let propertyName in meta.properties) {\n              let propertyMeta = meta.properties[propertyName];\n              let upname = qx.lang.String.firstUp(propertyName);\n              let type = propertyMeta.check || \"any\";\n              if (!propertyMeta.group) {\n                let msg =\n                  \"Gets the (computed) value of the property <code>\" +\n                  propertyName +\n                  \"</code>.\\n\" +\n                  \"\\n\" +\n                  \"For further details take a look at the property definition: {@link #\" +\n                  propertyName +\n                  \"}.\";\n                addPropertyAccessor(\n                  propertyMeta,\n                  \"get\" + upname,\n                  \"get\",\n                  type,\n                  null,\n                  msg\n                );\n\n                if (type == \"Boolean\") {\n                  addPropertyAccessor(\n                    propertyMeta,\n                    \"is\" + upname,\n                    \"is\",\n                    type,\n                    null,\n                    msg\n                  );\n                }\n              }\n\n              addPropertyAccessor(\n                propertyMeta,\n                \"set\" + upname,\n                \"set\",\n                null,\n                type,\n                \"Sets the user value of the property <code>\" +\n                  propertyName +\n                  \"</code>.\\n\" +\n                  \"\\n\" +\n                  \"For further details take a look at the property definition: {@link #\" +\n                  propertyName +\n                  \"}.\"\n              );\n\n              addPropertyAccessor(\n                propertyMeta,\n                \"reset\" + upname,\n                \"reset\",\n                null,\n                null,\n                \"Resets the user value of the property <code>\" +\n                  propertyName +\n                  \"</code>.\\n\" +\n                  \"\\n\" +\n                  \"The computed value falls back to the next available value e.g. appearance, init or inheritance value \" +\n                  \"depending on the property configuration and value availability.\\n\" +\n                  \"\\n\" +\n                  \"For further details take a look at the property definition: {@link #\" +\n                  propertyName +\n                  \"}.\"\n              );\n\n              if (propertyMeta.async) {\n                var msg =\n                  \"Returns a {@link qx.Promise} which resolves to the (computed) value of the property <code>\" +\n                  propertyName +\n                  \"</code>.\" +\n                  \"\\n\" +\n                  \"For further details take a look at the property definition: {@link #\" +\n                  propertyName +\n                  \"}.\";\n                addPropertyAccessor(\n                  propertyMeta,\n                  \"get\" + upname + \"Async\",\n                  \"getAsync\",\n                  \"Promise\",\n                  null,\n                  msg\n                );\n\n                if (type == \"Boolean\") {\n                  addPropertyAccessor(\n                    propertyMeta,\n                    \"is\" + upname + \"Async\",\n                    \"isAsync\",\n                    \"Promise\",\n                    null,\n                    msg\n                  );\n                }\n                addPropertyAccessor(\n                  propertyMeta,\n                  \"set\" + upname + \"Async\",\n                  \"setAsync\",\n                  \"Promise\",\n                  type,\n                  \"Sets the user value of the property <code>\" +\n                    propertyName +\n                    \"</code>, returns a {@link qx.Promise} \" +\n                    \"which resolves when the value change has fully completed (in the case where there are asynchronous apply methods or events).\\n\" +\n                    \"\\n\" +\n                    \"For further details take a look at the property definition: {@link #\" +\n                    propertyName +\n                    \"}.\"\n                );\n              }\n            }\n          }\n        }\n\n        function hasSignature(jsdoc) {\n          return (\n            jsdoc &&\n            ((jsdoc[\"@param\"] && jsdoc[\"@param\"].length) ||\n              (jsdoc[\"@return\"] && jsdoc[\"@return\"].length))\n          );\n        }\n\n        function mergeSignature(src, meta) {\n          if (!src) {\n            return;\n          }\n          // src has nothing?  ignore it.  meta already has a signature?  preserve it\n          if (!hasSignature(src) || hasSignature(meta.jsdoc)) {\n            return;\n          }\n          if (!meta.jsdoc) {\n            meta.jsdoc = {};\n          }\n          if (src[\"@param\"]) {\n            meta.jsdoc[\"@param\"] = qx.lang.Array.clone(src[\"@param\"]);\n          }\n          if (src[\"@return\"]) {\n            meta.jsdoc[\"@return\"] = qx.lang.Array.clone(src[\"@return\"]);\n          }\n        }\n\n        await analyseClassEntities(meta, true);\n\n        for (let eventName in classEntities.events) {\n          if (!meta.events) {\n            meta.events = {};\n          }\n          let eventInfo = classEntities.events[eventName];\n          if (\n            (eventInfo.abstract || eventInfo.mixin) &&\n            !meta.events[eventInfo]\n          ) {\n            let eventMeta = (meta.events[eventName] = {\n              type: \"event\",\n              name: eventName,\n              abstract: Boolean(eventInfo.abstract),\n              mixin: Boolean(eventInfo.mixin),\n              access: eventInfo.access,\n              overriddenFrom: eventInfo.overriddenFrom\n            });\n\n            if (eventInfo.appearsIn.length) {\n              eventMeta.appearsIn = Object.keys(eventInfo.appearsIn);\n            }\n\n            if (eventInfo.jsdoc) {\n              eventMeta.jsdoc = eventInfo.jsdoc;\n            }\n\n            if (eventInfo.overriddenFrom) {\n              eventMeta.overriddenFrom = eventInfo.overriddenFrom;\n            }\n          }\n        }\n\n        if (meta.properties) {\n          for (let propertyName in meta.properties) {\n            let propertyMeta = meta.properties[propertyName];\n\n            if (propertyMeta.refine) {\n              let result = classEntities.properties[propertyName];\n\n              if (result) {\n                propertyMeta.overriddenFrom = result.overriddenFrom;\n                propertyMeta.appearsIn = result.appearsIn;\n                mergeSignature(result.jsdoc, propertyMeta);\n              }\n            }\n          }\n\n          for (let propertyName in classEntities.properties) {\n            let propertyInfo = classEntities.properties[propertyName];\n            if (\n              (propertyInfo.abstract || propertyInfo.mixin) &&\n              !meta.properties[propertyName]\n            ) {\n              let propertyMeta = (meta.properties[propertyName] = {\n                type: \"property\",\n                name: propertyName,\n                abstract: Boolean(propertyInfo.abstract),\n                mixin: Boolean(propertyInfo.mixin),\n                access: propertyInfo.access,\n                overriddenFrom: propertyInfo.overriddenFrom,\n                event: propertyInfo.event\n              });\n\n              if (propertyInfo.appearsIn.length) {\n                propertyMeta.appearsIn = Object.keys(propertyInfo.appearsIn);\n              }\n              if (propertyMeta.appearsIn && !propertyMeta.appearsIn.length) {\n                delete propertyMeta.appearsIn;\n              }\n              if (propertyInfo.jsdoc) {\n                propertyMeta.jsdoc = propertyInfo.jsdoc;\n              }\n              if (propertyInfo.overriddenFrom) {\n                propertyMeta.overriddenFrom = propertyInfo.overriddenFrom;\n              }\n              if (!propertyMeta.overriddenFrom) {\n                delete propertyMeta.overriddenFrom;\n              }\n            }\n          }\n        }\n\n        if (!meta.members) {\n          meta.members = {};\n        }\n        for (let memberName in meta.members) {\n          let memberMeta = meta.members[memberName];\n          if (memberMeta.type === \"function\") {\n            let result = classEntities.members[memberName];\n            if (result) {\n              memberMeta.overriddenFrom = result.overriddenFrom;\n              memberMeta.appearsIn = Object.keys(result.appearsIn);\n              mergeSignature(result.jsdoc, memberMeta);\n            }\n          }\n        }\n        for (let memberName in classEntities.members) {\n          let memberInfo = classEntities.members[memberName];\n          let memberMeta = meta.members[memberName];\n          if (memberMeta && memberMeta.type === \"variable\" && memberInfo) {\n            memberMeta.type = \"function\";\n          }\n          if (\n            (memberInfo.abstract || memberInfo.mixin || memberInfo.property) &&\n            !memberMeta\n          ) {\n            let memberMeta = (meta.members[memberName] = {\n              type: \"function\",\n              name: memberName,\n              abstract: Boolean(memberInfo.abstract),\n              mixin: Boolean(memberInfo.mixin),\n              inherited: Boolean(memberInfo.inherited),\n              access: memberInfo.access,\n              overriddenFrom: memberInfo.overriddenFrom\n            });\n\n            if (memberInfo.property) {\n              memberMeta.property = memberInfo.property;\n            }\n            if (memberInfo.appearsIn.length) {\n              memberMeta.appearsIn = Object.keys(memberInfo.appearsIn);\n            }\n            if (memberInfo.jsdoc) {\n              memberMeta.jsdoc = memberInfo.jsdoc;\n            }\n            if (memberInfo.overriddenFrom) {\n              memberMeta.overriddenFrom = memberInfo.overriddenFrom;\n            }\n            if (memberMeta.abstract) {\n              meta.abstract = true;\n            }\n          }\n        }\n        for (let memberName in meta.members) {\n          let memberMeta = meta.members[memberName];\n          if (memberMeta.appearsIn && !memberMeta.appearsIn.length) {\n            delete memberMeta.appearsIn;\n          }\n          if (!memberMeta.overriddenFrom) {\n            delete memberMeta.overriddenFrom;\n          }\n        }\n        if (Object.keys(meta.members).length == 0) {\n          delete meta.members;\n        }\n      }\n\n      var cachedMeta = {};\n\n      async function saveMetaData(classname, meta) {\n        if (metaWrittenLog[classname]) {\n          qx.tool.compiler.Console.log(\n            \" *** ERROR *** Writing \" + classname + \" more than once\"\n          );\n\n          throw new Error(\n            \" *** ERROR *** Writing \" + classname + \" more than once\"\n          );\n        }\n        metaWrittenLog[classname] = true;\n        var filename =\n          qx.tool.compiler.ClassFile.getOutputPath(t, classname) + \"on\";\n        return writeFile(filename, JSON.stringify(meta, null, 2), {\n          encoding: \"utf-8\"\n        });\n      }\n\n      async function loadMetaData(classname) {\n        if (\n          classname == \"Object\" ||\n          classname == \"Array\" ||\n          classname == \"Error\"\n        ) {\n          return Promise.resolve(null);\n        }\n        if (cachedMeta[classname]) {\n          return Promise.resolve(cachedMeta[classname]);\n        }\n        var filename =\n          qx.tool.compiler.ClassFile.getOutputPath(t, classname) + \"on\";\n        return readFile(filename, { encoding: \"utf-8\" })\n          .then(str => JSON.parse(str))\n          .then(meta => (cachedMeta[classname] = meta))\n          .catch(err => {\n            qx.tool.compiler.Console.error(\n              \"Failed to load meta for \" + classname + \": \" + err\n            );\n          });\n      }\n\n      function calcDescendants(classname, meta) {\n        meta.descendants = [];\n        for (var name in db.classInfo) {\n          var tmp = db.classInfo[name];\n          if (tmp.extends == classname) {\n            meta.descendants.push(name);\n          }\n        }\n      }\n\n      async function analyzeMeta() {\n        var toSave = {};\n        for (let classname in compiledClasses) {\n          let meta = (cachedMeta[classname] =\n            compiledClasses[classname].classFile.getOuterClassMeta());\n          // Null meta means that the class didn't compile anything\n          if (meta) {\n            fixupMetaData(classname, meta);\n          }\n        }\n\n        for (let classname in compiledClasses) {\n          let meta = cachedMeta[classname];\n          if (meta) {\n            await updateMetaData(classname, meta);\n            calcDescendants(classname, meta);\n            toSave[classname] = meta;\n          }\n        }\n\n        for (let classname in metaFixupDescendants) {\n          if (!compiledClasses[classname] && db.classInfo[classname]) {\n            let meta = await loadMetaData(classname);\n            if (meta) {\n              calcDescendants(classname, meta);\n              toSave[classname] = meta;\n            }\n          }\n        }\n\n        await Promise.all(\n          Object.keys(toSave).map(classname =>\n            saveMetaData(classname, toSave[classname])\n          )\n        );\n      }\n\n      return await analyzeMeta();\n    },\n\n    /**\n     * Called when a reference to a class is made\n     * @param className\n     * @private\n     */\n    _addRequiredClass(className) {\n      let t = this;\n\n      // __classes will be null if analyseClasses has not formally been called; this would be if the\n      //  analyser is only called externally for getClass()\n      if (!t.__classes) {\n        t.__classes = [];\n      }\n\n      // Add it\n      if (t.__classes.indexOf(className) == -1) {\n        t.__classes.push(className);\n      }\n    },\n\n    /**\n     * Returns the full list of required classes\n     * @returns {null}\n     */\n    getDependentClasses() {\n      return this.__classes;\n    },\n\n    /**\n     * Returns cached class info - returns null if not loaded or not in the database\n     * @returb DbClassInfo\n     */\n    getCachedClassInfo(className) {\n      return this.__db ? this.__db.classInfo[className] : null;\n    },\n\n    /**\n     * Loads a class\n     * @param className {String} the name of the class\n     * @param forceScan {Boolean?} true if the class is to be compiled whether it needs it or not (default false)\n     * @param cb {Function} (err, DbClassInfo)\n     */\n    getClassInfo(className, forceScan, cb) {\n      var t = this;\n      if (!this.__db) {\n        this.__db = {};\n      }\n      var db = this.__db;\n\n      if (typeof forceScan == \"function\") {\n        cb = forceScan;\n        forceScan = false;\n      }\n\n      if (!db.classInfo) {\n        db.classInfo = {};\n      }\n\n      var library = t.getLibraryFromClassname(className);\n      if (!library) {\n        let err = new Error(\"Cannot find class file \" + className);\n        err.code = \"ENOCLASSFILE\";\n        cb && cb(err);\n        return;\n      }\n\n      var sourceClassFilename = qx.tool.compiler.ClassFile.getSourcePath(\n        library,\n        className\n      );\n\n      var outputClassFilename = qx.tool.compiler.ClassFile.getOutputPath(\n        this,\n        className\n      );\n\n      const scanFile = async () => {\n        let sourceStat = await qx.tool.utils.files.Utils.safeStat(\n          sourceClassFilename\n        );\n\n        if (!sourceStat) {\n          throw new Error(\"Cannot find \" + sourceClassFilename);\n        }\n\n        var dbClassInfo = db.classInfo[className];\n\n        if (!forceScan) {\n          let outputStat = await qx.tool.utils.files.Utils.safeStat(\n            outputClassFilename\n          );\n\n          let outputJsonStat = await qx.tool.utils.files.Utils.safeStat(\n            outputClassFilename + \"on\"\n          );\n\n          if (dbClassInfo && outputStat && outputJsonStat) {\n            var dbMtime = null;\n            try {\n              dbMtime = dbClassInfo.mtime && new Date(dbClassInfo.mtime);\n            } catch (e) {}\n            if (dbMtime && dbMtime.getTime() == sourceStat.mtime.getTime()) {\n              if (outputStat.mtime.getTime() >= sourceStat.mtime.getTime()) {\n                await t.fireDataEventAsync(\"alreadyCompiledClass\", {\n                  className: className,\n                  dbClassInfo: dbClassInfo\n                });\n\n                return dbClassInfo;\n              }\n            }\n          }\n        }\n\n        // Add database entry\n        var oldDbClassInfo = db.classInfo[className]\n          ? Object.assign({}, db.classInfo[className])\n          : null;\n        dbClassInfo = db.classInfo[className] = {\n          mtime: sourceStat.mtime,\n          libraryName: library.getNamespace()\n        };\n\n        // Analyse it and collect unresolved symbols and dependencies\n        var classFile = new qx.tool.compiler.ClassFile(t, className, library);\n        await t.fireDataEventAsync(\"compilingClass\", {\n          dbClassInfo: dbClassInfo,\n          oldDbClassInfo: oldDbClassInfo,\n          classFile: classFile\n        });\n\n        await qx.tool.utils.Promisify.call(cb => classFile.load(cb));\n\n        // Save it\n        classFile.writeDbInfo(dbClassInfo);\n        await t.fireDataEventAsync(\"compiledClass\", {\n          dbClassInfo: dbClassInfo,\n          oldDbClassInfo: oldDbClassInfo,\n          classFile: classFile\n        });\n\n        // Next!\n        return dbClassInfo;\n      };\n\n      qx.tool.utils.Promisify.callback(scanFile(), cb);\n    },\n\n    /**\n     * Returns the CLDR data for a given locale\n     * @param locale {String} the locale string\n     * @returns Promise({cldr})\n     */\n    async getCldr(locale) {\n      var t = this;\n      var cldr = this.__cldrs[locale];\n      if (cldr) {\n        return cldr;\n      }\n      return qx.tool.compiler.app.Cldr.loadCLDR(locale).then(\n        cldr => (t.__cldrs[locale] = cldr)\n      );\n    },\n\n    /**\n     * Gets the translation for the locale and library, caching the result.\n     * @param library\n     * @param locale\n     * @returns {translation}\n     */\n    async getTranslation(library, locale) {\n      var t = this;\n      var id = locale + \":\" + library.getNamespace();\n      var translation = t.__translations[id];\n      if (!translation) {\n        translation = t.__translations[id] =\n          new qx.tool.compiler.app.Translation(library, locale);\n        translation.setWriteLineNumbers(this.isWritePoLineNumbers());\n        await translation.checkRead();\n      }\n      return translation;\n    },\n\n    /**\n     * Updates all translations to include all msgids found in code\n     * @param appLibrary {qx.tool.compiler.app.Library} the library to update\n     * @param locales {String[]} locales\n     * @param libraries {qx.tool.compiler.app.Library[]} all libraries\n     * @param copyAllMsgs {Boolean} whether to copy everything, or just those that are required\n     */\n    async updateTranslations(appLibrary, locales, libraries, copyAllMsgs) {\n      if (!libraries) {\n        libraries = [];\n      }\n      libraries = libraries.filter(lib => lib != appLibrary);\n\n      await qx.Promise.all(\n        locales.map(async locale => {\n          let libTranslations = {};\n          await qx.Promise.all(\n            libraries.map(async lib => {\n              var translation = new qx.tool.compiler.app.Translation(\n                lib,\n                locale\n              );\n\n              await translation.read();\n              libTranslations[lib.toHashCode()] = translation;\n            })\n          );\n\n          var translation = new qx.tool.compiler.app.Translation(\n            appLibrary,\n            locale\n          );\n\n          translation.setWriteLineNumbers(this.isWritePoLineNumbers());\n          await translation.read();\n\n          let unusedEntries = {};\n          for (let msgid in translation.getEntries()) {\n            unusedEntries[msgid] = true;\n          }\n\n          await qx.Promise.all(\n            this.__classes.map(async classname => {\n              let isAppClass = appLibrary.isClass(classname);\n              let classLibrary =\n                (!isAppClass &&\n                  libraries.find(lib => lib.isClass(classname))) ||\n                null;\n              if (!isAppClass && !classLibrary) {\n                return;\n              }\n\n              let dbClassInfo = await qx.tool.utils.Promisify.call(cb =>\n                this.getClassInfo(classname, cb)\n              );\n\n              if (!dbClassInfo.translations) {\n                return;\n              }\n\n              function isEmpty(entry) {\n                if (!entry) {\n                  return true;\n                }\n                if (qx.lang.Type.isArray(entry.msgstr)) {\n                  return entry.msgstr.every(value => !value);\n                }\n                return !entry.msgstr;\n              }\n\n              dbClassInfo.translations.forEach(function (src) {\n                delete unusedEntries[src.msgid];\n\n                if (classLibrary) {\n                  let entry = translation.getEntry(src.msgid);\n                  if (!isEmpty(entry)) {\n                    return;\n                  }\n                  let libTranslation =\n                    libTranslations[classLibrary.toHashCode()];\n                  let libEntry = libTranslation.getEntry(src.msgid);\n                  if (isEmpty(libEntry) || copyAllMsgs) {\n                    if (!entry) {\n                      entry = translation.getOrCreateEntry(src.msgid);\n                    }\n                    if (libEntry !== null) {\n                      Object.assign(entry, libEntry);\n                    }\n                  }\n                  return;\n                }\n\n                let entry = translation.getOrCreateEntry(src.msgid);\n                if (src.msgid_plural) {\n                  entry.msgid_plural = src.msgid_plural;\n                }\n                if (!entry.comments) {\n                  entry.comments = {};\n                }\n                entry.comments.extracted = src.comment;\n                entry.comments.reference = {};\n                let ref = entry.comments.reference;\n                const fileName = classname.replace(/\\./g, \"/\") + \".js\";\n                const fnAddReference = lineNo => {\n                  let arr = ref[fileName];\n                  if (!arr) {\n                    arr = ref[fileName] = [];\n                  }\n\n                  if (!arr.includes(src.lineNo)) {\n                    arr.push(lineNo);\n                  }\n                };\n                if (qx.lang.Type.isArray(src.lineNo)) {\n                  src.lineNo.forEach(fnAddReference);\n                } else {\n                  fnAddReference(src.lineNo);\n                }\n              });\n            })\n          );\n\n          Object.keys(unusedEntries).forEach(msgid => {\n            var entry = translation.getEntry(msgid);\n            if (entry) {\n              if (!entry.comments) {\n                entry.comments = {};\n              }\n              if (\n                Object.keys(entry.comments).length == 0 &&\n                entry.msgstr === \"\"\n              ) {\n                translation.deleteEntry(msgid);\n              } else {\n                entry.comments.extracted = \"NO LONGER USED\";\n                entry.comments.reference = {};\n              }\n            }\n          });\n\n          await translation.write();\n        })\n      );\n    },\n\n    /**\n     * Returns the path to the qooxdoo library\n     *\n     * @returns\n     */\n    getQooxdooPath() {\n      var lib = this.findLibrary(\"qx\");\n      if (lib !== null) {\n        return lib.getRootDir();\n      }\n      return null;\n    },\n\n    /**\n     * Finds the library with a name(space)\n     */\n    findLibrary(name) {\n      var lib = this.__librariesByNamespace[name];\n      return lib;\n    },\n\n    /**\n     * Returns all libraries\n     * @returns {null}\n     */\n    getLibraries() {\n      return this.__libraries;\n    },\n\n    /**\n     * Adds a library definition\n     *\n     * @param library\n     */\n    addLibrary(library) {\n      this.__libraries.push(library);\n      this.__librariesByNamespace[library.getNamespace()] = library;\n    },\n\n    /**\n     * Adds a required class to be analysed by analyseClasses()\n     *\n     * @param classname\n     */\n    addClass(classname) {\n      this.__initialClassesToScan.push(classname);\n    },\n\n    /**\n     * Removes a class from the list of required classes to analyse\n     * @param classname {String}\n     */\n    removeClass(classname) {\n      this.__initialClassesToScan.remove(classname);\n    },\n\n    /**\n     * Detects the symbol type, ie class, package, member, etc\n     * @param name\n     * @returns {{symbolType,name,className}?}\n     */\n    getSymbolType(name) {\n      var t = this;\n      for (var j = 0; j < t.__libraries.length; j++) {\n        var library = t.__libraries[j];\n        var info = library.getSymbolType(name);\n        if (info) {\n          return info;\n        }\n      }\n      return null;\n    },\n\n    /**\n     * Returns the library for a given classname, supports private files\n     * @param className\n     * @returns {*}\n     */\n    getLibraryFromClassname(className) {\n      var t = this;\n      var info = this.__classFiles[className];\n      if (info) {\n        return info.library;\n      }\n\n      for (var j = 0; j < t.__libraries.length; j++) {\n        var library = t.__libraries[j];\n        info = library.getSymbolType(className);\n        if (\n          info &&\n          (info.symbolType == \"class\" || info.symbolType == \"member\")\n        ) {\n          return library;\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Returns the classname\n     * @param className\n     * @returns {string}\n     */\n    getClassFilename(className) {\n      var library = this.getLibraryFromClassname(className);\n      if (!library) {\n        return null;\n      }\n      var path =\n        library.getRootDir() +\n        \"/\" +\n        library.getSourcePath() +\n        \"/\" +\n        className.replace(/\\./g, \"/\") +\n        \".js\";\n      return path;\n    },\n\n    /**\n     * Sets an environment value as being checked for\n     *\n     * @param key\n     * @param value\n     */\n    setEnvironmentCheck(key, value) {\n      if (typeof key == \"object\") {\n        var map = key;\n        for (key in map) {\n          this.__environmentChecks[key] = map[key];\n        }\n      } else if (value === undefined) {\n        delete this.__environmentChecks[key];\n      } else {\n        this.__environmentChecks[key] = value;\n      }\n    },\n\n    /**\n     * Tests whether an environment value is checked for\n     *\n     * @param key\n     * @returns\n     */\n    getEnvironmentCheck(key) {\n      return this.__environmentChecks[key];\n    },\n\n    /**\n     * Returns the resource manager\n     */\n    getResourceManager() {\n      return this.__resManager;\n    },\n\n    /**\n     * Returns the version of Qooxdoo\n     * @returns {String}\n     */\n    getQooxdooVersion() {\n      if (this.__qooxdooVersion) {\n        return this.__qooxdooVersion;\n      }\n      if (!this.__qooxdooVersion) {\n        let lib = this.findLibrary(\"qx\");\n        if (lib) {\n          this.__qooxdooVersion = lib.getVersion();\n        }\n      }\n      return this.__qooxdooVersion;\n    },\n\n    /**\n     * Returns the database filename\n     * @returns {null}\n     */\n    getDbFilename() {\n      return this.__dbFilename;\n    },\n\n    /**\n     * Returns the resource database filename\n     * @returns {null}\n     */\n    getResDbFilename() {\n      var m = this.__dbFilename.match(/(^.*)\\/([^/]+)$/);\n      var resDb;\n      if (m && m.length == 3) {\n        resDb = m[1] + \"/resource-db.json\";\n      } else {\n        resDb = \"resource-db.json\";\n      }\n      return resDb;\n    },\n\n    // property apply\n    _applyEnvironment(value) {\n      // Cache the hash because we will need it later\n      this.__environmentHash = hash(value);\n    },\n\n    /**\n     * Whether the compilation context has changed since last analysis\n     * e.g. compiler version, environment variables\n     *\n     * @return {Boolean}\n     */\n    isContextChanged() {\n      var db = this.getDatabase();\n\n      // Check if environment is the same as the last time\n      // If the environment hash is null, environment variables have\n      // not been loaded yet. In that case don't consider the environment\n      // changed\n      if (\n        this.__environmentHash &&\n        this.__environmentHash !== db.environmentHash\n      ) {\n        return true;\n      }\n\n      // then check if compiler version is the same\n      if (db.compilerVersion !== qx.tool.config.Utils.getCompilerVersion()) {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Sets the environment data in the __db.\n     * The data beeing set are:\n     *  * a hash of the current environment values\n     *  * the compiler version\n     *  * a list of the libraries used\n     *\n     */\n    updateEnvironmentData() {\n      const libraries = this.getLibraries().reduce((acc, library) => {\n        acc[library.getNamespace()] = library.getVersion();\n        return acc;\n      }, {});\n\n      const db = this.getDatabase();\n\n      db.libraries = libraries;\n      db.environmentHash = this.__environmentHash;\n      db.compilerVersion = qx.tool.config.Utils.getCompilerVersion();\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}