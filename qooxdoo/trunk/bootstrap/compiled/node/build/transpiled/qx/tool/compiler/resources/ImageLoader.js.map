{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "imageSize",
    "tool",
    "utils",
    "Promisify",
    "promisify",
    "require",
    "log",
    "LogManager",
    "createLog",
    "Class",
    "define",
    "extend",
    "compiler",
    "resources",
    "ResourceLoader",
    "construct",
    "members",
    "needsLoad",
    "filename",
    "fileInfo",
    "stat",
    "width",
    "undefined",
    "height",
    "matches",
    "library",
    "endsWith",
    "isWebFont",
    "getWebFonts",
    "find",
    "webFont",
    "getResources",
    "resource",
    "load",
    "asset",
    "getSourceFilename",
    "getFileInfo",
    "trace",
    "dimensions",
    "ex",
    "warn",
    "ImageLoader"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/tool/compiler/resources/ImageLoader.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo\n *\n *    Copyright:\n *      2011-2017 Zenesis Limited, http://www.zenesis.com\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *\n * *********************************************************************** */\n\nvar imageSize = qx.tool.utils.Promisify.promisify(require(\"image-size\"));\n\nvar log = qx.tool.utils.LogManager.createLog(\"resource-manager\");\n\nqx.Class.define(\"qx.tool.compiler.resources.ImageLoader\", {\n  extend: qx.tool.compiler.resources.ResourceLoader,\n\n  construct() {\n    super([\".png\", \".gif\", \".jpg\", \".jpeg\", \".svg\"]);\n  },\n\n  members: {\n    /**\n     * @Override\n     */\n    needsLoad(filename, fileInfo, stat) {\n      if (\n        !fileInfo ||\n        fileInfo.width === undefined ||\n        fileInfo.height === undefined\n      ) {\n        return true;\n      }\n      return super.needsLoad(filename, fileInfo, stat);\n    },\n\n    /**\n     * @Override\n     */\n    matches(filename, library) {\n      if (filename.endsWith(\"svg\")) {\n        let isWebFont =\n          library.getWebFonts() &&\n          library\n            .getWebFonts()\n            .find(webFont =>\n              webFont.getResources().find(resource => resource == filename)\n            );\n\n        if (isWebFont) {\n          return false;\n        }\n      }\n\n      return super.matches(filename, library);\n    },\n\n    /**\n     * @Override\n     */\n    async load(asset) {\n      let filename = asset.getSourceFilename();\n      let fileInfo = asset.getFileInfo();\n      log.trace(\"Getting size of \" + filename);\n      try {\n        let dimensions = await imageSize(filename);\n        fileInfo.width = dimensions.width;\n        fileInfo.height = dimensions.height;\n      } catch (ex) {\n        log.warn(\"Cannot get image size of \" + filename + \": \" + ex);\n        delete fileInfo.width;\n        delete fileInfo.height;\n      }\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEA,IAAIC,SAAS,GAAGJ,EAAE,CAACK,IAAH,CAAQC,KAAR,CAAcC,SAAd,CAAwBC,SAAxB,CAAkCC,OAAO,CAAC,YAAD,CAAzC,CAAhB;EAEA,IAAIC,GAAG,GAAGV,EAAE,CAACK,IAAH,CAAQC,KAAR,CAAcK,UAAd,CAAyBC,SAAzB,CAAmC,kBAAnC,CAAV;EAEAZ,EAAE,CAACa,KAAH,CAASC,MAAT,CAAgB,wCAAhB,EAA0D;IACxDC,MAAM,EAAEf,EAAE,CAACK,IAAH,CAAQW,QAAR,CAAiBC,SAAjB,CAA2BC,cADqB;;IAGxDC,SAAS,GAAG;MACV,iEAAM,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,OAAzB,EAAkC,MAAlC,CAAN;IACD,CALuD;;IAOxDC,OAAO,EAAE;MACP;AACJ;AACA;MACIC,SAAS,CAACC,QAAD,EAAWC,QAAX,EAAqBC,IAArB,EAA2B;QAClC,IACE,CAACD,QAAD,IACAA,QAAQ,CAACE,KAAT,KAAmBC,SADnB,IAEAH,QAAQ,CAACI,MAAT,KAAoBD,SAHtB,EAIE;UACA,OAAO,IAAP;QACD;;QACD,wFAAuBJ,QAAvB,EAAiCC,QAAjC,EAA2CC,IAA3C;MACD,CAbM;;MAeP;AACJ;AACA;MACII,OAAO,CAACN,QAAD,EAAWO,OAAX,EAAoB;QACzB,IAAIP,QAAQ,CAACQ,QAAT,CAAkB,KAAlB,CAAJ,EAA8B;UAC5B,IAAIC,SAAS,GACXF,OAAO,CAACG,WAAR,MACAH,OAAO,CACJG,WADH,GAEGC,IAFH,CAEQC,OAAO,IACXA,OAAO,CAACC,YAAR,GAAuBF,IAAvB,CAA4BG,QAAQ,IAAIA,QAAQ,IAAId,QAApD,CAHJ,CAFF;;UAQA,IAAIS,SAAJ,EAAe;YACb,OAAO,KAAP;UACD;QACF;;QAED,sFAAqBT,QAArB,EAA+BO,OAA/B;MACD,CAlCM;;MAoCP;AACJ;AACA;MACI,MAAMQ,IAAN,CAAWC,KAAX,EAAkB;QAChB,IAAIhB,QAAQ,GAAGgB,KAAK,CAACC,iBAAN,EAAf;QACA,IAAIhB,QAAQ,GAAGe,KAAK,CAACE,WAAN,EAAf;QACA9B,GAAG,CAAC+B,KAAJ,CAAU,qBAAqBnB,QAA/B;;QACA,IAAI;UACF,IAAIoB,UAAU,GAAG,MAAMtC,SAAS,CAACkB,QAAD,CAAhC;UACAC,QAAQ,CAACE,KAAT,GAAiBiB,UAAU,CAACjB,KAA5B;UACAF,QAAQ,CAACI,MAAT,GAAkBe,UAAU,CAACf,MAA7B;QACD,CAJD,CAIE,OAAOgB,EAAP,EAAW;UACXjC,GAAG,CAACkC,IAAJ,CAAS,8BAA8BtB,QAA9B,GAAyC,IAAzC,GAAgDqB,EAAzD;UACA,OAAOpB,QAAQ,CAACE,KAAhB;UACA,OAAOF,QAAQ,CAACI,MAAhB;QACD;MACF;;IApDM;EAP+C,CAA1D;EA1BA3B,EAAE,CAACK,IAAH,CAAQW,QAAR,CAAiBC,SAAjB,CAA2B4B,WAA3B,CAAuC1C,aAAvC,GAAuDA,aAAvD"
}