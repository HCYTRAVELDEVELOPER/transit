{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "path",
    "require",
    "fs",
    "tool",
    "utils",
    "Promisify",
    "Class",
    "define",
    "extend",
    "cli",
    "api",
    "AbstractApi",
    "construct",
    "__libraryApis",
    "addListener",
    "afterCommandLoaded",
    "getCommand",
    "properties",
    "configFilename",
    "check",
    "nullable",
    "command",
    "init",
    "event",
    "members",
    "cmd",
    "beforeTests",
    "afterDeploy",
    "data",
    "load",
    "compileJsonPath",
    "join",
    "getRootDir",
    "getConfigFilename",
    "config",
    "existsAsync",
    "Json",
    "loadJsonAsync",
    "setConfiguration",
    "afterProcessFinished",
    "res",
    "afterLibrariesLoaded",
    "arr",
    "getLibraryApis",
    "i",
    "length",
    "addLibraryApi",
    "libraryApi",
    "dir",
    "resolve",
    "Object",
    "values",
    "CompilerApi"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/tool/cli/api/CompilerApi.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo\n *\n *    Copyright:\n *      2011-2019 Zenesis Limited, http://www.zenesis.com\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *\n * *********************************************************************** */\n\nconst path = require(\"path\");\nconst fs = qx.tool.utils.Promisify.fs;\n\n/**\n * Provides an API for the compiler\n *\n */\nqx.Class.define(\"qx.tool.cli.api.CompilerApi\", {\n  extend: qx.tool.cli.api.AbstractApi,\n\n  construct() {\n    super();\n    this.__libraryApis = {};\n    this.addListener(\n      \"changeCommand\",\n      function () {\n        this.afterCommandLoaded(this.getCommand());\n      },\n      this\n    );\n  },\n\n  properties: {\n    /** Default filename to load from */\n    configFilename: {\n      check: \"String\",\n      nullable: false\n    },\n\n    /** The current command */\n    command: {\n      init: null,\n      nullable: true,\n      check: \"qx.tool.cli.commands.Command\",\n      event: \"changeCommand\"\n    }\n  },\n\n  members: {\n    __libraryApis: null,\n\n    /**\n     * Called after the command is loaded\n     * @param cmd {qx.tool.cli.commands.Command} current command\n     */\n    afterCommandLoaded(cmd) {\n      // Nothing\n    },\n\n    /**\n     * Register compiler tests\n     * @param cmd {qx.tool.cli.commands.Command} current command\n     */\n    async beforeTests(cmd) {\n      // Nothing\n    },\n\n    /**\n     * called after deployment happens\n     *\n     * @param data {Object}  contains deployment infos with the following properties:\n     *           targetDir  : {String}  The target dir of the build\n     *           deployDir  : {String}  The output dir for the deployment\n     *           argv       : {Object}  Arguments\n     *           application: {Object}  application to build\n     * @return {Promise<void>}\n     */\n    async afterDeploy(data) {\n      // Nothing\n    },\n\n    /**\n     * Loads the configuration data\n     *\n     * @overridden\n     */\n    async load() {\n      let compileJsonPath = path.join(\n        this.getRootDir(),\n        this.getConfigFilename()\n      );\n\n      let config = {};\n      if (await fs.existsAsync(compileJsonPath)) {\n        config = await qx.tool.utils.Json.loadJsonAsync(compileJsonPath);\n      }\n      this.setConfiguration(config);\n      return super.load();\n    },\n\n    /**\n     * runs after the whole process is finished\n     * @param cmd {qx.tool.cli.commands.Command} current command\n     * @param res {boolean} result of the just finished process\n     */\n    async afterProcessFinished(cmd, res) {\n      // Nothing\n    },\n\n    /**\n     * Called after all libraries have been loaded and added to the compilation data\n     */\n    async afterLibrariesLoaded() {\n      for (let arr = this.getLibraryApis(), i = 0; i < arr.length; i++) {\n        await arr[i].afterLibrariesLoaded();\n      }\n    },\n\n    /**\n     * Adds a library configuration\n     *\n     * @param libraryApi {LibraryApi} the configuration for the library\n     */\n    addLibraryApi(libraryApi) {\n      let dir = path.resolve(libraryApi.getRootDir());\n      this.__libraryApis[dir] = libraryApi;\n    },\n\n    /**\n     * Returns an array of library configurations\n     *\n     * @return {LibraryApi[]}\n     */\n    getLibraryApis() {\n      return Object.values(this.__libraryApis);\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}