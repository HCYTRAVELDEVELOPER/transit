{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "fs",
    "tool",
    "utils",
    "Promisify",
    "path",
    "require",
    "Class",
    "define",
    "extend",
    "compiler",
    "targets",
    "meta",
    "AbstractJavascriptMeta",
    "construct",
    "appMeta",
    "getApplicationRoot",
    "__embeddedJs",
    "__embeddedJsLookup",
    "properties",
    "needsWriteToDisk",
    "init",
    "refine",
    "members",
    "__sourceMapOffsets",
    "addEmbeddedJs",
    "jsMeta",
    "toHashCode",
    "push",
    "writeSourceCodeToStream",
    "ws",
    "_appMeta",
    "application",
    "getApplication",
    "target",
    "getTarget",
    "appRootDir",
    "urisBefore",
    "isInlineExternalScripts",
    "getPreloads",
    "inlines",
    "filter",
    "uri",
    "startsWith",
    "i",
    "length",
    "filename",
    "join",
    "getOutputDir",
    "data",
    "readFileAsync",
    "encoding",
    "write",
    "ex",
    "code",
    "MAP",
    "EnvSettings",
    "getEnvironment",
    "Libraries",
    "getLibraries",
    "map",
    "library",
    "getNamespace",
    "SourceUri",
    "getSourceUri",
    "ResourceUri",
    "getResourceUri",
    "Resources",
    "getResources",
    "Translations",
    "C",
    "Locales",
    "Parts",
    "Packages",
    "UrisBefore",
    "CssBefore",
    "cssBefore",
    "Boot",
    "ClosureParts",
    "BootIsInline",
    "NoCacheParam",
    "DecodeUrisPlug",
    "undefined",
    "BootPart",
    "TranspiledPath",
    "PreBootCode",
    "getPreBootCode",
    "getParts",
    "forEach",
    "part",
    "serializeInto",
    "getPackages",
    "pkg",
    "getType",
    "relative",
    "getLocales",
    "localeId",
    "getLoaderTemplate",
    "lines",
    "split",
    "line",
    "match",
    "keyword",
    "replace",
    "j",
    "getLineNumber",
    "unwrap",
    "JSON",
    "stringify",
    "newLine",
    "substring",
    "index",
    "getSourceMap",
    "Error",
    "res",
    "_copySourceMap",
    "sources",
    "s",
    "mapTo",
    "getPathMapping",
    "BootJs"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/tool/compiler/targets/meta/BootJs.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo-compiler\n *\n *    Copyright:\n *      2011-2021 Zenesis Limited, http://www.zenesis.com\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *\n * ************************************************************************/\n\nconst fs = qx.tool.utils.Promisify.fs;\nconst path = require(\"upath\");\n\n/**\n * Represents a \"index.js\" that is generated as part of a compile\n */\nqx.Class.define(\"qx.tool.compiler.targets.meta.BootJs\", {\n  extend: qx.tool.compiler.targets.meta.AbstractJavascriptMeta,\n\n  construct(appMeta) {\n    super(appMeta, `${appMeta.getApplicationRoot()}index.js`);\n    this.__embeddedJs = [];\n    this.__embeddedJsLookup = {};\n  },\n\n  properties: {\n    needsWriteToDisk: {\n      init: true,\n      refine: true\n    }\n  },\n\n  members: {\n    __embeddedJs: null,\n    __sourceMapOffsets: null,\n\n    /**\n     * Adds Javascript which is to be added to the end of the index.js, just before the app\n     * is finalised\n     *\n     * @param jsMeta {AbstractJavascriptMeta} the jaavscript to add\n     */\n    addEmbeddedJs(jsMeta) {\n      if (!this.__embeddedJsLookup[jsMeta.toHashCode()]) {\n        this.__embeddedJs.push(jsMeta);\n        this.__embeddedJsLookup[jsMeta.toHashCode()] = jsMeta;\n      }\n    },\n\n    /*\n     * @Override\n     */\n    async writeSourceCodeToStream(ws) {\n      let appMeta = this._appMeta;\n      let application = appMeta.getApplication();\n      let target = appMeta.getTarget();\n      let appRootDir = appMeta.getApplicationRoot();\n      let urisBefore = [];\n      if (!target.isInlineExternalScripts()) {\n        urisBefore = appMeta.getPreloads().urisBefore;\n      } else {\n        let inlines = [];\n        urisBefore = appMeta.getPreloads().urisBefore.filter(uri => {\n          // This is a http url, we cannot inline it\n          if (uri.startsWith(\"__external__:\")) {\n            return true;\n          }\n\n          inlines.push(uri);\n          return false;\n        });\n        for (let i = 0; i < inlines.length; i++) {\n          let uri = inlines[i];\n\n          let filename = path.join(target.getOutputDir(), \"resources\", uri);\n          try {\n            var data = await fs.readFileAsync(filename, { encoding: \"utf-8\" });\n            ws.write(data);\n            ws.write(\"\\n\");\n          } catch (ex) {\n            if (ex.code != \"ENOENT\") {\n              throw ex;\n            }\n          }\n        }\n      }\n\n      var MAP = {\n        EnvSettings: appMeta.getEnvironment(),\n        Libraries: appMeta\n          .getLibraries()\n          .map(library => library.getNamespace()),\n        SourceUri: appMeta.getSourceUri(),\n        ResourceUri: appMeta.getResourceUri(),\n        Resources: appMeta.getResources(),\n        Translations: { C: null },\n        Locales: { C: null },\n        Parts: {},\n        Packages: {},\n        UrisBefore: urisBefore,\n        CssBefore: appMeta.getPreloads().cssBefore,\n        Boot: \"boot\",\n        ClosureParts: {},\n        BootIsInline: false,\n        NoCacheParam: false,\n        DecodeUrisPlug: undefined,\n        BootPart: undefined,\n        TranspiledPath: undefined,\n        PreBootCode: appMeta.getPreBootCode()\n      };\n\n      appMeta.getParts().forEach(part => part.serializeInto(MAP.Parts));\n      appMeta.getPackages().forEach(pkg => pkg.serializeInto(MAP.Packages));\n\n      if (application.getType() !== \"browser\") {\n        MAP.TranspiledPath = path.relative(\n          appRootDir,\n          path.join(target.getOutputDir(), \"transpiled\")\n        );\n      }\n\n      appMeta\n        .getTarget()\n        .getLocales()\n        .forEach(localeId => {\n          MAP.Translations[localeId] = null;\n          MAP.Locales[localeId] = null;\n        });\n      this.__sourceMapOffsets = [];\n\n      data = await fs.readFileAsync(application.getLoaderTemplate(), {\n        encoding: \"utf-8\"\n      });\n\n      var lines = data.split(\"\\n\");\n      for (let i = 0; i < lines.length; i++) {\n        var line = lines[i];\n        var match;\n        while ((match = line.match(/\\%\\{([^}]+)\\}/))) {\n          var keyword = match[1];\n          var replace = \"\";\n\n          if (keyword == \"BootPart\") {\n            for (let j = 0; j < this.__embeddedJs.length; j++) {\n              this.__sourceMapOffsets.push(ws.getLineNumber());\n              await this.__embeddedJs[j].unwrap().writeSourceCodeToStream(ws);\n              ws.write(\"\\n\");\n            }\n          } else if (MAP[keyword] !== undefined) {\n            if (keyword == \"PreBootCode\") {\n              replace = MAP[keyword];\n            } else {\n              replace = JSON.stringify(MAP[keyword], null, 2);\n            }\n          }\n\n          var newLine =\n            line.substring(0, match.index) +\n            replace +\n            line.substring(match.index + keyword.length + 3);\n          line = newLine;\n        }\n        if (line.match(/^\\s*delayDefer:\\s*false\\b/)) {\n          line = line.replace(/false/, \"true\");\n        }\n        ws.write(line + \"\\n\");\n      }\n    },\n\n    /*\n     * @Override\n     */\n    async getSourceMap() {\n      if (this.__sourceMapOffsets === null) {\n        throw new Error(\n          `Cannot get the source map for ${this} until the stream has been written`\n        );\n      }\n      let res = await this._copySourceMap(\n        this.__embeddedJs,\n        this.__sourceMapOffsets\n      );\n\n      let target = this._appMeta.getTarget();\n      for (let i = 0; i < res.sources.length; i++) {\n        let s = path.relative(\"\", res.sources[i]);\n        let mapTo = target.getPathMapping(s);\n        res.sources[i] = mapTo ? mapTo : res.sources[i];\n      }\n      return res;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}