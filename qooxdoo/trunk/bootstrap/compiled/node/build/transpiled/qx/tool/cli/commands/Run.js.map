{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "path",
    "require",
    "process",
    "Class",
    "define",
    "extend",
    "tool",
    "cli",
    "commands",
    "Compile",
    "statics",
    "YARGS_BUILDER",
    "inspect",
    "describe",
    "type",
    "default",
    "getYargsCommand",
    "command",
    "builder",
    "Object",
    "assign",
    "Run",
    "members",
    "argv",
    "watch",
    "config",
    "_getConfig",
    "run",
    "compiler",
    "Console",
    "print",
    "exit",
    "application",
    "maker",
    "app",
    "getMakers",
    "forEach",
    "tmp",
    "apps",
    "getApplications",
    "filter",
    "getName",
    "length",
    "getType",
    "target",
    "getTarget",
    "scriptname",
    "join",
    "getApplicationRoot",
    "args",
    "arguments",
    "debug",
    "cmd",
    "restartNeeded",
    "addListener",
    "evt",
    "getData",
    "e",
    "__process",
    "utils",
    "Utils",
    "killTree",
    "pid",
    "ex",
    "console",
    "log",
    "child",
    "exec",
    "stdout",
    "setEncoding",
    "on",
    "data",
    "stderr",
    "error",
    "code",
    "err",
    "defer",
    "addMessageIds"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/tool/cli/commands/Run.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2019 Zenesis Ltd\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (john.spackman@zenesis.com, @johnspackman)\n\n************************************************************************ */\n\nconst path = require(\"upath\");\nconst process = require(\"process\");\n\n/**\n * Runs a server application\n */\nqx.Class.define(\"qx.tool.cli.commands.Run\", {\n  extend: qx.tool.cli.commands.Compile,\n\n  statics: {\n    YARGS_BUILDER: {\n      inspect: {\n        describe:\n          \"Whether to start node for debugging (ie with the --inspect argument)\",\n        type: \"boolean\",\n        default: false\n      },\n\n      \"inspect-brk\": {\n        describe:\n          \"Whether to start node for debugging and break immediately (ie with the --inspect-brk argument)\",\n        type: \"boolean\",\n        default: false\n      }\n    },\n\n    getYargsCommand() {\n      return {\n        command: \"run [configFile]\",\n        describe:\n          \"runs a server application (written in node) with continuous compilation, using compile.json\",\n        builder: Object.assign(\n          {},\n          qx.tool.cli.commands.Compile.YARGS_BUILDER,\n          qx.tool.cli.commands.Run.YARGS_BUILDER\n        )\n      };\n    }\n  },\n\n  members: {\n    /*\n     * @Override\n     */\n    async process() {\n      this.argv.watch = true;\n      this.argv[\"machine-readable\"] = false;\n      this.argv[\"feedback\"] = false;\n      await super.process();\n      let config = this._getConfig();\n      if (!config.run) {\n        qx.tool.compiler.Console.print(\"qx.tool.cli.run.noRunConfig\");\n        process.exit(-1);\n      }\n\n      if (!config.run.application) {\n        qx.tool.compiler.Console.print(\"qx.tool.cli.run.noAppName\");\n        process.exit(-1);\n      }\n\n      let maker = null;\n      let app = null;\n      this.getMakers().forEach(tmp => {\n        let apps = tmp\n          .getApplications()\n          .filter(app => app.getName() == config.run.application);\n        if (apps.length) {\n          if (maker) {\n            qx.tool.compiler.Console.print(\"qx.tool.cli.run.tooManyMakers\");\n            process.exit(-1);\n          }\n          if (apps.length != 1) {\n            qx.tool.compiler.Console.print(\n              \"qx.tool.cli.run.tooManyApplications\"\n            );\n\n            process.exit(-1);\n          }\n          maker = tmp;\n          app = apps[0];\n        }\n      });\n      if (!app) {\n        qx.tool.compiler.Console.print(\"qx.tool.cli.run.noAppName\");\n        process.exit(-1);\n      }\n      if (app.getType() != \"node\") {\n        qx.tool.compiler.Console.print(\"qx.tool.cli.run.mustBeNode\");\n        process.exit(-1);\n      }\n\n      let target = maker.getTarget();\n\n      let scriptname = path.join(target.getApplicationRoot(app), \"index.js\");\n      let args = config.run.arguments || \"\";\n      let debug = \"\";\n      if (this.argv[\"inspect-brk\"]) {\n        debug = \" --inspect-brk\";\n      } else if (this.argv[\"inspect\"]) {\n        debug = \" --inspect\";\n      }\n      let cmd = `node${debug} ${scriptname} ${args}`;\n\n      let restartNeeded = true;\n      this.addListener(\"making\", evt => {\n        restartNeeded = false;\n      });\n\n      this.addListener(\"writtenApplication\", evt => {\n        if (app === evt.getData()) {\n          restartNeeded = true;\n        }\n      });\n\n      /* eslint-disable @qooxdoo/qx/no-illegal-private-usage */\n      this.addListener(\"made\", async e => {\n        if (this.__process) {\n          if (!restartNeeded) {\n            return;\n          }\n\n          try {\n            await qx.tool.utils.Utils.killTree(this.__process.pid);\n          } catch (ex) {\n            //Nothing\n          }\n          this.__process = null;\n        }\n        console.log(\"Starting application: \" + cmd);\n        let child = (this.__process = require(\"child_process\").exec(cmd));\n        child.stdout.setEncoding(\"utf8\");\n        child.stdout.on(\"data\", function (data) {\n          console.log(data);\n        });\n\n        child.stderr.setEncoding(\"utf8\");\n        child.stderr.on(\"data\", function (data) {\n          console.error(data);\n        });\n\n        child.on(\"close\", function (code) {\n          console.log(\"Application has terminated\");\n          this.__process = null;\n        });\n        child.on(\"error\", function (err) {\n          console.error(\"Application has failed: \" + err);\n        });\n      });\n    }\n  },\n\n  defer(statics) {\n    qx.tool.compiler.Console.addMessageIds(\n      {\n        \"qx.tool.cli.run.noRunConfig\":\n          \"Cannot run anything because the config.json does not have a `run` configuration\",\n        \"qx.tool.cli.run.noAppName\":\n          \"Cannot run anything because the config.json does not specify a unique application name\",\n        \"qx.tool.cli.run.mustBeNode\":\n          \"The application %1 is not a node application (only node applications are supported)\",\n        \"qx.tool.cli.run.tooManyMakers\":\n          \"Cannot run anything because multiple targets are detected\",\n        \"qx.tool.cli.run.tooManyApplications\":\n          \"Cannot run anything because multiple applications are detected\"\n      },\n\n      \"error\"\n    );\n  }\n});\n"
  ],
  "mappings": "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"
}