{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "process",
    "require",
    "Gauge",
    "semver",
    "path",
    "consoleControl",
    "fs",
    "tool",
    "utils",
    "Promisify",
    "addPath",
    "cwd",
    "Class",
    "define",
    "extend",
    "cli",
    "commands",
    "Command",
    "statics",
    "YARGS_BUILDER",
    "target",
    "alias",
    "describe",
    "requiresArg",
    "type",
    "download",
    "default",
    "locale",
    "nargs",
    "array",
    "watch",
    "minify",
    "choices",
    "erase",
    "feedback",
    "typescript",
    "clean",
    "bundling",
    "getYargsCommand",
    "command",
    "builder",
    "Compile",
    "events",
    "writingApplications",
    "writingApplication",
    "writtenApplication",
    "writtenApplications",
    "compilingClass",
    "compiledClass",
    "saveDatabase",
    "checkEnvironment",
    "making",
    "made",
    "minifyingApplication",
    "minifiedApplication",
    "members",
    "__gauge",
    "__makers",
    "__config",
    "__libraries",
    "__outputDirWasCreated",
    "configDb",
    "ConfigDb",
    "getInstance",
    "argv",
    "db",
    "verbose",
    "console",
    "log",
    "getCompilerVersion",
    "main",
    "filename",
    "getQxVersion",
    "getQxPath",
    "compiler",
    "Console",
    "setMachineReadable",
    "color",
    "colorOn",
    "split",
    "stdout",
    "write",
    "eraseLine",
    "colorReset",
    "on",
    "setColorOn",
    "themes",
    "ourTheme",
    "newTheme",
    "hasUnicode",
    "hasColor",
    "getColorOn",
    "preProgressbar",
    "preSubsection",
    "progressbarTheme",
    "postComplete",
    "postRemaining",
    "setTheme",
    "show",
    "TYPES",
    "error",
    "warning",
    "setWriter",
    "str",
    "msgId",
    "MESSAGE_IDS",
    "hide",
    "addListener",
    "evt",
    "pulse",
    "getData",
    "appMeta",
    "getApplication",
    "getName",
    "classFile",
    "getClassName",
    "application",
    "appInfo",
    "print",
    "e",
    "Object",
    "values",
    "forEach",
    "lib",
    "getNamespace",
    "getRootDir",
    "_loadConfigAndStartMaking",
    "success",
    "every",
    "maker",
    "getSuccess",
    "hasWarnings",
    "getHasWarnings",
    "warnAsError",
    "deploying",
    "warn",
    "exitCode",
    "config",
    "Cli",
    "getParsedArgs",
    "Utils",
    "UserError",
    "makers",
    "createMakersFromConfig",
    "length",
    "countMaking",
    "collateDispatchEvent",
    "dispatchEvent",
    "clone",
    "Promise",
    "all",
    "map",
    "analyser",
    "getAnalyser",
    "cfg",
    "setWritePoLineNumbers",
    "existsAsync",
    "getOutputDir",
    "eraseOutputDir",
    "files",
    "safeUnlink",
    "getDbFilename",
    "getResDbFilename",
    "ignores",
    "setIgnores",
    "getTarget",
    "appInfos",
    "getAppMeta",
    "push",
    "fireDataEventAsync",
    "targets",
    "BuildTarget",
    "stat",
    "safeStat",
    "fireEvent",
    "make",
    "Watch",
    "applications",
    "appConfig",
    "runWhenWatching",
    "setRunWhenWatching",
    "name",
    "setDebug",
    "stop",
    "setImmediate",
    "arr",
    "_compileJsFilename",
    "_compileJsonFilename",
    "filter",
    "Boolean",
    "setConfigFilenames",
    "start",
    "data",
    "t",
    "babelOptions",
    "babel",
    "options",
    "argvAppNames",
    "argvAppGroups",
    "targetConfig",
    "index",
    "targetConfigs",
    "defaultTargetConfig",
    "targetType",
    "allAppNames",
    "group",
    "appType",
    "appTargetConfigs",
    "appTypes",
    "lang",
    "Array",
    "contains",
    "appNames",
    "appConfigs",
    "libraries",
    "libPath",
    "library",
    "app",
    "Library",
    "createLibrary",
    "qxLib",
    "qxPath",
    "errors",
    "__checkDependencies",
    "packages",
    "join",
    "hasExplicitDefaultApp",
    "defaultAppConfig",
    "setDefault",
    "writeIndexHtmlToRoot",
    "undefined",
    "targetOutputPaths",
    "groups",
    "find",
    "groupName",
    "outputPath",
    "outputPathPrefix",
    "absOutputPath",
    "resolve",
    "AppMaker",
    "setNoErase",
    "targetClass",
    "resolveTargetClass",
    "uri",
    "addTimestampsToUrls",
    "setAddTimestampsToUrls",
    "writeCompileInfo",
    "setWriteCompileInfo",
    "i18nAsParts",
    "setI18nAsParts",
    "setWriteLibraryInfo",
    "writeLibraryInfo",
    "setUpdatePoFiles",
    "updatePoFiles",
    "setLibraryPoPolicy",
    "libraryPo",
    "indexOf",
    "setMinify",
    "chooseValue",
    "args",
    "i",
    "saveSourceInMap",
    "setSaveSourceInMap",
    "sourceMapRelativePaths",
    "setSourceMapRelativePaths",
    "saveUnminified",
    "setSaveUnminified",
    "inlineExternal",
    "setInlineExternalScripts",
    "deployDir",
    "setDeployDir",
    "deployMap",
    "setDeployMap",
    "setTarget",
    "manglePrivates",
    "setManglePrivates",
    "setApplicationTypes",
    "setLocales",
    "locales",
    "writeAllTranslations",
    "setWriteAllTranslations",
    "set",
    "outputTypescript",
    "outputTypescriptTo",
    "environment",
    "setEnvironment",
    "preserveEnvironment",
    "setPreserveEnvironment",
    "from",
    "to",
    "addPathMapping",
    "mergeArray",
    "dest",
    "srcs",
    "src",
    "elem",
    "babelConfig",
    "mergeWith",
    "setBabelConfig",
    "addCreatedAt",
    "setAddCreatedAt",
    "ns",
    "addLibrary",
    "allApplicationTypes",
    "Application",
    "setTemplatePath",
    "getTemplateDir",
    "fname",
    "String",
    "firstUp",
    "getType",
    "title",
    "setTitle",
    "description",
    "setDescription",
    "parts",
    "boot",
    "partName",
    "partData",
    "include",
    "exclude",
    "part",
    "Part",
    "combine",
    "addPart",
    "bundle",
    "setBundleInclude",
    "setBundleExclude",
    "addApplication",
    "CF",
    "ClassFile",
    "globalSymbols",
    "append",
    "QX_GLOBALS",
    "COMMON_GLOBALS",
    "BROWSER_GLOBALS",
    "NODE_GLOBALS",
    "RHINO_GLOBALS",
    "setGlobalSymbols",
    "setWriteIndexHtmlToRoot",
    "showMarkers",
    "classname",
    "markers",
    "marker",
    "decodeMarker",
    "dbClassInfo",
    "className",
    "libs",
    "requires",
    "getRequires",
    "range",
    "getLibraryInfo",
    "requires_uris",
    "getOwnPropertyNames",
    "urisToInstall",
    "pkg_libs",
    "existsSync",
    "Manifest",
    "fileName",
    "exit",
    "info",
    "installer",
    "package",
    "Install",
    "save",
    "reqUri",
    "requiredRange",
    "rangeIsCommitHash",
    "test",
    "qxVersion",
    "satisfies",
    "loose",
    "l",
    "entry",
    "relative",
    "libVersion",
    "version",
    "valid",
    "quiet",
    "$$type",
    "SourceTarget",
    "getByName",
    "getMakers",
    "getMaker",
    "Error",
    "getMakersForApp",
    "appName",
    "res",
    "getApplications",
    "_getConfig",
    "getLibraries",
    "defer",
    "addMessageIds"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/tool/cli/commands/Compile.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2017 Zenesis Ltd\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (john.spackman@zenesis.com, @johnspackman)\n\n************************************************************************ */\n\nconst process = require(\"process\");\nconst Gauge = require(\"gauge\");\nconst semver = require(\"semver\");\nconst path = require(\"upath\");\nconst consoleControl = require(\"console-control-strings\");\nconst fs = qx.tool.utils.Promisify.fs;\n\nrequire(\"app-module-path\").addPath(process.cwd() + \"/node_modules\");\n\n/**\n * Handles compilation of the project\n */\nqx.Class.define(\"qx.tool.cli.commands.Compile\", {\n  extend: qx.tool.cli.commands.Command,\n\n  statics: {\n    YARGS_BUILDER: {\n      target: {\n        alias: \"t\",\n        describe:\n          \"Set the target type: source or build or class name. Default is first target in config file\",\n        requiresArg: true,\n        type: \"string\"\n      },\n\n      \"output-path-prefix\": {\n        describe:\n          \"Sets a prefix for the output path of the target - used to compile a version into a non-standard directory\",\n        type: \"string\"\n      },\n\n      download: {\n        alias: \"d\",\n        describe: \"Whether to automatically download missing libraries\",\n        type: \"boolean\",\n        default: true\n      },\n\n      locale: {\n        alias: \"l\",\n        describe: \"Compile for a given locale\",\n        nargs: 1,\n        requiresArg: true,\n        type: \"string\",\n        array: true\n      },\n\n      \"update-po-files\": {\n        alias: \"u\",\n        describe:\n          \"enables detection of translations and writing them out into .po files\",\n        type: \"boolean\",\n        default: false\n      },\n\n      \"library-po\": {\n        describe: \"The policy for updating translations in libraries\",\n        type: [\"ignore\", \"untranslated\", \"all\"],\n        default: \"ignore\"\n      },\n\n      \"write-all-translations\": {\n        describe:\n          \"enables output of all translations, not just those that are explicitly referenced\",\n        type: \"boolean\"\n      },\n\n      \"app-class\": {\n        describe: \"sets the application class\",\n        nargs: 1,\n        requiresArg: true,\n        type: \"string\"\n      },\n\n      \"app-theme\": {\n        describe: \"sets the theme class for the current application\",\n        nargs: 1,\n        requiresArg: true,\n        type: \"string\"\n      },\n\n      \"app-name\": {\n        describe: \"sets the name of the current application\",\n        nargs: 1,\n        requiresArg: true,\n        type: \"string\"\n      },\n\n      \"app-group\": {\n        describe: \"which application groups to compile (defaults to all)\",\n        nargs: 1,\n        requiresArg: true,\n        type: \"string\"\n      },\n\n      watch: {\n        describe: \"enables watching for changes and continuous compilation\",\n        type: \"boolean\",\n        alias: \"w\"\n      },\n\n      \"watch-debug\": {\n        describe: \"enables debug messages for watching\",\n        type: \"boolean\"\n      },\n\n      \"machine-readable\": {\n        alias: \"M\",\n        describe: \"output compiler messages in machine-readable format\",\n        type: \"boolean\"\n      },\n\n      minify: {\n        alias: \"m\",\n        describe: \"disables minification (build targets only)\",\n        choices: [\"off\", \"minify\", \"mangle\", \"beautify\"],\n        default: \"mangle\"\n      },\n\n      \"mangle-privates\": {\n        describe: \"Whether to mangle private variables\",\n        default: true,\n        type: \"boolean\"\n      },\n\n      \"save-source-in-map\": {\n        describe: \"Saves the source code in the map file (build target only)\",\n        type: \"boolean\",\n        default: false\n      },\n\n      \"source-map-relative-paths\": {\n        describe:\n          \"If true, the source file will be saved in the map file if the target supports it. Can be overridden on a per application basis.\",\n        type: \"boolean\",\n        default: false\n      },\n\n      \"save-unminified\": {\n        alias: \"u\",\n        describe:\n          \"Saves a copy of the unminified version of output files (build target only)\",\n        type: \"boolean\",\n        default: false\n      },\n\n      \"inline-external-scripts\": {\n        describe: \"Inlines external Javascript\",\n        type: \"boolean\"\n      },\n\n      erase: {\n        alias: \"e\",\n        describe:\n          \"Enabled automatic deletion of the output directory when compiler version or environment variables change\",\n        type: \"boolean\",\n        default: true\n      },\n\n      feedback: {\n        describe: \"Shows gas-gauge feedback\",\n        type: \"boolean\",\n        alias: \"f\"\n      },\n\n      typescript: {\n        alias: \"T\",\n        describe: \"Outputs typescript definitions in qooxdoo.d.ts\",\n        type: \"boolean\"\n      },\n\n      \"add-created-at\": {\n        describe: \"Adds code to populate object's $$createdAt\",\n        type: \"boolean\"\n      },\n\n      clean: {\n        alias: \"D\",\n        describe: \"Deletes the target dir before compile\",\n        type: \"boolean\"\n      },\n\n      \"warn-as-error\": {\n        alias: \"E\",\n        describe: \"Handle compiler warnings as error\",\n        type: \"boolean\",\n        default: false\n      },\n\n      \"write-library-info\": {\n        alias: \"I\",\n        describe: \"Write library information to the script, for reflection\",\n        type: \"boolean\",\n        default: true\n      },\n\n      \"write-compile-info\": {\n        describe:\n          \"Write application summary information to the script, used mostly for unit tests\",\n        type: \"boolean\",\n        default: false\n      },\n\n      bundling: {\n        alias: \"b\",\n        describe: \"Whether bundling is enabled\",\n        type: \"boolean\",\n        default: true\n      }\n    },\n\n    getYargsCommand() {\n      return {\n        command: \"compile\",\n        describe: \"compiles the current application, using compile.json\",\n        builder: qx.tool.cli.commands.Compile.YARGS_BUILDER\n      };\n    }\n  },\n\n  events: {\n    /**\n     * Fired when application writing starts\n     */\n    writingApplications: \"qx.event.type.Event\",\n\n    /**\n     * Fired when writing of single application starts; data is an object containing:\n     *   maker {qx.tool.compiler.makers.Maker}\n     *   target {qx.tool.compiler.targets.Target}\n     *   appMeta {qx.tool.compiler.targets.meta.ApplicationMeta}\n     */\n    writingApplication: \"qx.event.type.Data\",\n\n    /**\n     * Fired when writing of single application is complete; data is an object containing:\n     *   maker {qx.tool.compiler.makers.Maker}\n     *   target {qx.tool.compiler.targets.Target}\n     *   appMeta {qx.tool.compiler.targets.meta.ApplicationMeta}\n     *\n     * Note that target.getAppMeta() will return null after this event has been fired\n     */\n    writtenApplication: \"qx.event.type.Data\",\n\n    /**\n     * Fired after writing of all applications; data is an object containing an array,\n     * each of which has previously been passed with `writeApplication`:\n     *   maker {qx.tool.compiler.makers.Maker}\n     *   target {qx.tool.compiler.targets.Target}\n     *   appMeta {qx.tool.compiler.targets.meta.ApplicationMeta}\n     *\n     * Note that target.getAppMeta() will return null after this event has been fired\n     */\n\n    writtenApplications: \"qx.event.type.Data\",\n\n    /**\n     * Fired when a class is about to be compiled.\n     *\n     * The event data is an object with the following properties:\n     *\n     * dbClassInfo: {Object} the newly populated class info\n     * oldDbClassInfo: {Object} the previous populated class info\n     * classFile - {ClassFile} the qx.tool.compiler.ClassFile instance\n     */\n    compilingClass: \"qx.event.type.Data\",\n\n    /**\n     * Fired when a class is compiled.\n     *\n     * The event data is an object with the following properties:\n     * dbClassInfo: {Object} the newly populated class info\n     * oldDbClassInfo: {Object} the previous populated class info\n     * classFile - {ClassFile} the qx.tool.compiler.ClassFile instance\n     */\n    compiledClass: \"qx.event.type.Data\",\n\n    /**\n     * Fired when the database is been saved\n     *\n     *  data:\n     * database: {Object} the database to save\n     */\n    saveDatabase: \"qx.event.type.Data\",\n\n    /**\n     * Fired after all enviroment data is collected\n     *\n     * The event data is an object with the following properties:\n     *  application {qx.tool.compiler.app.Application} the app\n     *  enviroment: {Object} enviroment data\n     */\n    checkEnvironment: \"qx.event.type.Data\",\n\n    /**\n     * Fired when making of apps begins\n     */\n    making: \"qx.event.type.Event\",\n\n    /**\n     * Fired when making of apps is done.\n     */\n    made: \"qx.event.type.Event\",\n\n    /**\n     * Fired when minification begins.\n     *\n     * The event data is an object with the following properties:\n     *  application {qx.tool.compiler.app.Application} the app being minified\n     *  part: {String} the part being minified\n     *  filename: {String} the part filename\n     */\n    minifyingApplication: \"qx.event.type.Data\",\n\n    /**\n     * Fired when minification is done.\n     *\n     * The event data is an object with the following properties:\n     *  application {qx.tool.compiler.app.Application} the app being minified\n     *  part: {String} the part being minified\n     *  filename: {String} the part filename\n     */\n    minifiedApplication: \"qx.event.type.Data\"\n  },\n\n  members: {\n    __gauge: null,\n    __makers: null,\n    __config: null,\n    __libraries: null,\n    __outputDirWasCreated: false,\n\n    /*\n     * @Override\n     */\n    async process() {\n      await super.process();\n\n      let configDb = await qx.tool.cli.ConfigDb.getInstance();\n      if (this.argv[\"feedback\"] === null) {\n        this.argv[\"feedback\"] = configDb.db(\"qx.default.feedback\", true);\n      }\n\n      if (this.argv.verbose) {\n        console.log(`\nCompiler:  v${this.getCompilerVersion()} in ${require.main.filename}\nFramework: v${await this.getQxVersion()} in ${await this.getQxPath()}`);\n      }\n\n      if (this.argv[\"machine-readable\"]) {\n        qx.tool.compiler.Console.getInstance().setMachineReadable(true);\n      } else {\n        let configDb = await qx.tool.cli.ConfigDb.getInstance();\n        let color = configDb.db(\"qx.default.color\", null);\n        if (color) {\n          let colorOn = consoleControl.color(color.split(\" \"));\n          process.stdout.write(colorOn + consoleControl.eraseLine());\n          let colorReset = consoleControl.color(\"reset\");\n          process.on(\"exit\", () =>\n            process.stdout.write(colorReset + consoleControl.eraseLine())\n          );\n\n          let Console = qx.tool.compiler.Console.getInstance();\n          Console.setColorOn(colorOn);\n        }\n\n        if (this.argv[\"feedback\"]) {\n          var themes = require(\"gauge/themes\");\n          var ourTheme = themes.newTheme(\n            themes({ hasUnicode: true, hasColor: true })\n          );\n\n          let colorOn = qx.tool.compiler.Console.getInstance().getColorOn();\n          ourTheme.preProgressbar = colorOn + ourTheme.preProgressbar;\n          ourTheme.preSubsection = colorOn + ourTheme.preSubsection;\n          ourTheme.progressbarTheme.postComplete += colorOn;\n          ourTheme.progressbarTheme.postRemaining += colorOn;\n\n          this.__gauge = new Gauge();\n          this.__gauge.setTheme(ourTheme);\n          this.__gauge.show(\"Compiling\", 0);\n          const TYPES = {\n            error: \"ERROR\",\n            warning: \"Warning\"\n          };\n\n          qx.tool.compiler.Console.getInstance().setWriter((str, msgId) => {\n            msgId = qx.tool.compiler.Console.MESSAGE_IDS[msgId];\n            if (!msgId || msgId.type !== \"message\") {\n              this.__gauge.hide();\n              qx.tool.compiler.Console.log(\n                colorOn + TYPES[(msgId || {}).type || \"error\"] + \": \" + str\n              );\n\n              this.__gauge.show();\n            } else {\n              this.__gauge.show(colorOn + str);\n            }\n          });\n        }\n      }\n\n      if (this.__gauge) {\n        this.addListener(\"writingApplications\", () =>\n          this.__gauge.show(\"Writing Applications\", 0)\n        );\n\n        this.addListener(\"writtenApplications\", () =>\n          this.__gauge.show(\"Writing Applications\", 1)\n        );\n\n        this.addListener(\"writingApplication\", evt =>\n          this.__gauge.pulse(\n            \"Writing Application \" +\n              evt.getData().appMeta.getApplication().getName()\n          )\n        );\n\n        this.addListener(\"compilingClass\", evt =>\n          this.__gauge.pulse(\n            \"Compiling \" + evt.getData().classFile.getClassName()\n          )\n        );\n\n        this.addListener(\"minifyingApplication\", evt =>\n          this.__gauge.pulse(\n            \"Minifying \" +\n              evt.getData().application.getName() +\n              \" \" +\n              evt.getData().filename\n          )\n        );\n      } else {\n        this.addListener(\"writingApplication\", evt => {\n          let appInfo = evt.getData();\n          qx.tool.compiler.Console.print(\n            \"qx.tool.cli.compile.writingApplication\",\n            appInfo.appMeta.getApplication().getName()\n          );\n        });\n        this.addListener(\"minifyingApplication\", evt =>\n          qx.tool.compiler.Console.print(\n            \"qx.tool.cli.compile.minifyingApplication\",\n            evt.getData().application.getName(),\n            evt.getData().filename\n          )\n        );\n      }\n\n      this.addListener(\"making\", evt => {\n        if (this.__gauge) {\n          this.__gauge.show(\"Compiling\", 1);\n        } else {\n          qx.tool.compiler.Console.print(\"qx.tool.cli.compile.makeBegins\");\n        }\n      });\n\n      this.addListener(\"made\", evt => {\n        if (this.__gauge) {\n          this.__gauge.show(\"Compiling\", 1);\n        } else {\n          qx.tool.compiler.Console.print(\"qx.tool.cli.compile.makeEnds\");\n        }\n      });\n\n      this.addListener(\"writtenApplications\", e => {\n        if (this.argv.verbose) {\n          qx.tool.compiler.Console.log(\n            \"\\nCompleted all applications, libraries used are:\"\n          );\n\n          Object.values(this.__libraries).forEach(lib =>\n            qx.tool.compiler.Console.log(\n              `   ${lib.getNamespace()} (${lib.getRootDir()})`\n            )\n          );\n        }\n      });\n\n      await this._loadConfigAndStartMaking();\n\n      if (!this.argv.watch) {\n        let success = this.__makers.every(maker => maker.getSuccess());\n        let hasWarnings = this.__makers.every(maker => maker.getHasWarnings());\n        if (success && hasWarnings && this.argv.warnAsError) {\n          success = false;\n        }\n        if (\n          !this.argv.deploying &&\n          !this.argv[\"machine-readable\"] &&\n          this.argv[\"feedback\"] &&\n          this.__outputDirWasCreated &&\n          this.argv.target === \"build\"\n        ) {\n          qx.tool.compiler.Console.warn(\n            \"   *******************************************************************************************\\n\" +\n              \"   **                                                                                       **\\n\" +\n              \"   **  Your compilation will include temporary files that are only necessary during         **\\n\" +\n              \"   **  development; these files speed up the compilation, but take up space that you would  **\\n\" +\n              \"   **  probably not want to put on a production server.                                     **\\n\" +\n              \"   **                                                                                       **\\n\" +\n              \"   **  When you are ready to deploy, try running `qx deploy` to get a minimised version     **\\n\" +\n              \"   **                                                                                       **\\n\" +\n              \"   *******************************************************************************************\"\n          );\n        }\n        process.exitCode = success ? 0 : 1;\n      }\n    },\n\n    /**\n     * Loads the configuration and starts the make\n     *\n     * @return {Boolean} true if all makers succeeded\n     */\n    async _loadConfigAndStartMaking() {\n      var config = (this.__config =\n        await qx.tool.cli.Cli.getInstance().getParsedArgs());\n      if (!config) {\n        throw new qx.tool.utils.Utils.UserError(\n          \"Error: Cannot find any configuration\"\n        );\n      }\n      var makers = (this.__makers = await this.createMakersFromConfig(config));\n      if (!makers || !makers.length) {\n        throw new qx.tool.utils.Utils.UserError(\n          \"Error: Cannot find anything to make\"\n        );\n      }\n\n      let countMaking = 0;\n      const collateDispatchEvent = evt => {\n        if (countMaking == 1) {\n          this.dispatchEvent(evt.clone());\n        }\n      };\n\n      await qx.Promise.all(\n        makers.map(async maker => {\n          var analyser = maker.getAnalyser();\n          let cfg = await qx.tool.cli.ConfigDb.getInstance();\n          analyser.setWritePoLineNumbers(\n            cfg.db(\"qx.translation.strictPoCompatibility\", false)\n          );\n\n          if (!(await fs.existsAsync(maker.getOutputDir()))) {\n            this.__outputDirWasCreated = true;\n          }\n          if (this.argv[\"clean\"]) {\n            await maker.eraseOutputDir();\n            await qx.tool.utils.files.Utils.safeUnlink(\n              analyser.getDbFilename()\n            );\n\n            await qx.tool.utils.files.Utils.safeUnlink(\n              analyser.getResDbFilename()\n            );\n          }\n          if (config.ignores) {\n            analyser.setIgnores(config.ignores);\n          }\n\n          var target = maker.getTarget();\n          analyser.addListener(\"compilingClass\", e =>\n            this.dispatchEvent(e.clone())\n          );\n\n          analyser.addListener(\"compiledClass\", e =>\n            this.dispatchEvent(e.clone())\n          );\n\n          analyser.addListener(\"saveDatabase\", e =>\n            this.dispatchEvent(e.clone())\n          );\n\n          target.addListener(\"checkEnvironment\", e =>\n            this.dispatchEvent(e.clone())\n          );\n\n          let appInfos = [];\n          target.addListener(\"writingApplication\", async () => {\n            let appInfo = {\n              maker,\n              target,\n              appMeta: target.getAppMeta()\n            };\n\n            appInfos.push(appInfo);\n            await this.fireDataEventAsync(\"writingApplication\", appInfo);\n          });\n          target.addListener(\"writtenApplication\", async () => {\n            await this.fireDataEventAsync(\"writtenApplication\", {\n              maker,\n              target,\n              appMeta: target.getAppMeta()\n            });\n          });\n          maker.addListener(\"writingApplications\", collateDispatchEvent);\n          maker.addListener(\"writtenApplications\", async () => {\n            await this.fireDataEventAsync(\"writtenApplications\", appInfos);\n          });\n\n          if (target instanceof qx.tool.compiler.targets.BuildTarget) {\n            target.addListener(\"minifyingApplication\", e =>\n              this.dispatchEvent(e.clone())\n            );\n\n            target.addListener(\"minifiedApplication\", e =>\n              this.dispatchEvent(e.clone())\n            );\n          }\n\n          let stat = await qx.tool.utils.files.Utils.safeStat(\n            \"source/index.html\"\n          );\n\n          if (stat) {\n            qx.tool.compiler.Console.print(\n              \"qx.tool.cli.compile.legacyFiles\",\n              \"source/index.html\"\n            );\n          }\n\n          // Simple one of make\n          if (!this.argv.watch) {\n            maker.addListener(\"making\", () => {\n              countMaking++;\n              if (countMaking == 1) {\n                this.fireEvent(\"making\");\n              }\n            });\n            maker.addListener(\"made\", () => {\n              countMaking--;\n              if (countMaking == 0) {\n                this.fireEvent(\"made\");\n              }\n            });\n\n            return await maker.make();\n          }\n\n          // Continuous make\n          let watch = new qx.tool.cli.Watch(maker);\n          config.applications.forEach(appConfig => {\n            if (appConfig.runWhenWatching) {\n              watch.setRunWhenWatching(\n                appConfig.name,\n                appConfig.runWhenWatching\n              );\n            }\n          });\n          if (this.argv[\"watch-debug\"]) {\n            watch.setDebug(true);\n          }\n\n          watch.addListener(\"making\", () => {\n            countMaking++;\n            if (countMaking == 1) {\n              this.fireEvent(\"making\");\n            }\n          });\n          watch.addListener(\"made\", () => {\n            countMaking--;\n            if (countMaking == 0) {\n              this.fireEvent(\"made\");\n            }\n          });\n          watch.addListener(\"configChanged\", async () => {\n            await watch.stop();\n            setImmediate(() => this._loadConfigAndStartMaking());\n          });\n          let arr = [this._compileJsFilename, this._compileJsonFilename].filter(\n            str => Boolean(str)\n          );\n\n          watch.setConfigFilenames(arr);\n          return await watch.start();\n        })\n      );\n    },\n\n    /**\n     * Processes the configuration from a JSON data structure and creates a Maker\n     *\n     * @param data {Map}\n     * @return {Maker}\n     */\n    async createMakersFromConfig(data) {\n      const Console = qx.tool.compiler.Console.getInstance();\n      var t = this;\n      if (data.babelOptions) {\n        if (!data?.babel?.options) {\n          data.babel = data.babel || {};\n          data.babel.options = data.babelOptions;\n          qx.tool.compiler.Console.print(\n            \"qx.tool.cli.compile.deprecatedBabelOptions\"\n          );\n        } else {\n          qx.tool.compiler.Console.print(\n            \"qx.tool.cli.compile.deprecatedBabelOptionsConflicting\"\n          );\n        }\n        delete data.babelOptions;\n      }\n\n      var argvAppNames = null;\n      if (t.argv[\"app-name\"]) {\n        argvAppNames = {};\n        t.argv[\"app-name\"]\n          .split(\",\")\n          .forEach(name => (argvAppNames[name] = true));\n      }\n      var argvAppGroups = null;\n      if (t.argv[\"app-group\"]) {\n        argvAppGroups = {};\n        t.argv[\"app-group\"]\n          .split(\",\")\n          .forEach(name => (argvAppGroups[name] = true));\n      }\n\n      /*\n       * Calculate the the list of targets and applications; this is a many to many list, where an\n       * application can be compiled for many targets, and each target has many applications.\n       *\n       * Each target configuration is updated to have `appConfigs[]` and each application configuration\n       * is updated to have `targetConfigs[]`.\n       */\n      data.targets.forEach(\n        (targetConfig, index) => (targetConfig.index = index)\n      );\n\n      let targetConfigs = [];\n      let defaultTargetConfig = null;\n      data.targets.forEach(targetConfig => {\n        if (targetConfig.type === data.targetType) {\n          if (\n            !targetConfig[\"application-names\"] &&\n            !targetConfig[\"application-types\"]\n          ) {\n            if (defaultTargetConfig) {\n              qx.tool.compiler.Console.print(\n                \"qx.tool.cli.compile.multipleDefaultTargets\"\n              );\n            } else {\n              defaultTargetConfig = targetConfig;\n            }\n          } else {\n            targetConfigs.push(targetConfig);\n          }\n        }\n      });\n\n      let allAppNames = {};\n      data.applications.forEach((appConfig, index) => {\n        if (appConfig.name) {\n          if (allAppNames[appConfig.name]) {\n            throw new qx.tool.utils.Utils.UserError(\n              `Multiple applications with the same name '${appConfig.name}'`\n            );\n          }\n          allAppNames[appConfig.name] = appConfig;\n        }\n        if (appConfig.group) {\n          if (typeof appConfig.group == \"string\") {\n            appConfig.group = [appConfig.group];\n          }\n        }\n        appConfig.index = index;\n        let appType = appConfig.type || \"browser\";\n        let appTargetConfigs = targetConfigs.filter(targetConfig => {\n          let appTypes = targetConfig[\"application-types\"];\n          if (appTypes && !qx.lang.Array.contains(appTypes, appType)) {\n            return false;\n          }\n\n          let appNames = targetConfig[\"application-names\"];\n          if (\n            appConfig.name &&\n            appNames &&\n            !qx.lang.Array.contains(appNames, appConfig.name)\n          ) {\n            return false;\n          }\n          return true;\n        });\n\n        if (appTargetConfigs.length == 0) {\n          if (defaultTargetConfig) {\n            appTargetConfigs = [defaultTargetConfig];\n          } else {\n            throw new qx.tool.utils.Utils.UserError(\n              `Cannot find any suitable targets for application #${index} (named ${\n                appConfig.name || \"unnamed\"\n              })`\n            );\n          }\n        }\n\n        appTargetConfigs.forEach(targetConfig => {\n          if (!targetConfig.appConfigs) {\n            targetConfig.appConfigs = [];\n          }\n          targetConfig.appConfigs.push(appConfig);\n          if (!appConfig.targetConfigs) {\n            appConfig.targetConfigs = [];\n          }\n          appConfig.targetConfigs.push(targetConfig);\n        });\n      });\n      if (defaultTargetConfig && defaultTargetConfig.appConfigs) {\n        targetConfigs.push(defaultTargetConfig);\n      }\n\n      let libraries = (this.__libraries = {});\n      await qx.Promise.all(\n        data.libraries.map(async libPath => {\n          var library = await qx.tool.compiler.app.Library.createLibrary(\n            libPath\n          );\n\n          libraries[library.getNamespace()] = library;\n        })\n      );\n\n      // Search for Qooxdoo library if not already provided\n      var qxLib = libraries[\"qx\"];\n      if (!qxLib) {\n        let qxPath = await qx.tool.config.Utils.getQxPath();\n        var library = await qx.tool.compiler.app.Library.createLibrary(qxPath);\n        libraries[library.getNamespace()] = library;\n        qxLib = libraries[\"qx\"];\n      }\n      if (this.argv.verbose) {\n        Console.log(\"Qooxdoo found in \" + qxLib.getRootDir());\n      }\n      let errors = await this.__checkDependencies(\n        Object.values(libraries),\n        data.packages\n      );\n\n      if (errors.length > 0) {\n        if (this.argv.warnAsError) {\n          throw new qx.tool.utils.Utils.UserError(errors.join(\"\\n\"));\n        } else {\n          qx.tool.compiler.Console.log(errors.join(\"\\n\"));\n        }\n      }\n\n      /*\n       * Figure out which will be the default application; this will need some work for situations\n       * where there are multiple browser based targets\n       */\n      targetConfigs.forEach(targetConfig => {\n        let hasExplicitDefaultApp = false;\n        targetConfig.defaultAppConfig = null;\n        if (targetConfig.appConfigs) {\n          targetConfig.appConfigs.forEach(appConfig => {\n            if (appConfig.type && appConfig.type != \"browser\") {\n              return;\n            }\n\n            let setDefault;\n            if (appConfig.writeIndexHtmlToRoot !== undefined) {\n              qx.tool.compiler.Console.print(\n                \"qx.tool.cli.compile.deprecatedCompileSeeOther\",\n                \"application.writeIndexHtmlToRoot\",\n                \"application.default\"\n              );\n\n              setDefault = appConfig.writeIndexHtmlToRoot;\n            } else if (appConfig[\"default\"] !== undefined) {\n              setDefault = appConfig[\"default\"];\n            }\n\n            if (setDefault !== undefined) {\n              if (setDefault) {\n                if (hasExplicitDefaultApp) {\n                  throw new qx.tool.utils.Utils.UserError(\n                    \"Error: Can only set one application to be the default application!\"\n                  );\n                }\n                hasExplicitDefaultApp = true;\n                targetConfig.defaultAppConfig = appConfig;\n              }\n            } else if (!targetConfig.defaultAppConfig) {\n              targetConfig.defaultAppConfig = appConfig;\n            }\n          });\n          if (!hasExplicitDefaultApp && targetConfig.appConfigs.length > 1) {\n            targetConfig.defaultAppConfig = targetConfig.appConfigs[0];\n          }\n        }\n      });\n\n      /*\n       * There is still only one target per maker, so convert our list of targetConfigs into an array of makers\n       */\n      let targetOutputPaths = {};\n      let makers = [];\n\n      targetConfigs.forEach(targetConfig => {\n        if (!targetConfig.appConfigs) {\n          qx.tool.compiler.Console.print(\n            \"qx.tool.cli.compile.unusedTarget\",\n            targetConfig.type,\n            targetConfig.index\n          );\n\n          return;\n        }\n        let appConfigs = targetConfig.appConfigs.filter(appConfig => {\n          if (argvAppGroups) {\n            let groups = appConfig.group || [];\n            if (!groups.find(groupName => !!argvAppGroups[groupName])) {\n              return false;\n            }\n          }\n          if (argvAppNames && appConfig.name) {\n            if (!argvAppNames[appConfig.name]) {\n              return false;\n            }\n          }\n          return true;\n        });\n        if (!appConfigs.length) {\n          return;\n        }\n\n        var outputPath = targetConfig.outputPath;\n        if (this.argv.outputPathPrefix) {\n          outputPath = path.join(this.argv.outputPathPrefix, outputPath);\n        }\n        if (!outputPath) {\n          throw new qx.tool.utils.Utils.UserError(\n            \"Missing output-path for target \" + targetConfig.type\n          );\n        }\n        let absOutputPath = path.resolve(outputPath);\n        if (targetOutputPaths[absOutputPath]) {\n          throw new qx.tool.utils.Utils.UserError(\n            `Multiple output targets share the same target directory ${outputPath} - each target output must be unique`\n          );\n        }\n        targetOutputPaths[absOutputPath] = true;\n\n        var maker = new qx.tool.compiler.makers.AppMaker();\n        if (!this.argv[\"erase\"]) {\n          maker.setNoErase(true);\n        }\n\n        var targetClass = targetConfig.targetClass\n          ? this.resolveTargetClass(targetConfig.targetClass)\n          : null;\n        if (!targetClass && targetConfig.type) {\n          targetClass = this.resolveTargetClass(targetConfig.type);\n        }\n        if (!targetClass) {\n          throw new qx.tool.utils.Utils.UserError(\n            \"Cannot find target class: \" +\n              (targetConfig.targetClass || targetConfig.type)\n          );\n        }\n        /* eslint-disable new-cap */\n        var target = new targetClass(outputPath);\n        /* eslint-enable new-cap */\n        if (targetConfig.uri) {\n          qx.tool.compiler.Console.print(\n            \"qx.tool.cli.compile.deprecatedUri\",\n            \"target.uri\",\n            targetConfig.uri\n          );\n        }\n        if (targetConfig.addTimestampsToUrls !== undefined) {\n          target.setAddTimestampsToUrls(targetConfig.addTimestampsToUrls);\n        } else {\n          target.setAddTimestampsToUrls(\n            target instanceof qx.tool.compiler.targets.BuildTarget\n          );\n        }\n        if (targetConfig.writeCompileInfo || this.argv.writeCompileInfo) {\n          target.setWriteCompileInfo(true);\n        }\n        if (data.i18nAsParts) {\n          target.setI18nAsParts(true);\n        }\n        target.setWriteLibraryInfo(this.argv.writeLibraryInfo);\n        target.setUpdatePoFiles(this.argv.updatePoFiles);\n        target.setLibraryPoPolicy(this.argv.libraryPo);\n\n        // Take the command line for `minify` as most precedent only if provided\n        var minify;\n        if (process.argv.indexOf(\"--minify\") > -1) {\n          minify = t.argv[\"minify\"];\n        }\n        minify = minify || targetConfig[\"minify\"] || t.argv[\"minify\"];\n        if (typeof minify == \"boolean\") {\n          minify = minify ? \"minify\" : \"off\";\n        }\n        if (!minify) {\n          minify = \"mangle\";\n        }\n        if (typeof target.setMinify == \"function\") {\n          target.setMinify(minify);\n        }\n\n        function chooseValue(...args) {\n          for (let i = 0; i < args.length; i++) {\n            if (args[i] !== undefined) {\n              return args[i];\n            }\n          }\n          return undefined;\n        }\n\n        // Take the command line for `saveSourceInMap` as most precedent only if provided\n        var saveSourceInMap = chooseValue(\n          targetConfig[\"save-source-in-map\"],\n          t.argv[\"saveSourceInMap\"]\n        );\n\n        if (\n          typeof saveSourceInMap == \"boolean\" &&\n          typeof target.setSaveSourceInMap == \"function\"\n        ) {\n          target.setSaveSourceInMap(saveSourceInMap);\n        }\n\n        var sourceMapRelativePaths = chooseValue(\n          targetConfig[\"source-map-relative-paths\"],\n          t.argv[\"sourceMapRelativePaths\"]\n        );\n\n        if (\n          typeof sourceMapRelativePaths == \"boolean\" &&\n          typeof target.setSourceMapRelativePaths == \"function\"\n        ) {\n          target.setSourceMapRelativePaths(sourceMapRelativePaths);\n        }\n\n        var saveUnminified = chooseValue(\n          targetConfig[\"save-unminified\"],\n          t.argv[\"save-unminified\"]\n        );\n\n        if (\n          typeof saveUnminified == \"boolean\" &&\n          typeof target.setSaveUnminified == \"function\"\n        ) {\n          target.setSaveUnminified(saveUnminified);\n        }\n\n        var inlineExternal = chooseValue(\n          targetConfig[\"inline-external-scripts\"],\n          t.argv[\"inline-external-scripts\"]\n        );\n\n        if (typeof inlineExternal == \"boolean\") {\n          target.setInlineExternalScripts(inlineExternal);\n        } else if (target instanceof qx.tool.compiler.targets.BuildTarget) {\n          target.setInlineExternalScripts(true);\n        }\n\n        var deployDir = targetConfig[\"deployPath\"];\n        if (deployDir && typeof target.setDeployDir == \"function\") {\n          target.setDeployDir(deployDir);\n        }\n\n        var deployMap = targetConfig[\"deploy-source-maps\"];\n        if (\n          typeof deployMap == \"boolean\" &&\n          typeof target.setDeployDir == \"function\"\n        ) {\n          target.setDeployMap(deployMap);\n        }\n\n        maker.setTarget(target);\n\n        var manglePrivates = chooseValue(\n          targetConfig[\"mangle-privates\"],\n          t.argv[\"mangle-privates\"]\n        );\n\n        if (typeof manglePrivates == \"string\") {\n          maker.getAnalyser().setManglePrivates(manglePrivates);\n        } else if (typeof manglePrivates == \"boolean\") {\n          if (manglePrivates) {\n            maker\n              .getAnalyser()\n              .setManglePrivates(\n                target instanceof qx.tool.compiler.targets.BuildTarget\n                  ? \"unreadable\"\n                  : \"readable\"\n              );\n          } else {\n            maker.getAnalyser().setManglePrivates(\"off\");\n          }\n        }\n\n        if (targetConfig[\"application-types\"]) {\n          maker\n            .getAnalyser()\n            .setApplicationTypes(targetConfig[\"application-types\"]);\n        }\n\n        maker.setLocales(data.locales || [\"en\"]);\n        if (data.writeAllTranslations) {\n          maker.setWriteAllTranslations(data.writeAllTranslations);\n        }\n\n        if (typeof targetConfig.typescript == \"string\") {\n          maker.set({\n            outputTypescript: true,\n            outputTypescriptTo: targetConfig.typescript\n          });\n        } else if (typeof targetConfig.typescript == \"boolean\") {\n          maker.set({ outputTypescript: true });\n        }\n        if (this.argv[\"typescript\"]) {\n          maker.set({ outputTypescript: true });\n        }\n\n        if (data.environment) {\n          maker.setEnvironment(data.environment);\n        }\n        if (targetConfig.environment) {\n          target.setEnvironment(targetConfig.environment);\n        }\n        if (targetConfig.preserveEnvironment) {\n          target.setPreserveEnvironment(targetConfig.preserveEnvironment);\n        }\n\n        if (data[\"path-mappings\"]) {\n          for (var from in data[\"path-mappings\"]) {\n            var to = data[\"path-mappings\"][from];\n            target.addPathMapping(from, to);\n          }\n        }\n\n        function mergeArray(dest, ...srcs) {\n          srcs.forEach(function (src) {\n            if (src) {\n              src.forEach(function (elem) {\n                if (!qx.lang.Array.contains(dest, src)) {\n                  dest.push(elem);\n                }\n              });\n            }\n          });\n          return dest;\n        }\n\n        let babelConfig = qx.lang.Object.clone(data.babel || {}, true);\n        babelConfig.options = babelConfig.options || {};\n        qx.lang.Object.mergeWith(\n          babelConfig.options,\n          targetConfig.babelOptions || {}\n        );\n\n        maker.getAnalyser().setBabelConfig(babelConfig);\n\n        var addCreatedAt =\n          targetConfig[\"addCreatedAt\"] || t.argv[\"addCreatedAt\"];\n        if (addCreatedAt) {\n          maker.getAnalyser().setAddCreatedAt(true);\n        }\n\n        for (let ns in libraries) {\n          maker.getAnalyser().addLibrary(libraries[ns]);\n        }\n\n        let allApplicationTypes = {};\n        appConfigs.forEach(appConfig => {\n          var app = (appConfig.app = new qx.tool.compiler.app.Application(\n            appConfig[\"class\"]\n          ));\n\n          app.setTemplatePath(qx.tool.utils.Utils.getTemplateDir());\n\n          [\n            \"type\",\n            \"theme\",\n            \"name\",\n            \"environment\",\n            \"outputPath\",\n            \"bootPath\",\n            \"loaderTemplate\",\n            \"publish\",\n            \"deploy\",\n            \"standalone\"\n          ].forEach(name => {\n            if (appConfig[name] !== undefined) {\n              var fname = \"set\" + qx.lang.String.firstUp(name);\n              app[fname](appConfig[name]);\n            }\n          });\n          allApplicationTypes[app.getType()] = true;\n          if (appConfig.uri) {\n            qx.tool.compiler.Console.print(\n              \"qx.tool.cli.compile.deprecatedUri\",\n              \"application.uri\",\n              appConfig.uri\n            );\n          }\n          if (appConfig.title) {\n            app.setTitle(appConfig.title);\n          }\n          if (appConfig.description) {\n            app.setDescription(appConfig.description);\n          }\n\n          var parts = appConfig.parts || targetConfig.parts || data.parts;\n          if (parts) {\n            if (!parts.boot) {\n              throw new qx.tool.utils.Utils.UserError(\n                \"Cannot determine a boot part for application \" +\n                  (appConfig.index + 1) +\n                  \" \" +\n                  (appConfig.name || \"\")\n              );\n            }\n            for (var partName in parts) {\n              var partData = parts[partName];\n              var include =\n                typeof partData.include == \"string\"\n                  ? [partData.include]\n                  : partData.include;\n              var exclude =\n                typeof partData.exclude == \"string\"\n                  ? [partData.exclude]\n                  : partData.exclude;\n              var part = new qx.tool.compiler.app.Part(\n                partName,\n                include,\n                exclude\n              ).set({\n                combine: Boolean(partData.combine),\n                minify: Boolean(partData.minify)\n              });\n\n              app.addPart(part);\n            }\n          }\n\n          if (target.getType() == \"source\" && t.argv.bundling) {\n            var bundle = appConfig.bundle || targetConfig.bundle || data.bundle;\n            if (bundle) {\n              if (bundle.include) {\n                app.setBundleInclude(bundle.include);\n              }\n              if (bundle.exclude) {\n                app.setBundleExclude(bundle.exclude);\n              }\n            }\n          }\n\n          app.set({\n            exclude: mergeArray(\n              [],\n              data.exclude,\n              targetConfig.exclude,\n              appConfig.exclude\n            ),\n\n            include: mergeArray(\n              [],\n              data.include,\n              targetConfig.include,\n              appConfig.include\n            )\n          });\n\n          maker.addApplication(app);\n        });\n\n        const CF = qx.tool.compiler.ClassFile;\n        let globalSymbols = [];\n        qx.lang.Array.append(globalSymbols, CF.QX_GLOBALS);\n        qx.lang.Array.append(globalSymbols, CF.COMMON_GLOBALS);\n        if (allApplicationTypes[\"browser\"]) {\n          qx.lang.Array.append(globalSymbols, CF.BROWSER_GLOBALS);\n        }\n        if (allApplicationTypes[\"node\"]) {\n          qx.lang.Array.append(globalSymbols, CF.NODE_GLOBALS);\n        }\n        if (allApplicationTypes[\"rhino\"]) {\n          qx.lang.Array.append(globalSymbols, CF.RHINO_GLOBALS);\n        }\n        maker.getAnalyser().setGlobalSymbols(globalSymbols);\n\n        if (\n          targetConfig.defaultAppConfig &&\n          targetConfig.defaultAppConfig.app &&\n          (targetConfig.defaultAppConfig.type || \"browser\") === \"browser\"\n        ) {\n          targetConfig.defaultAppConfig.app.setWriteIndexHtmlToRoot(true);\n        } else {\n          qx.tool.utils.files.Utils.safeUnlink(\n            target.getOutputDir() + \"index.html\"\n          );\n        }\n\n        const showMarkers = (classname, markers) => {\n          if (markers) {\n            markers.forEach(function (marker) {\n              var str = qx.tool.compiler.Console.decodeMarker(marker);\n              Console.warn(classname + \": \" + str);\n            });\n          }\n        };\n\n        // Note - this will cause output multiple times, once per maker/target; but this is largely unavoidable\n        //  because different targets can cause different warnings for the same code due to different compilation\n        //  options (eg node vs browser)\n        maker.getAnalyser().addListener(\"compiledClass\", evt => {\n          var data = evt.getData();\n          showMarkers(data.classFile.getClassName(), data.dbClassInfo.markers);\n        });\n        maker.getAnalyser().addListener(\"alreadyCompiledClass\", evt => {\n          var data = evt.getData();\n          showMarkers(data.className, data.dbClassInfo.markers);\n        });\n\n        makers.push(maker);\n      });\n\n      return makers;\n    },\n\n    /**\n     * Checks the dependencies of the current library\n     * @param  {qx.tool.compiler.app.Library[]} libs\n     *    The list of libraries to check\n     * @param {Object|*} packages\n     *    If given, an object mapping library uris to library paths\n     * @return {Promise<Array>} Array of error messages\n     * @private\n     */\n    async __checkDependencies(libs, packages) {\n      const Console = qx.tool.compiler.Console.getInstance();\n      let errors = [];\n      // check all requires\n      for (let lib of libs) {\n        let requires = lib.getRequires();\n        if (!requires) {\n          requires = {};\n        }\n        if (!packages) {\n          packages = {};\n        }\n        // check for qooxdoo-range\n        let range = lib.getLibraryInfo()[\"qooxdoo-range\"];\n        if (range) {\n          if (this.argv.verbose) {\n            Console.warn(\n              `${lib.getNamespace()}: The configuration setting \"qooxdoo-range\" in Manifest.json has been deprecated in favor of \"requires.@qooxdoo/framework\".`\n            );\n          }\n          if (!requires[\"@qooxdoo/framework\"]) {\n            requires[\"@qooxdoo/framework\"] = range;\n          }\n        }\n\n        // Find the libraries that we need, not including the libraries which we have been given explicitly\n        //  in the compile.json's `libraries` property\n        let requires_uris = Object.getOwnPropertyNames(requires).filter(\n          uri => !libs.find(lib => lib.getLibraryInfo().name === uri)\n        );\n\n        let urisToInstall = requires_uris.filter(\n          name => name !== \"@qooxdoo/framework\" && name !== \"@qooxdoo/compiler\"\n        );\n\n        let pkg_libs = Object.getOwnPropertyNames(packages);\n        if (urisToInstall.length > 0 && pkg_libs.length === 0) {\n          // if we don't have package data\n          if (this.argv.download) {\n            if (!fs.existsSync(qx.tool.config.Manifest.config.fileName)) {\n              Console.error(\n                \"Libraries are missing and there is no Manifest.json in the current directory so we cannot attempt to install them; the missing libraries are: \\n     \" +\n                  urisToInstall.join(\"\\n     \") +\n                  \"\\nThe library which refers to the missing libraries is \" +\n                  lib.getNamespace() +\n                  \" in \" +\n                  lib.getRootDir()\n              );\n\n              process.exit(1);\n            }\n            // but we're instructed to download the libraries\n            if (this.argv.verbose) {\n              Console.info(\n                `>>> Installing latest compatible version of libraries ${urisToInstall.join(\n                  \", \"\n                )}...`\n              );\n            }\n            const installer = new qx.tool.cli.commands.package.Install({\n              verbose: this.argv.verbose,\n              save: false // save to lockfile only, not to manifest\n            });\n            await installer.process();\n            throw new qx.tool.utils.Utils.UserError(\n              `Library ${lib.getNamespace()} requires ${urisToInstall.join(\n                \",\"\n              )} - we have tried to download and install these additional libraries, please restart the compilation.`\n            );\n          } else {\n            throw new qx.tool.utils.Utils.UserError(\n              \"No library information available. Try 'qx compile --download'\"\n            );\n          }\n        }\n\n        for (let reqUri of requires_uris) {\n          let requiredRange = requires[reqUri];\n          const rangeIsCommitHash = /^[0-9a-f]{40}$/.test(requiredRange);\n          switch (reqUri) {\n            case \"@qooxdoo/compiler\":\n              // ignore\n              break;\n            case \"@qooxdoo/framework\": {\n              let qxVersion = await this.getQxVersion();\n              if (\n                !semver.satisfies(qxVersion, requiredRange, { loose: true })\n              ) {\n                errors.push(\n                  `${lib.getNamespace()}: Needs @qooxdoo/framework version ${requiredRange}, found ${qxVersion}`\n                );\n              }\n              break;\n            }\n            // github repository release or commit-ish identifier\n            default: {\n              let l = libs.find(\n                entry =>\n                  path.relative(\"\", entry.getRootDir()) === packages[reqUri]\n              );\n\n              if (!l) {\n                errors.push(\n                  `${lib.getNamespace()}: Cannot find required library '${reqUri}'`\n                );\n\n                break;\n              }\n              // github release of a package\n              let libVersion = l.getLibraryInfo().version;\n              if (!semver.valid(libVersion, { loose: true })) {\n                if (!this.argv.quiet) {\n                  Console.warn(\n                    `${reqUri}: Version is not valid: ${libVersion}`\n                  );\n                }\n              } else if (rangeIsCommitHash) {\n                if (!this.argv.quiet) {\n                  Console.warn(\n                    `${reqUri}: Cannot check whether commit hash ${requiredRange} corresponds to version ${libVersion}`\n                  );\n                }\n              } else if (\n                !semver.satisfies(libVersion, requiredRange, { loose: true })\n              ) {\n                errors.push(\n                  `${lib.getNamespace()}: Needs ${reqUri} version ${requiredRange}, found ${libVersion}`\n                );\n              }\n              break;\n            }\n          }\n        }\n      }\n      return errors;\n    },\n\n    /**\n     * Resolves the target class instance from the type name; accepts \"source\" or \"build\" or\n     * a class name\n     * @param type {String}\n     * @returns {Maker}\n     */\n    resolveTargetClass(type) {\n      if (!type) {\n        return null;\n      }\n      if (type.$$type == \"Class\") {\n        return type;\n      }\n      if (type == \"build\") {\n        return qx.tool.compiler.targets.BuildTarget;\n      }\n      if (type == \"source\") {\n        return qx.tool.compiler.targets.SourceTarget;\n      }\n      if (type == \"typescript\") {\n        throw new qx.tool.utils.Utils.UserError(\n          \"Typescript targets are no longer supported - please use `typescript: true` in source target instead\"\n        );\n      }\n      if (type) {\n        var targetClass;\n        if (type.indexOf(\".\") < 0) {\n          targetClass = qx.Class.getByName(\"qx.tool.compiler.targets.\" + type);\n        } else {\n          targetClass = qx.Class.getByName(type);\n        }\n        return targetClass;\n      }\n      return null;\n    },\n\n    /**\n     * Returns the list of makers to make\n     *\n     * @return  {Maker[]}\n     */\n    getMakers() {\n      return this.__makers;\n    },\n\n    /**\n     * Returns the one maker; this is for backwards compatibility with the compiler API, because it is\n     * possible to define multiple targets and therefore have multiple makers.  This method will return\n     * the one maker, when there is only one maker defined (ie one target), which is fine for any existing\n     * configurations.\n     *\n     * @deprected\n     * @return {Maker}\n     */\n    getMaker() {\n      if (this.__makers.length == 1) {\n        return this.__makers[0];\n      }\n      throw new Error(\n        \"Cannot get a single maker - there are \" +\n          this.__makers.length +\n          \" available\"\n      );\n    },\n\n    /**\n     * Returns the makers for a given application name\n     *\n     * @param appName {String} the name of the application\n     * @return {Maker}\n     */\n    getMakersForApp(appName) {\n      return this.__makers.filter(maker => {\n        let res = maker.getApplications().find(app => app.getName() == appName);\n        return res;\n      });\n    },\n\n    /**\n     * Returns the configuration object being compiled\n     */\n    _getConfig() {\n      return this.__config;\n    },\n\n    /**\n     * Returns a list of libraries which are used\n     *\n     * @return {Library[]}\n     */\n    getLibraries() {\n      return this.__libraries;\n    }\n  },\n\n  defer(statics) {\n    qx.tool.compiler.Console.addMessageIds({\n      \"qx.tool.cli.compile.writingApplication\": \"Writing application %1\",\n      \"qx.tool.cli.compile.minifyingApplication\": \"Minifying %1 %2\",\n      \"qx.tool.cli.compile.compilingClass\": \"Compiling class %1\",\n      \"qx.tool.cli.compile.compiledClass\": \"Compiled class %1 in %2s\",\n      \"qx.tool.cli.compile.makeBegins\": \"Making applications...\",\n      \"qx.tool.cli.compile.makeEnds\": \"Applications are made\"\n    });\n\n    qx.tool.compiler.Console.addMessageIds(\n      {\n        \"qx.tool.cli.compile.multipleDefaultTargets\":\n          \"Multiple default targets found!\",\n        \"qx.tool.cli.compile.unusedTarget\":\n          \"Target type %1, index %2 is unused\",\n        \"qx.tool.cli.compile.selectingDefaultApp\":\n          \"You have multiple applications, none of which are marked as 'default'; the first application named %1 has been chosen as the default application\",\n        \"qx.tool.cli.compile.legacyFiles\":\n          \"File %1 exists but is no longer used\",\n        \"qx.tool.cli.compile.deprecatedCompile\":\n          \"The configuration setting %1 in compile.json is deprecated\",\n        \"qx.tool.cli.compile.deprecatedCompileSeeOther\":\n          \"The configuration setting %1 in compile.json is deprecated (see %2)\",\n        \"qx.tool.cli.compile.deprecatedUri\":\n          \"URIs are no longer set in compile.json, the configuration setting %1=%2 in compile.json is ignored (it's auto detected)\",\n        \"qx.tool.cli.compile.deprecatedProvidesBoot\":\n          \"Manifest.Json no longer supports provides.boot - only Applications can have boot; specified in %1\",\n        \"qx.tool.cli.compile.deprecatedBabelOptions\":\n          \"Deprecated use of `babelOptions` - these should be moved to `babel.options`\",\n        \"qx.tool.cli.compile.deprecatedBabelOptionsConflicting\":\n          \"Conflicting use of `babel.options` and the deprecated `babelOptions` (ignored)\"\n      },\n\n      \"warning\"\n    );\n  }\n});\n"
  ],
  "mappings": "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"
}