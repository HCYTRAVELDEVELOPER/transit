{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "fs",
    "tool",
    "utils",
    "Promisify",
    "path",
    "require",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "outputDir",
    "setOutputDir",
    "properties",
    "type",
    "init",
    "nullable",
    "check",
    "transform",
    "generateIndexHtml",
    "environment",
    "defaultEnvironment",
    "inheritable",
    "preserveEnvironment",
    "analyser",
    "inlineExternalScripts",
    "addTimestampsToUrls",
    "locales",
    "i18nAsParts",
    "writeAllTranslations",
    "updatePoFiles",
    "libraryPoPolicy",
    "writeCompileInfo",
    "writeLibraryInfo",
    "sourceMapRelativePaths",
    "events",
    "checkEnvironment",
    "writingApplication",
    "writtenApplication",
    "members",
    "__pathMappings",
    "__appMeta",
    "open",
    "_transformOutputDir",
    "value",
    "length",
    "getApplicationRoot",
    "application",
    "join",
    "getOutputDir",
    "getProjectDir",
    "getOutputPath",
    "getName",
    "_getOutputRootUri",
    "dir",
    "targetUri",
    "relative",
    "addPathMapping",
    "fromFile",
    "toUri",
    "resolve",
    "getPathMapping",
    "filename",
    "absFilename",
    "startsWith",
    "substring",
    "mapToUri",
    "relativeTo",
    "mapTo",
    "_copyClassesToFile",
    "classes",
    "outputFilename",
    "transpiledDir",
    "allCode",
    "eachOfSeries",
    "readFileAsync",
    "then",
    "code",
    "push",
    "writeFileAsync",
    "generateApplication",
    "t",
    "getAnalyser",
    "rm",
    "getResourceManager",
    "appMeta",
    "compiler",
    "targets",
    "meta",
    "ApplicationMeta",
    "setAddTimestampsToUrls",
    "getAddTimestampsToUrls",
    "appRootDir",
    "setSourceUri",
    "setResourceUri",
    "requiredLibs",
    "getRequiredLibraries",
    "Utils",
    "makeDirs",
    "setEnvironment",
    "getClassName",
    "getTheme",
    "getQooxdooVersion",
    "getType",
    "externals",
    "addExternal",
    "arr",
    "forEach",
    "toLowerCase",
    "actualType",
    "endsWith",
    "match",
    "asset",
    "getAsset",
    "str",
    "getDestFilename",
    "addPreload",
    "libnamespace",
    "library",
    "findLibrary",
    "addLibrary",
    "isWriteLibraryInfo",
    "libraryInfoMap",
    "getEnvironmentValue",
    "getLibraryInfo",
    "getAddScript",
    "getAddCss",
    "name",
    "setEnvironmentValue",
    "fireDataEventAsync",
    "getEnvironment",
    "bootJs",
    "BootJs",
    "bootPackage",
    "createPackage",
    "setBootMetaJs",
    "addJavascriptMeta",
    "PolyfillJs",
    "Browserify",
    "partsData",
    "getPartsDependencies",
    "matchBundle",
    "app",
    "Application",
    "createWildcardMatchFunction",
    "getBundleInclude",
    "getBundleExclude",
    "lastPackage",
    "packages",
    "boot",
    "partData",
    "index",
    "partMeta",
    "createPart",
    "addPackage",
    "classname",
    "classFilename",
    "replace",
    "transpiledClassFilename",
    "db",
    "getDatabase",
    "dbClassInfo",
    "classInfo",
    "libraryName",
    "sourcePath",
    "getFilename",
    "jsMeta",
    "Javascript",
    "packageName",
    "pkg",
    "setEmbedAllJavascript",
    "addClassname",
    "assetUris",
    "getAssetUris",
    "saveDatabase",
    "promises",
    "getCldr",
    "cldr",
    "addLocale",
    "_writeTranslations",
    "fontCntr",
    "assets",
    "getAssetsForPaths",
    "addAsset",
    "toString",
    "getApplicationTypes",
    "indexOf",
    "appLibrary",
    "getAppLibrary",
    "fontsToLoad",
    "addLibraryFonts",
    "fonts",
    "getWebFonts",
    "font",
    "loadFont",
    "res",
    "getResources",
    "filter",
    "Console",
    "print",
    "setResources",
    "generateForTarget",
    "resources",
    "generateForApplication",
    "key",
    "addResource",
    "getBootstrapCode",
    "addPreBootCode",
    "ex",
    "keys",
    "fontName",
    "Promise",
    "all",
    "_writeApplication",
    "getAppMeta",
    "isUpdatePoFiles",
    "policy",
    "getLibraryPoPolicy",
    "updateTranslations",
    "getLocales",
    "getLibraries",
    "_writeLocales",
    "getWriteAllTranslations",
    "_writeAllTranslations",
    "_writeRequiredTranslations",
    "_transformLocales",
    "map",
    "localeId",
    "pos",
    "toUpperCase",
    "getPackages",
    "loadLocaleData",
    "combinedCldr",
    "accumulateCldr",
    "undefined",
    "parentLocaleId",
    "Cldr",
    "getParentLocale",
    "isI18nAsParts",
    "getLocalePackage",
    "translations",
    "addTrans",
    "getTranslation",
    "translation",
    "id",
    "getNamespace",
    "entries",
    "getEntries",
    "msgid",
    "addTranslationEntry",
    "entry",
    "getEntry",
    "getClassnames",
    "localePkg",
    "transInfo",
    "idLib",
    "fireEventAsync",
    "getApplication",
    "bootMeta",
    "getBootMetaJs",
    "i",
    "isEmpty",
    "setNeedsWriteToDisk",
    "addEmbeddedJs",
    "getJavascript",
    "unwrap",
    "writeToDisk",
    "_writeIndexHtml",
    "isWriteCompileInfo",
    "appSummary",
    "appClass",
    "libraries",
    "lib",
    "parts",
    "getAssets",
    "urisBefore",
    "getPreloads",
    "cssBefore",
    "include",
    "exclude",
    "minify",
    "JSON",
    "stringify",
    "encoding",
    "isBrowserApp",
    "isGenerateIndexHtml",
    "resDir",
    "timeStamp",
    "Date",
    "getTime",
    "pathToTarget",
    "indexJsTimestamp",
    "isAddTimestampsToUrls",
    "indexJsFilename",
    "statSync",
    "mtimeMs",
    "TEMPLATE_VARS",
    "resourcePath",
    "targetPath",
    "appPath",
    "preBootJs",
    "appTitle",
    "getTitle",
    "replaceVars",
    "varName",
    "RegExp",
    "defaultIndexHtml",
    "bootDir",
    "getBootPath",
    "indexHtml",
    "getRootDir",
    "stats",
    "files",
    "safeStat",
    "isDirectory",
    "sync",
    "from",
    "to",
    "data",
    "basename",
    "getWriteIndexHtmlToRoot",
    "Target"
  ],
  "sources": [
    "/home/andresf/workspace_qooxdoo/qooxdoo/qooxdoo-7.0/source/class/qx/tool/compiler/targets/Target.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo\n *\n *    Copyright:\n *      2011-2017 Zenesis Limited, http://www.zenesis.com\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *\n * ************************************************************************/\n\nconst fs = qx.tool.utils.Promisify.fs;\n\nconst path = require(\"upath\");\n\n/**\n * A target for building an application, instances of Target control the generation of transpiled\n * source and collection into an application, including minifying etc\n */\nqx.Class.define(\"qx.tool.compiler.targets.Target\", {\n  extend: qx.core.Object,\n\n  /**\n   * Constructor\n   * @param outputDir {String} output directory\n   */\n  construct(outputDir) {\n    super();\n    this.setOutputDir(outputDir);\n  },\n\n  properties: {\n    /** Type of compilation */\n    type: {\n      init: \"source\",\n      nullable: false,\n      check: [\"source\", \"build\"]\n    },\n\n    /** Output directory (guaranteed to have a trailing slash) */\n    outputDir: {\n      init: \"output\",\n      nullable: false,\n      check: \"String\",\n      transform: \"_transformOutputDir\"\n    },\n\n    /**\n     * Whether to generate the index.html\n     */\n    generateIndexHtml: {\n      init: true,\n      check: \"Boolean\"\n    },\n\n    /**\n     * Environment property map\n     */\n    environment: {\n      init: null,\n      nullable: true\n    },\n\n    /**\n     * Target type default environment property map\n     */\n    defaultEnvironment: {\n      init: null,\n      inheritable: true,\n      nullable: true\n    },\n\n    /**\n     * List of environment keys to preserve in code, ie reserve for runtime detection\n     * and exclude from code elimination\n     */\n    preserveEnvironment: {\n      init: null,\n      nullable: true,\n      check: \"Array\"\n    },\n\n    /**\n     * The analyser being generated\n     */\n    analyser: {\n      nullable: false\n    },\n\n    /**\n     * Whether to inline external scripts\n     */\n    inlineExternalScripts: {\n      init: false,\n      check: \"Boolean\"\n    },\n\n    /**\n     * Whether to add timestamps to all URLs (cache busting)\n     */\n    addTimestampsToUrls: {\n      init: true,\n      check: \"Boolean\"\n    },\n\n    /** Locales being generated */\n    locales: {\n      nullable: false,\n      init: [\"en\"],\n      transform: \"_transformLocales\"\n    },\n\n    /** Whether to break locale & translation data out into separate parts */\n    i18nAsParts: {\n      init: false,\n      nullable: false,\n      check: \"Boolean\"\n    },\n\n    /** Whether to write all translation strings (as opposed to just those used by the classes) */\n    writeAllTranslations: {\n      init: false,\n      nullable: false,\n      check: \"Boolean\"\n    },\n\n    /** Whether to update the source .po files with new strings */\n    updatePoFiles: {\n      init: false,\n      nullable: false,\n      check: \"Boolean\"\n    },\n\n    /** What to do with library transation strings */\n    libraryPoPolicy: {\n      init: \"ignore\",\n      check: [\"ignore\", \"untranslated\", \"all\"]\n    },\n\n    /** Whether to write a summary of the compile info to disk, ie everything about dependencies and\n     * resources that are used to create the index.js file, but stored as pure JSON for third party code\n     * to use.\n     */\n    writeCompileInfo: {\n      init: false,\n      nullable: false,\n      check: \"Boolean\"\n    },\n\n    /**\n     * Whether to write information about the libraries into the boot script\n     */\n    writeLibraryInfo: {\n      init: true,\n      nullable: false,\n      check: \"Boolean\"\n    },\n\n    /**\n     * Whether to use relative paths in source maps\n     */\n    sourceMapRelativePaths: {\n      init: false,\n      nullable: false,\n      check: \"Boolean\"\n    }\n  },\n\n  events: {\n    /**\n     * Fired after all enviroment data is collected, but before compilation begins; this\n     * is an  opportunity to adjust the environment for the target.  The event data contains:\n     *  application {qx.tool.compiler.app.Application} the app\n     *  enviroment: {Object} enviroment data\n     */\n    checkEnvironment: \"qx.event.type.Data\",\n\n    /**\n     * Fired when an application is about to be serialized to disk; the appMeta is fully\n     * populated, and this is an opportunity to amend the meta data before it is serialized\n     * into files on disk\n     */\n    writingApplication: \"qx.event.type.Event\",\n\n    /**\n     * Fired when an application has been serialized to disk\n     */\n    writtenApplication: \"qx.event.type.Event\"\n  },\n\n  members: {\n    /** @type {Map} maps filenames to uris */\n    __pathMappings: null,\n\n    /** @type {qx.tool.compiler.targets.meta.ApplicationMeta} for the current application */\n    __appMeta: null,\n\n    /**\n     * Initialises the target, creating directories etc\n     */\n    async open() {},\n\n    /**\n     * Transforms outputDir so that it always includes a trailing slash\n     *\n     * @param value\n     * @returns {*}\n     * @private\n     */\n    _transformOutputDir(value) {\n      if (value) {\n        if (value[value.length - 1] != \"/\") {\n          value += \"/\";\n        }\n      }\n      return value;\n    },\n\n    /**\n     * Returns the root for applications\n     */\n    getApplicationRoot(application) {\n      return (\n        path.join(this.getOutputDir(), this.getProjectDir(application)) + \"/\"\n      );\n    },\n\n    /**\n     * Returns the project dir\n     *\n     * @returns String\n     */\n    getProjectDir(application) {\n      return application.getOutputPath() || application.getName();\n    },\n\n    /**\n     * Returns the URI for the root of the output, relative to the application\n     */\n    _getOutputRootUri(application) {\n      var dir = this.getApplicationRoot(application);\n      var targetUri = path.relative(dir, this.getOutputDir()) + \"/\";\n      return targetUri;\n    },\n\n    /**\n     * Adds a path mapping, where any reference to a file in `fromFile` is remapped to be\n     * loaded via the `toUri.\n     *\n     * @param fromFile {String} the directory (or filename) to map\n     * @param toUri {String} the URI to map to\n     */\n    addPathMapping(fromFile, toUri) {\n      fromFile = path.resolve(fromFile);\n      if (this.__pathMappings === null) {\n        this.__pathMappings = {};\n      }\n      this.__pathMappings[fromFile] = toUri;\n    },\n\n    /**\n     * Converts a filename to a URI, taking into account mappings added via `addMapping`.  If there is\n     * no mapping, null is returned\n     *\n     * @param filename {String} the filename to map\n     * @return {String} the URI for the file, null if not found\n     */\n    getPathMapping(filename) {\n      if (this.__pathMappings) {\n        var absFilename = path.resolve(filename);\n\n        // Search\n        for (var fromFile in this.__pathMappings) {\n          if (absFilename.startsWith(fromFile)) {\n            var toUri = this.__pathMappings[fromFile];\n            filename = toUri + absFilename.substring(fromFile.length);\n            return filename;\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Converts a filename to a URI, taking into account mappings added via `addMapping`.  If there is\n     * no mapping, the filename can be modified to be relative to a given path (ie the directory where\n     * the index.html is located)\n     *\n     * @param filename {String} the filename to map\n     * @param relativeTo {String?} optional path that the filename needs to be relative to if there is no mapping\n     * @return {String} the URI for the file\n     */\n    mapToUri(filename, relativeTo) {\n      var mapTo = this.getPathMapping(filename);\n      if (mapTo !== null) {\n        return mapTo;\n      }\n\n      if (relativeTo) {\n        filename = path.relative(relativeTo, filename);\n      }\n\n      return filename;\n    },\n\n    _copyClassesToFile(classes, outputFilename) {\n      let transpiledDir = path.join(this.getOutputDir(), \"transpiled\");\n      let allCode = [];\n      return qx.tool.utils.Promisify.eachOfSeries(classes, filename =>\n        fs\n          .readFileAsync(path.join(transpiledDir, filename), \"utf8\")\n          .then(code => allCode.push(code))\n      ).then(() => fs.writeFileAsync(outputFilename, allCode.join(\"\\n\")));\n    },\n\n    /**\n     * Generates the application\n     *\n     * @param application {Application} the application\n     * @param environment {Object} the environment\n     */\n    async generateApplication(application, environment) {\n      var t = this;\n      var analyser = application.getAnalyser();\n      var rm = analyser.getResourceManager();\n\n      let appMeta = (this.__appMeta =\n        new qx.tool.compiler.targets.meta.ApplicationMeta(this, application));\n      appMeta.setAddTimestampsToUrls(this.getAddTimestampsToUrls());\n      /*\n      if (!appMeta.getAppLibrary()) {\n        qx.tool.compiler.Console.print(\"qx.tool.compiler.target.missingAppLibrary\", application.getClassName());\n        return;\n      }\n      */\n      let targetUri = t._getOutputRootUri(application);\n      var appRootDir = this.getApplicationRoot(application);\n\n      let mapTo = this.getPathMapping(\n        path.join(appRootDir, this.getOutputDir(), \"transpiled/\")\n      );\n\n      appMeta.setSourceUri(mapTo ? mapTo : targetUri + \"transpiled/\");\n      mapTo = this.getPathMapping(\n        path.join(appRootDir, this.getOutputDir(), \"resource\")\n      );\n\n      appMeta.setResourceUri(mapTo ? mapTo : targetUri + \"resource\");\n\n      const requiredLibs = application.getRequiredLibraries();\n\n      await qx.tool.utils.Utils.makeDirs(appRootDir);\n\n      appMeta.setEnvironment({\n        \"qx.application\": application.getClassName(),\n        \"qx.revision\": \"\",\n        \"qx.theme\": application.getTheme(),\n        \"qx.version\": analyser.getQooxdooVersion(),\n        \"qx.compiler.targetType\": this.getType(),\n        \"qx.compiler.outputDir\": this.getOutputDir()\n      });\n\n      let externals = {};\n      const addExternal = (arr, type) => {\n        if (arr) {\n          arr.forEach(filename => {\n            if (externals[filename.toLowerCase()]) {\n              return;\n            }\n            externals[filename.toLowerCase()] = true;\n            let actualType =\n              type || (filename.endsWith(\".js\") ? \"urisBefore\" : \"cssBefore\");\n            if (filename.match(/^https?:/)) {\n              appMeta.addExternal(actualType, filename);\n            } else {\n              let asset = rm.getAsset(filename);\n              if (asset) {\n                let str = asset.getDestFilename(t);\n                str = path.relative(appRootDir, str);\n                appMeta.addPreload(actualType, str);\n              }\n            }\n          });\n        }\n      };\n\n      requiredLibs.forEach(libnamespace => {\n        var library = analyser.findLibrary(libnamespace);\n        appMeta.addLibrary(library);\n        if (this.isWriteLibraryInfo()) {\n          let libraryInfoMap = appMeta.getEnvironmentValue(\n            \"qx.libraryInfoMap\",\n            {}\n          );\n\n          libraryInfoMap[libnamespace] = library.getLibraryInfo();\n        }\n        addExternal(library.getAddScript(), \"urisBefore\");\n        addExternal(library.getAddCss(), \"cssBefore\");\n      });\n\n      /*\n       * Environment\n       */\n      for (let name in environment) {\n        appMeta.setEnvironmentValue(name, environment[name]);\n      }\n      await t.fireDataEventAsync(\"checkEnvironment\", {\n        application: application,\n        environment: appMeta.getEnvironment()\n      });\n\n      /*\n       * Boot files\n       */\n      let bootJs = new qx.tool.compiler.targets.meta.BootJs(appMeta);\n      let bootPackage = appMeta.createPackage();\n      appMeta.setBootMetaJs(bootJs);\n      bootPackage.addJavascriptMeta(\n        new qx.tool.compiler.targets.meta.PolyfillJs(appMeta)\n      );\n\n      // Add browserified CommonJS modules, if any\n      if (appMeta.getEnvironmentValue(\"qx.compiler.applicationType\") == \"browser\") {\n        bootPackage.addJavascriptMeta(\n          new qx.tool.compiler.targets.meta.Browserify(appMeta));\n      }\n\n      /*\n       * Assemble the Parts\n       */\n      var partsData = application.getPartsDependencies();\n      let matchBundle =\n        qx.tool.compiler.app.Application.createWildcardMatchFunction(\n          application.getBundleInclude(),\n          application.getBundleExclude()\n        );\n\n      let lastPackage = bootPackage;\n      let packages = {\n        boot: bootPackage\n      };\n\n      partsData.forEach((partData, index) => {\n        let partMeta = appMeta.createPart(partData.name);\n        if (index == 0) {\n          partMeta.addPackage(bootPackage);\n        }\n\n        partData.classes.forEach(classname => {\n          let classFilename = classname.replace(/\\./g, \"/\") + \".js\";\n\n          let transpiledClassFilename = path.join(\n            this.getOutputDir(),\n            \"transpiled\",\n            classFilename\n          );\n\n          let db = analyser.getDatabase();\n          let dbClassInfo = db.classInfo[classname];\n          let library = analyser.findLibrary(dbClassInfo.libraryName);\n          let sourcePath = library.getFilename(classFilename);\n          let jsMeta = new qx.tool.compiler.targets.meta.Javascript(\n            appMeta,\n            transpiledClassFilename,\n            sourcePath\n          );\n\n          let packageName = matchBundle(classname) ? \"__bundle\" : partData.name;\n          let pkg = packages[packageName];\n\n          if (!pkg || pkg !== lastPackage) {\n            pkg = packages[packageName] = appMeta.createPackage();\n            if (packageName == \"__bundle\") {\n              pkg.setEmbedAllJavascript(true);\n            }\n            partMeta.addPackage(pkg);\n          }\n          if (dbClassInfo.externals) {\n            addExternal(dbClassInfo.externals);\n          }\n          pkg.addJavascriptMeta(jsMeta);\n          pkg.addClassname(classname);\n          lastPackage = pkg;\n        });\n      });\n\n      var assetUris = application.getAssetUris(t, rm, appMeta.getEnvironment()); // Save any changes that getAssets collected\n      await rm.saveDatabase();\n\n      var promises = [\n        analyser.getCldr(\"en\").then(cldr => bootPackage.addLocale(\"C\", cldr)),\n        t._writeTranslations()\n      ];\n\n      var fontCntr = 0;\n      var assets = {};\n      rm.getAssetsForPaths(assetUris).forEach(asset => {\n        bootPackage.addAsset(asset);\n        assets[asset.getFilename()] = asset.toString();\n      });\n\n      if (analyser.getApplicationTypes().indexOf(\"browser\") > -1) {\n        // Get a list of all fonts to load; use the font name as a unique identifier, and\n        //  prioritise the application's library's definitions - this allows the application\n        //  the opportunity to override the font definitions.  This is important when the\n        //  library uses the open source/free versions of a font but the application\n        //  developer has purchased the commercial/full version of the font (eg FontAwesome)\n        let appLibrary = appMeta.getAppLibrary();\n        let fontsToLoad = {};\n        const addLibraryFonts = library => {\n          var fonts = library.getWebFonts();\n          if (!fonts) {\n            return;\n          }\n          fonts.forEach(font => {\n            fontsToLoad[font.getName()] = {\n              font,\n              library\n            };\n          });\n        };\n        requiredLibs.forEach(libnamespace => {\n          var library = analyser.findLibrary(libnamespace);\n          if (library != appLibrary) {\n            addLibraryFonts(library);\n          }\n        });\n        addLibraryFonts(appLibrary);\n\n        const loadFont = async (library, font) => {\n          try {\n            // check if font is asset somewhere\n            let res = font.getResources().filter(res => assets[res]);\n            if (res.length === 0) {\n              qx.tool.compiler.Console.print(\n                \"qx.tool.compiler.webfonts.noResources\",\n                font.toString(),\n                application.getName(),\n                font.getResources().join(\",\")\n              );\n\n              return;\n            }\n            font.setResources(res);\n\n            await font.generateForTarget(t);\n            let resources = await font.generateForApplication(t, application);\n            for (var key in resources) {\n              appMeta.addResource(key, resources[key]);\n            }\n            var code = font.getBootstrapCode(t, application, fontCntr++ == 0);\n            if (code) {\n              appMeta.addPreBootCode(code);\n            }\n          } catch (ex) {\n            qx.tool.compiler.Console.print(\n              \"qx.tool.compiler.webfonts.error\",\n              font.toString(),\n              ex.toString()\n            );\n          }\n        };\n\n        Object.keys(fontsToLoad).forEach(fontName => {\n          let { font, library } = fontsToLoad[fontName];\n          promises.push(loadFont(library, font));\n        });\n      }\n      await qx.Promise.all(promises);\n      await t._writeApplication();\n      this.__appMeta = null;\n    },\n\n    /**\n     * Handles the output of translations and locales\n     */\n    async _writeTranslations() {\n      let appMeta = this.getAppMeta();\n      const analyser = appMeta.getAnalyser();\n      if (this.isUpdatePoFiles()) {\n        let policy = this.getLibraryPoPolicy();\n        if (policy != \"ignore\") {\n          await analyser.updateTranslations(\n            appMeta.getAppLibrary(),\n            this.getLocales(),\n            appMeta.getLibraries(),\n            policy == \"all\"\n          );\n        } else {\n          await analyser.updateTranslations(\n            appMeta.getAppLibrary(),\n            this.getLocales(),\n            null,\n            false\n          );\n        }\n      }\n\n      await this._writeLocales();\n      if (this.getWriteAllTranslations()) {\n        await this._writeAllTranslations();\n      } else {\n        await this._writeRequiredTranslations();\n      }\n    },\n\n    /**\n     * Transform method for locales property; ensures that all locales are case correct, ie\n     * have the form aa_BB (for example \"en_GB\" is correct but \"en_gb\" is invalid)\n     *\n     * @param value {String[]} array of locale IDs\n     * @return {String[]} the modified array\n     */\n    _transformLocales(value) {\n      if (!value) {\n        return value;\n      }\n      return value.map(localeId => {\n        localeId = localeId.toLowerCase();\n        var pos = localeId.indexOf(\"_\");\n        if (pos > -1) {\n          localeId =\n            localeId.substring(0, pos) + localeId.substring(pos).toUpperCase();\n        }\n        return localeId;\n      });\n    },\n\n    /**\n     * Writes the required locale CLDR data, incorporating inheritance.  Note that locales in CLDR can\n     * have a \"parent locale\", where the locale inherits all settings from the parent except where explicitly\n     * set in the locale.  This is in addition to the inheritance between language and locale, eg where \"en_GB\"\n     * overrides settings from \"en\".  Qooxdoo client understands that if a setting is not provided in\n     * \"en_GB\" it must look to \"en\", but it does not understand the \"parent locale\" inheritance, so this\n     * method must flatten the \"parent locale\" inheritance.\n     */\n    async _writeLocales() {\n      var t = this;\n      let appMeta = this.getAppMeta();\n      var analyser = appMeta.getAnalyser();\n      let bootPackage = appMeta.getPackages()[0];\n\n      function loadLocaleData(localeId) {\n        var combinedCldr = null;\n\n        function accumulateCldr(localeId) {\n          return analyser.getCldr(localeId).then(cldr => {\n            if (!combinedCldr) {\n              combinedCldr = cldr;\n            } else {\n              for (var name in cldr) {\n                var value = combinedCldr[name];\n                if (value === null || value === undefined) {\n                  combinedCldr[name] = cldr[name];\n                }\n              }\n            }\n            var parentLocaleId =\n              qx.tool.compiler.app.Cldr.getParentLocale(localeId);\n            if (parentLocaleId) {\n              return accumulateCldr(parentLocaleId);\n            }\n            return combinedCldr;\n          });\n        }\n\n        return accumulateCldr(localeId);\n      }\n\n      var promises = t.getLocales().map(async localeId => {\n        let cldr = await loadLocaleData(localeId);\n        let pkg = this.isI18nAsParts()\n          ? appMeta.getLocalePackage(localeId)\n          : bootPackage;\n        pkg.addLocale(localeId, cldr);\n      });\n\n      await qx.Promise.all(promises);\n    },\n\n    /**\n     * Writes all translations\n     */\n    async _writeAllTranslations() {\n      var t = this;\n      let appMeta = this.getAppMeta();\n      var analyser = appMeta.getAnalyser();\n      let bootPackage = appMeta.getPackages()[0];\n      var translations = {};\n      var promises = [];\n      t.getLocales().forEach(localeId => {\n        let pkg = this.isI18nAsParts()\n          ? appMeta.getLocalePackage(localeId)\n          : bootPackage;\n        function addTrans(library, localeId) {\n          return analyser\n            .getTranslation(library, localeId)\n            .then(translation => {\n              var id = library.getNamespace() + \":\" + localeId;\n              translations[id] = translation;\n              var entries = translation.getEntries();\n              for (var msgid in entries) {\n                pkg.addTranslationEntry(localeId, entries[msgid]);\n              }\n            });\n        }\n        appMeta.getLibraries().forEach(function (library) {\n          if (library === appMeta.getAppLibrary()) {\n            return;\n          }\n          promises.push(addTrans(library, localeId));\n        });\n        // translation from main app should overwrite package translations\n        promises.push(addTrans(appMeta.getAppLibrary(), localeId));\n      });\n      await qx.Promise.all(promises);\n    },\n\n    /**\n     * Writes only those translations which are actually required\n     */\n    async _writeRequiredTranslations() {\n      var t = this;\n      let appMeta = this.getAppMeta();\n      var analyser = appMeta.getAnalyser();\n      var db = analyser.getDatabase();\n      let bootPackage = appMeta.getPackages()[0];\n\n      var translations = {};\n      var promises = [];\n      t.getLocales().forEach(localeId => {\n        let pkg = this.isI18nAsParts()\n          ? appMeta.getLocalePackage(localeId)\n          : bootPackage;\n        appMeta.getLibraries().forEach(function (library) {\n          promises.push(\n            analyser.getTranslation(library, localeId).then(translation => {\n              var id = library.getNamespace() + \":\" + localeId;\n              translations[id] = translation;\n              let entry = translation.getEntry(\"\");\n              if (entry) {\n                pkg.addTranslationEntry(localeId, entry);\n              }\n            })\n          );\n        });\n      });\n      await qx.Promise.all(promises);\n\n      appMeta.getPackages().forEach(pkg => {\n        pkg.getClassnames().forEach(classname => {\n          var dbClassInfo = db.classInfo[classname];\n          if (!dbClassInfo.translations) {\n            return;\n          }\n          t.getLocales().forEach(localeId => {\n            let localePkg = this.isI18nAsParts()\n              ? appMeta.getLocalePackage(localeId)\n              : pkg;\n            dbClassInfo.translations.forEach(transInfo => {\n              let entry;\n              let id = appMeta.getAppLibrary().getNamespace() + \":\" + localeId;\n              // search in main app first\n              let translation = translations[id];\n              if (translation) {\n                entry = translation.getEntry(transInfo.msgid);\n              }\n              let idLib = dbClassInfo.libraryName + \":\" + localeId;\n              if (!entry && id !== idLib) {\n                let translation = translations[idLib];\n                if (translation) {\n                  entry = translation.getEntry(transInfo.msgid);\n                }\n              }\n              if (entry) {\n                localePkg.addTranslationEntry(localeId, entry);\n              }\n            });\n          });\n        });\n      });\n    },\n\n    /**\n     * Writes the application\n     */\n    async _writeApplication() {\n      var t = this;\n\n      await this.fireEventAsync(\"writingApplication\");\n\n      let appMeta = this.getAppMeta();\n      var application = appMeta.getApplication();\n      var appRootDir = appMeta.getApplicationRoot();\n\n      if (!appMeta.getAppLibrary()) {\n        qx.tool.compiler.Console.print(\n          \"qx.tool.compiler.target.missingAppLibrary\",\n          application.getName()\n        );\n\n        return;\n      }\n\n      let bootMeta = appMeta.getBootMetaJs();\n      for (let arr = appMeta.getPackages(), i = 0; i < arr.length; i++) {\n        let pkg = arr[i];\n        if (pkg.isEmpty()) {\n          pkg.setNeedsWriteToDisk(false);\n          bootMeta.addEmbeddedJs(pkg.getJavascript());\n        }\n        await pkg.getJavascript().unwrap().writeToDisk();\n      }\n\n      await appMeta.getBootMetaJs().unwrap().writeToDisk();\n\n      await this._writeIndexHtml();\n\n      if (!t.isWriteCompileInfo()) {\n        await this.fireEventAsync(\"writtenApplication\");\n        return;\n      }\n\n      let bootPackage = appMeta.getPackages()[0];\n      let appSummary = {\n        appClass: application.getClassName(),\n        libraries: appMeta.getLibraries().map(lib => lib.getNamespace()),\n        parts: [],\n        resources: bootPackage.getAssets().map(asset => asset.getFilename()),\n        locales: this.getLocales(),\n        environment: appMeta.getEnvironment(),\n        urisBefore: appMeta.getPreloads().urisBefore,\n        cssBefore: appMeta.getPreloads().cssBefore\n      };\n\n      application.getPartsDependencies().forEach(partData => {\n        appSummary.parts.push({\n          classes: partData.classes,\n          include: partData.include,\n          exclude: partData.exclude,\n          minify: partData.minify,\n          name: partData.name\n        });\n      });\n\n      await fs.writeFileAsync(\n        appRootDir + \"/compile-info.json\",\n        JSON.stringify(appSummary, null, 2) + \"\\n\",\n        { encoding: \"utf8\" }\n      );\n\n      await this.fireEventAsync(\"writtenApplication\");\n    },\n\n    /**\n     * Called to generate index.html\n     */\n    async _writeIndexHtml() {\n      var t = this;\n      let appMeta = this.getAppMeta();\n      var application = appMeta.getApplication();\n\n      if (!application.isBrowserApp()) {\n        return;\n      }\n\n      if (!this.isGenerateIndexHtml()) {\n        return;\n      }\n\n      var resDir = this.getApplicationRoot(application);\n\n      let timeStamp = new Date().getTime();\n      let pathToTarget =\n        path.relative(\n          path.join(t.getOutputDir(), t.getProjectDir(application)),\n          t.getOutputDir()\n        ) + \"/\";\n      let indexJsTimestamp = \"\";\n      if (this.isAddTimestampsToUrls()) {\n        let indexJsFilename = path.join(\n          appMeta.getApplicationRoot(),\n          \"index.js\"\n        );\n\n        indexJsTimestamp = \"?\" + fs.statSync(indexJsFilename).mtimeMs;\n      }\n      let TEMPLATE_VARS = {\n        resourcePath: pathToTarget + \"resource/\",\n        targetPath: pathToTarget,\n        appPath: \"\",\n        preBootJs: \"\",\n        appTitle: application.getTitle() || \"Qooxdoo Application\",\n        timeStamp: timeStamp,\n        indexJsTimestamp: indexJsTimestamp\n      };\n\n      function replaceVars(code) {\n        for (let varName in TEMPLATE_VARS) {\n          code = code.replace(\n            new RegExp(`\\\\$\\{${varName}\\}`, \"g\"),\n            TEMPLATE_VARS[varName]\n          );\n        }\n        return code;\n      }\n      /* eslint-disable no-template-curly-in-string */\n      let defaultIndexHtml =\n        \"<!DOCTYPE html>\\n\" +\n        \"<html>\\n\" +\n        \"<head>\\n\" +\n        '  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\\n' +\n        \"  <title>${appTitle}</title>\\n\" +\n        \"</head>\\n\" +\n        \"<body>\\n\" +\n        \"  <!-- This index.html can be customised by creating a boot/index.html (do not include Qooxdoo application script tags like\\n\" +\n        \"       the one below because they will be added automatically)\\n\" +\n        \"    -->\\n\" +\n        \"${preBootJs}\\n\" +\n        '  <script type=\"text/javascript\" src=\"${appPath}index.js${indexJsTimestamp}\"></script>\\n' +\n        \"</body>\\n\" +\n        \"</html>\\n\";\n      /* eslint-enable no-template-curly-in-string */\n      var bootDir = application.getBootPath();\n      let indexHtml = null;\n      if (bootDir) {\n        bootDir = path.join(\n          appMeta.getAppLibrary().getRootDir(),\n          application.getBootPath()\n        );\n\n        var stats = await qx.tool.utils.files.Utils.safeStat(bootDir);\n        if (stats && stats.isDirectory()) {\n          await qx.tool.utils.files.Utils.sync(\n            bootDir,\n            resDir,\n            async (from, to) => {\n              if (!from.endsWith(\".html\")) {\n                return true;\n              }\n              let data = await fs.readFileAsync(from, \"utf8\");\n              if (path.basename(from) == \"index.html\") {\n                if (!data.match(/\\$\\{\\s*preBootJs\\s*\\}/)) {\n                  /* eslint-disable no-template-curly-in-string */\n                  data = data.replace(\"</body>\", \"\\n${preBootJs}\\n</body>\");\n                  /* eslint-enable no-template-curly-in-string */\n                  qx.tool.compiler.Console.print(\n                    \"qx.tool.compiler.target.missingPreBootJs\",\n                    from\n                  );\n                }\n                if (!data.match(/\\s*index.js\\s*/)) {\n                  /* eslint-disable no-template-curly-in-string */\n                  data = data.replace(\n                    \"</body>\",\n                    '\\n  <script type=\"text/javascript\" src=\"${appPath}index.js${indexJsTimestamp}\"></script>\\n</body>'\n                  );\n\n                  /* eslint-enable no-template-curly-in-string */\n                  qx.tool.compiler.Console.print(\n                    \"qx.tool.compiler.target.missingBootJs\",\n                    from\n                  );\n                }\n                indexHtml = data;\n              }\n              data = replaceVars(data);\n              await fs.writeFileAsync(to, data, \"utf8\");\n              return false;\n            }\n          );\n        }\n      }\n      if (!indexHtml) {\n        indexHtml = defaultIndexHtml;\n        await fs.writeFileAsync(resDir + \"index.html\", replaceVars(indexHtml), {\n          encoding: \"utf8\"\n        });\n      }\n\n      if (application.getWriteIndexHtmlToRoot()) {\n        pathToTarget = \"\";\n        TEMPLATE_VARS = {\n          resourcePath: \"resource/\",\n          targetPath: \"\",\n          appPath: t.getProjectDir(application) + \"/\",\n          preBootJs: \"\",\n          appTitle: application.getTitle() || \"Qooxdoo Application\",\n          timeStamp: timeStamp,\n          indexJsTimestamp: indexJsTimestamp\n        };\n\n        await fs.writeFileAsync(\n          t.getOutputDir() + \"index.html\",\n          replaceVars(indexHtml),\n          { encoding: \"utf8\" }\n        );\n      }\n    },\n\n    getAppMeta() {\n      return this.__appMeta;\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEA,MAAMC,EAAE,GAAGJ,EAAE,CAACK,IAAH,CAAQC,KAAR,CAAcC,SAAd,CAAwBH,EAAnC;;EAEA,MAAMI,IAAI,GAAGC,OAAO,CAAC,OAAD,CAApB;EAEA;AACA;AACA;AACA;;;EACAT,EAAE,CAACU,KAAH,CAASC,MAAT,CAAgB,iCAAhB,EAAmD;IACjDC,MAAM,EAAEZ,EAAE,CAACa,IAAH,CAAQC,MADiC;;IAGjD;AACF;AACA;AACA;IACEC,SAAS,CAACC,SAAD,EAAY;MACnB;MACA,KAAKC,YAAL,CAAkBD,SAAlB;IACD,CAVgD;;IAYjDE,UAAU,EAAE;MACV;MACAC,IAAI,EAAE;QACJC,IAAI,EAAE,QADF;QAEJC,QAAQ,EAAE,KAFN;QAGJC,KAAK,EAAE,CAAC,QAAD,EAAW,OAAX;MAHH,CAFI;;MAQV;MACAN,SAAS,EAAE;QACTI,IAAI,EAAE,QADG;QAETC,QAAQ,EAAE,KAFD;QAGTC,KAAK,EAAE,QAHE;QAITC,SAAS,EAAE;MAJF,CATD;;MAgBV;AACJ;AACA;MACIC,iBAAiB,EAAE;QACjBJ,IAAI,EAAE,IADW;QAEjBE,KAAK,EAAE;MAFU,CAnBT;;MAwBV;AACJ;AACA;MACIG,WAAW,EAAE;QACXL,IAAI,EAAE,IADK;QAEXC,QAAQ,EAAE;MAFC,CA3BH;;MAgCV;AACJ;AACA;MACIK,kBAAkB,EAAE;QAClBN,IAAI,EAAE,IADY;QAElBO,WAAW,EAAE,IAFK;QAGlBN,QAAQ,EAAE;MAHQ,CAnCV;;MAyCV;AACJ;AACA;AACA;MACIO,mBAAmB,EAAE;QACnBR,IAAI,EAAE,IADa;QAEnBC,QAAQ,EAAE,IAFS;QAGnBC,KAAK,EAAE;MAHY,CA7CX;;MAmDV;AACJ;AACA;MACIO,QAAQ,EAAE;QACRR,QAAQ,EAAE;MADF,CAtDA;;MA0DV;AACJ;AACA;MACIS,qBAAqB,EAAE;QACrBV,IAAI,EAAE,KADe;QAErBE,KAAK,EAAE;MAFc,CA7Db;;MAkEV;AACJ;AACA;MACIS,mBAAmB,EAAE;QACnBX,IAAI,EAAE,IADa;QAEnBE,KAAK,EAAE;MAFY,CArEX;;MA0EV;MACAU,OAAO,EAAE;QACPX,QAAQ,EAAE,KADH;QAEPD,IAAI,EAAE,CAAC,IAAD,CAFC;QAGPG,SAAS,EAAE;MAHJ,CA3EC;;MAiFV;MACAU,WAAW,EAAE;QACXb,IAAI,EAAE,KADK;QAEXC,QAAQ,EAAE,KAFC;QAGXC,KAAK,EAAE;MAHI,CAlFH;;MAwFV;MACAY,oBAAoB,EAAE;QACpBd,IAAI,EAAE,KADc;QAEpBC,QAAQ,EAAE,KAFU;QAGpBC,KAAK,EAAE;MAHa,CAzFZ;;MA+FV;MACAa,aAAa,EAAE;QACbf,IAAI,EAAE,KADO;QAEbC,QAAQ,EAAE,KAFG;QAGbC,KAAK,EAAE;MAHM,CAhGL;;MAsGV;MACAc,eAAe,EAAE;QACfhB,IAAI,EAAE,QADS;QAEfE,KAAK,EAAE,CAAC,QAAD,EAAW,cAAX,EAA2B,KAA3B;MAFQ,CAvGP;;MA4GV;AACJ;AACA;AACA;MACIe,gBAAgB,EAAE;QAChBjB,IAAI,EAAE,KADU;QAEhBC,QAAQ,EAAE,KAFM;QAGhBC,KAAK,EAAE;MAHS,CAhHR;;MAsHV;AACJ;AACA;MACIgB,gBAAgB,EAAE;QAChBlB,IAAI,EAAE,IADU;QAEhBC,QAAQ,EAAE,KAFM;QAGhBC,KAAK,EAAE;MAHS,CAzHR;;MA+HV;AACJ;AACA;MACIiB,sBAAsB,EAAE;QACtBnB,IAAI,EAAE,KADgB;QAEtBC,QAAQ,EAAE,KAFY;QAGtBC,KAAK,EAAE;MAHe;IAlId,CAZqC;IAqJjDkB,MAAM,EAAE;MACN;AACJ;AACA;AACA;AACA;AACA;MACIC,gBAAgB,EAAE,oBAPZ;;MASN;AACJ;AACA;AACA;AACA;MACIC,kBAAkB,EAAE,qBAdd;;MAgBN;AACJ;AACA;MACIC,kBAAkB,EAAE;IAnBd,CArJyC;IA2KjDC,OAAO,EAAE;MACP;MACAC,QAAc,EAAE,IAFT;;MAIP;MACAC,QAAS,EAAE,IALJ;;MAOP;AACJ;AACA;MACI,MAAMC,IAAN,GAAa,CAAE,CAVR;;MAYP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,mBAAmB,CAACC,KAAD,EAAQ;QACzB,IAAIA,KAAJ,EAAW;UACT,IAAIA,KAAK,CAACA,KAAK,CAACC,MAAN,GAAe,CAAhB,CAAL,IAA2B,GAA/B,EAAoC;YAClCD,KAAK,IAAI,GAAT;UACD;QACF;;QACD,OAAOA,KAAP;MACD,CA1BM;;MA4BP;AACJ;AACA;MACIE,kBAAkB,CAACC,WAAD,EAAc;QAC9B,OACE5C,IAAI,CAAC6C,IAAL,CAAU,KAAKC,YAAL,EAAV,EAA+B,KAAKC,aAAL,CAAmBH,WAAnB,CAA/B,IAAkE,GADpE;MAGD,CAnCM;;MAqCP;AACJ;AACA;AACA;AACA;MACIG,aAAa,CAACH,WAAD,EAAc;QACzB,OAAOA,WAAW,CAACI,aAAZ,MAA+BJ,WAAW,CAACK,OAAZ,EAAtC;MACD,CA5CM;;MA8CP;AACJ;AACA;MACIC,iBAAiB,CAACN,WAAD,EAAc;QAC7B,IAAIO,GAAG,GAAG,KAAKR,kBAAL,CAAwBC,WAAxB,CAAV;QACA,IAAIQ,SAAS,GAAGpD,IAAI,CAACqD,QAAL,CAAcF,GAAd,EAAmB,KAAKL,YAAL,EAAnB,IAA0C,GAA1D;QACA,OAAOM,SAAP;MACD,CArDM;;MAuDP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIE,cAAc,CAACC,QAAD,EAAWC,KAAX,EAAkB;QAC9BD,QAAQ,GAAGvD,IAAI,CAACyD,OAAL,CAAaF,QAAb,CAAX;;QACA,IAAI,KAAKlB,QAAL,KAAwB,IAA5B,EAAkC;UAChC,KAAKA,QAAL,GAAsB,EAAtB;QACD;;QACD,KAAKA,QAAL,CAAoBkB,QAApB,IAAgCC,KAAhC;MACD,CApEM;;MAsEP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIE,cAAc,CAACC,QAAD,EAAW;QACvB,IAAI,KAAKtB,QAAT,EAAyB;UACvB,IAAIuB,WAAW,GAAG5D,IAAI,CAACyD,OAAL,CAAaE,QAAb,CAAlB,CADuB,CAGvB;;UACA,KAAK,IAAIJ,QAAT,IAAqB,KAAKlB,QAA1B,EAA0C;YACxC,IAAIuB,WAAW,CAACC,UAAZ,CAAuBN,QAAvB,CAAJ,EAAsC;cACpC,IAAIC,KAAK,GAAG,KAAKnB,QAAL,CAAoBkB,QAApB,CAAZ;cACAI,QAAQ,GAAGH,KAAK,GAAGI,WAAW,CAACE,SAAZ,CAAsBP,QAAQ,CAACb,MAA/B,CAAnB;cACA,OAAOiB,QAAP;YACD;UACF;QACF;;QAED,OAAO,IAAP;MACD,CA5FM;;MA8FP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACII,QAAQ,CAACJ,QAAD,EAAWK,UAAX,EAAuB;QAC7B,IAAIC,KAAK,GAAG,KAAKP,cAAL,CAAoBC,QAApB,CAAZ;;QACA,IAAIM,KAAK,KAAK,IAAd,EAAoB;UAClB,OAAOA,KAAP;QACD;;QAED,IAAID,UAAJ,EAAgB;UACdL,QAAQ,GAAG3D,IAAI,CAACqD,QAAL,CAAcW,UAAd,EAA0BL,QAA1B,CAAX;QACD;;QAED,OAAOA,QAAP;MACD,CAlHM;;MAoHPO,kBAAkB,CAACC,OAAD,EAAUC,cAAV,EAA0B;QAC1C,IAAIC,aAAa,GAAGrE,IAAI,CAAC6C,IAAL,CAAU,KAAKC,YAAL,EAAV,EAA+B,YAA/B,CAApB;QACA,IAAIwB,OAAO,GAAG,EAAd;QACA,OAAO9E,EAAE,CAACK,IAAH,CAAQC,KAAR,CAAcC,SAAd,CAAwBwE,YAAxB,CAAqCJ,OAArC,EAA8CR,QAAQ,IAC3D/D,EAAE,CACC4E,aADH,CACiBxE,IAAI,CAAC6C,IAAL,CAAUwB,aAAV,EAAyBV,QAAzB,CADjB,EACqD,MADrD,EAEGc,IAFH,CAEQC,IAAI,IAAIJ,OAAO,CAACK,IAAR,CAAaD,IAAb,CAFhB,CADK,EAILD,IAJK,CAIA,MAAM7E,EAAE,CAACgF,cAAH,CAAkBR,cAAlB,EAAkCE,OAAO,CAACzB,IAAR,CAAa,IAAb,CAAlC,CAJN,CAAP;MAKD,CA5HM;;MA8HP;AACJ;AACA;AACA;AACA;AACA;MACI,MAAMgC,mBAAN,CAA0BjC,WAA1B,EAAuC3B,WAAvC,EAAoD;QAClD,IAAI6D,CAAC,GAAG,IAAR;QACA,IAAIzD,QAAQ,GAAGuB,WAAW,CAACmC,WAAZ,EAAf;QACA,IAAIC,EAAE,GAAG3D,QAAQ,CAAC4D,kBAAT,EAAT;QAEA,IAAIC,OAAO,GAAI,KAAK5C,QAAL,GACb,IAAI9C,EAAE,CAACK,IAAH,CAAQsF,QAAR,CAAiBC,OAAjB,CAAyBC,IAAzB,CAA8BC,eAAlC,CAAkD,IAAlD,EAAwD1C,WAAxD,CADF;QAEAsC,OAAO,CAACK,sBAAR,CAA+B,KAAKC,sBAAL,EAA/B;QACA;AACN;AACA;AACA;AACA;AACA;;QACM,IAAIpC,SAAS,GAAG0B,CAAC,CAAC5B,iBAAF,CAAoBN,WAApB,CAAhB;;QACA,IAAI6C,UAAU,GAAG,KAAK9C,kBAAL,CAAwBC,WAAxB,CAAjB;QAEA,IAAIqB,KAAK,GAAG,KAAKP,cAAL,CACV1D,IAAI,CAAC6C,IAAL,CAAU4C,UAAV,EAAsB,KAAK3C,YAAL,EAAtB,EAA2C,aAA3C,CADU,CAAZ;QAIAoC,OAAO,CAACQ,YAAR,CAAqBzB,KAAK,GAAGA,KAAH,GAAWb,SAAS,GAAG,aAAjD;QACAa,KAAK,GAAG,KAAKP,cAAL,CACN1D,IAAI,CAAC6C,IAAL,CAAU4C,UAAV,EAAsB,KAAK3C,YAAL,EAAtB,EAA2C,UAA3C,CADM,CAAR;QAIAoC,OAAO,CAACS,cAAR,CAAuB1B,KAAK,GAAGA,KAAH,GAAWb,SAAS,GAAG,UAAnD;QAEA,MAAMwC,YAAY,GAAGhD,WAAW,CAACiD,oBAAZ,EAArB;QAEA,MAAMrG,EAAE,CAACK,IAAH,CAAQC,KAAR,CAAcgG,KAAd,CAAoBC,QAApB,CAA6BN,UAA7B,CAAN;QAEAP,OAAO,CAACc,cAAR,CAAuB;UACrB,kBAAkBpD,WAAW,CAACqD,YAAZ,EADG;UAErB,eAAe,EAFM;UAGrB,YAAYrD,WAAW,CAACsD,QAAZ,EAHS;UAIrB,cAAc7E,QAAQ,CAAC8E,iBAAT,EAJO;UAKrB,0BAA0B,KAAKC,OAAL,EALL;UAMrB,yBAAyB,KAAKtD,YAAL;QANJ,CAAvB;QASA,IAAIuD,SAAS,GAAG,EAAhB;;QACA,MAAMC,WAAW,GAAG,CAACC,GAAD,EAAM5F,IAAN,KAAe;UACjC,IAAI4F,GAAJ,EAAS;YACPA,GAAG,CAACC,OAAJ,CAAY7C,QAAQ,IAAI;cACtB,IAAI0C,SAAS,CAAC1C,QAAQ,CAAC8C,WAAT,EAAD,CAAb,EAAuC;gBACrC;cACD;;cACDJ,SAAS,CAAC1C,QAAQ,CAAC8C,WAAT,EAAD,CAAT,GAAoC,IAApC;cACA,IAAIC,UAAU,GACZ/F,IAAI,KAAKgD,QAAQ,CAACgD,QAAT,CAAkB,KAAlB,IAA2B,YAA3B,GAA0C,WAA/C,CADN;;cAEA,IAAIhD,QAAQ,CAACiD,KAAT,CAAe,UAAf,CAAJ,EAAgC;gBAC9B1B,OAAO,CAACoB,WAAR,CAAoBI,UAApB,EAAgC/C,QAAhC;cACD,CAFD,MAEO;gBACL,IAAIkD,KAAK,GAAG7B,EAAE,CAAC8B,QAAH,CAAYnD,QAAZ,CAAZ;;gBACA,IAAIkD,KAAJ,EAAW;kBACT,IAAIE,GAAG,GAAGF,KAAK,CAACG,eAAN,CAAsBlC,CAAtB,CAAV;kBACAiC,GAAG,GAAG/G,IAAI,CAACqD,QAAL,CAAcoC,UAAd,EAA0BsB,GAA1B,CAAN;kBACA7B,OAAO,CAAC+B,UAAR,CAAmBP,UAAnB,EAA+BK,GAA/B;gBACD;cACF;YACF,CAjBD;UAkBD;QACF,CArBD;;QAuBAnB,YAAY,CAACY,OAAb,CAAqBU,YAAY,IAAI;UACnC,IAAIC,OAAO,GAAG9F,QAAQ,CAAC+F,WAAT,CAAqBF,YAArB,CAAd;UACAhC,OAAO,CAACmC,UAAR,CAAmBF,OAAnB;;UACA,IAAI,KAAKG,kBAAL,EAAJ,EAA+B;YAC7B,IAAIC,cAAc,GAAGrC,OAAO,CAACsC,mBAAR,CACnB,mBADmB,EAEnB,EAFmB,CAArB;YAKAD,cAAc,CAACL,YAAD,CAAd,GAA+BC,OAAO,CAACM,cAAR,EAA/B;UACD;;UACDnB,WAAW,CAACa,OAAO,CAACO,YAAR,EAAD,EAAyB,YAAzB,CAAX;UACApB,WAAW,CAACa,OAAO,CAACQ,SAAR,EAAD,EAAsB,WAAtB,CAAX;QACD,CAbD;QAeA;AACN;AACA;;QACM,KAAK,IAAIC,IAAT,IAAiB3G,WAAjB,EAA8B;UAC5BiE,OAAO,CAAC2C,mBAAR,CAA4BD,IAA5B,EAAkC3G,WAAW,CAAC2G,IAAD,CAA7C;QACD;;QACD,MAAM9C,CAAC,CAACgD,kBAAF,CAAqB,kBAArB,EAAyC;UAC7ClF,WAAW,EAAEA,WADgC;UAE7C3B,WAAW,EAAEiE,OAAO,CAAC6C,cAAR;QAFgC,CAAzC,CAAN;QAKA;AACN;AACA;;QACM,IAAIC,MAAM,GAAG,IAAIxI,EAAE,CAACK,IAAH,CAAQsF,QAAR,CAAiBC,OAAjB,CAAyBC,IAAzB,CAA8B4C,MAAlC,CAAyC/C,OAAzC,CAAb;QACA,IAAIgD,WAAW,GAAGhD,OAAO,CAACiD,aAAR,EAAlB;QACAjD,OAAO,CAACkD,aAAR,CAAsBJ,MAAtB;QACAE,WAAW,CAACG,iBAAZ,CACE,IAAI7I,EAAE,CAACK,IAAH,CAAQsF,QAAR,CAAiBC,OAAjB,CAAyBC,IAAzB,CAA8BiD,UAAlC,CAA6CpD,OAA7C,CADF,EAjGkD,CAqGlD;;QACA,IAAIA,OAAO,CAACsC,mBAAR,CAA4B,6BAA5B,KAA8D,SAAlE,EAA6E;UAC3EU,WAAW,CAACG,iBAAZ,CACE,IAAI7I,EAAE,CAACK,IAAH,CAAQsF,QAAR,CAAiBC,OAAjB,CAAyBC,IAAzB,CAA8BkD,UAAlC,CAA6CrD,OAA7C,CADF;QAED;QAED;AACN;AACA;;;QACM,IAAIsD,SAAS,GAAG5F,WAAW,CAAC6F,oBAAZ,EAAhB;QACA,IAAIC,WAAW,GACblJ,EAAE,CAACK,IAAH,CAAQsF,QAAR,CAAiBwD,GAAjB,CAAqBC,WAArB,CAAiCC,2BAAjC,CACEjG,WAAW,CAACkG,gBAAZ,EADF,EAEElG,WAAW,CAACmG,gBAAZ,EAFF,CADF;QAMA,IAAIC,WAAW,GAAGd,WAAlB;QACA,IAAIe,QAAQ,GAAG;UACbC,IAAI,EAAEhB;QADO,CAAf;QAIAM,SAAS,CAAChC,OAAV,CAAkB,CAAC2C,QAAD,EAAWC,KAAX,KAAqB;UACrC,IAAIC,QAAQ,GAAGnE,OAAO,CAACoE,UAAR,CAAmBH,QAAQ,CAACvB,IAA5B,CAAf;;UACA,IAAIwB,KAAK,IAAI,CAAb,EAAgB;YACdC,QAAQ,CAACE,UAAT,CAAoBrB,WAApB;UACD;;UAEDiB,QAAQ,CAAChF,OAAT,CAAiBqC,OAAjB,CAAyBgD,SAAS,IAAI;YACpC,IAAIC,aAAa,GAAGD,SAAS,CAACE,OAAV,CAAkB,KAAlB,EAAyB,GAAzB,IAAgC,KAApD;YAEA,IAAIC,uBAAuB,GAAG3J,IAAI,CAAC6C,IAAL,CAC5B,KAAKC,YAAL,EAD4B,EAE5B,YAF4B,EAG5B2G,aAH4B,CAA9B;YAMA,IAAIG,EAAE,GAAGvI,QAAQ,CAACwI,WAAT,EAAT;YACA,IAAIC,WAAW,GAAGF,EAAE,CAACG,SAAH,CAAaP,SAAb,CAAlB;YACA,IAAIrC,OAAO,GAAG9F,QAAQ,CAAC+F,WAAT,CAAqB0C,WAAW,CAACE,WAAjC,CAAd;YACA,IAAIC,UAAU,GAAG9C,OAAO,CAAC+C,WAAR,CAAoBT,aAApB,CAAjB;YACA,IAAIU,MAAM,GAAG,IAAI3K,EAAE,CAACK,IAAH,CAAQsF,QAAR,CAAiBC,OAAjB,CAAyBC,IAAzB,CAA8B+E,UAAlC,CACXlF,OADW,EAEXyE,uBAFW,EAGXM,UAHW,CAAb;YAMA,IAAII,WAAW,GAAG3B,WAAW,CAACc,SAAD,CAAX,GAAyB,UAAzB,GAAsCL,QAAQ,CAACvB,IAAjE;YACA,IAAI0C,GAAG,GAAGrB,QAAQ,CAACoB,WAAD,CAAlB;;YAEA,IAAI,CAACC,GAAD,IAAQA,GAAG,KAAKtB,WAApB,EAAiC;cAC/BsB,GAAG,GAAGrB,QAAQ,CAACoB,WAAD,CAAR,GAAwBnF,OAAO,CAACiD,aAAR,EAA9B;;cACA,IAAIkC,WAAW,IAAI,UAAnB,EAA+B;gBAC7BC,GAAG,CAACC,qBAAJ,CAA0B,IAA1B;cACD;;cACDlB,QAAQ,CAACE,UAAT,CAAoBe,GAApB;YACD;;YACD,IAAIR,WAAW,CAACzD,SAAhB,EAA2B;cACzBC,WAAW,CAACwD,WAAW,CAACzD,SAAb,CAAX;YACD;;YACDiE,GAAG,CAACjC,iBAAJ,CAAsB8B,MAAtB;YACAG,GAAG,CAACE,YAAJ,CAAiBhB,SAAjB;YACAR,WAAW,GAAGsB,GAAd;UACD,CAnCD;QAoCD,CA1CD;QA4CA,IAAIG,SAAS,GAAG7H,WAAW,CAAC8H,YAAZ,CAAyB5F,CAAzB,EAA4BE,EAA5B,EAAgCE,OAAO,CAAC6C,cAAR,EAAhC,CAAhB,CAtKkD,CAsKyB;;QAC3E,MAAM/C,EAAE,CAAC2F,YAAH,EAAN;QAEA,IAAIC,QAAQ,GAAG,CACbvJ,QAAQ,CAACwJ,OAAT,CAAiB,IAAjB,EAAuBpG,IAAvB,CAA4BqG,IAAI,IAAI5C,WAAW,CAAC6C,SAAZ,CAAsB,GAAtB,EAA2BD,IAA3B,CAApC,CADa,EAEbhG,CAAC,CAACkG,kBAAF,EAFa,CAAf;QAKA,IAAIC,QAAQ,GAAG,CAAf;QACA,IAAIC,MAAM,GAAG,EAAb;QACAlG,EAAE,CAACmG,iBAAH,CAAqBV,SAArB,EAAgCjE,OAAhC,CAAwCK,KAAK,IAAI;UAC/CqB,WAAW,CAACkD,QAAZ,CAAqBvE,KAArB;UACAqE,MAAM,CAACrE,KAAK,CAACqD,WAAN,EAAD,CAAN,GAA8BrD,KAAK,CAACwE,QAAN,EAA9B;QACD,CAHD;;QAKA,IAAIhK,QAAQ,CAACiK,mBAAT,GAA+BC,OAA/B,CAAuC,SAAvC,IAAoD,CAAC,CAAzD,EAA4D;UAC1D;UACA;UACA;UACA;UACA;UACA,IAAIC,UAAU,GAAGtG,OAAO,CAACuG,aAAR,EAAjB;UACA,IAAIC,WAAW,GAAG,EAAlB;;UACA,MAAMC,eAAe,GAAGxE,OAAO,IAAI;YACjC,IAAIyE,KAAK,GAAGzE,OAAO,CAAC0E,WAAR,EAAZ;;YACA,IAAI,CAACD,KAAL,EAAY;cACV;YACD;;YACDA,KAAK,CAACpF,OAAN,CAAcsF,IAAI,IAAI;cACpBJ,WAAW,CAACI,IAAI,CAAC7I,OAAL,EAAD,CAAX,GAA8B;gBAC5B6I,IAD4B;gBAE5B3E;cAF4B,CAA9B;YAID,CALD;UAMD,CAXD;;UAYAvB,YAAY,CAACY,OAAb,CAAqBU,YAAY,IAAI;YACnC,IAAIC,OAAO,GAAG9F,QAAQ,CAAC+F,WAAT,CAAqBF,YAArB,CAAd;;YACA,IAAIC,OAAO,IAAIqE,UAAf,EAA2B;cACzBG,eAAe,CAACxE,OAAD,CAAf;YACD;UACF,CALD;UAMAwE,eAAe,CAACH,UAAD,CAAf;;UAEA,MAAMO,QAAQ,GAAG,OAAO5E,OAAP,EAAgB2E,IAAhB,KAAyB;YACxC,IAAI;cACF;cACA,IAAIE,GAAG,GAAGF,IAAI,CAACG,YAAL,GAAoBC,MAApB,CAA2BF,GAAG,IAAId,MAAM,CAACc,GAAD,CAAxC,CAAV;;cACA,IAAIA,GAAG,CAACtJ,MAAJ,KAAe,CAAnB,EAAsB;gBACpBlD,EAAE,CAACK,IAAH,CAAQsF,QAAR,CAAiBgH,OAAjB,CAAyBC,KAAzB,CACE,uCADF,EAEEN,IAAI,CAACT,QAAL,EAFF,EAGEzI,WAAW,CAACK,OAAZ,EAHF,EAIE6I,IAAI,CAACG,YAAL,GAAoBpJ,IAApB,CAAyB,GAAzB,CAJF;gBAOA;cACD;;cACDiJ,IAAI,CAACO,YAAL,CAAkBL,GAAlB;cAEA,MAAMF,IAAI,CAACQ,iBAAL,CAAuBxH,CAAvB,CAAN;cACA,IAAIyH,SAAS,GAAG,MAAMT,IAAI,CAACU,sBAAL,CAA4B1H,CAA5B,EAA+BlC,WAA/B,CAAtB;;cACA,KAAK,IAAI6J,GAAT,IAAgBF,SAAhB,EAA2B;gBACzBrH,OAAO,CAACwH,WAAR,CAAoBD,GAApB,EAAyBF,SAAS,CAACE,GAAD,CAAlC;cACD;;cACD,IAAI/H,IAAI,GAAGoH,IAAI,CAACa,gBAAL,CAAsB7H,CAAtB,EAAyBlC,WAAzB,EAAsCqI,QAAQ,MAAM,CAApD,CAAX;;cACA,IAAIvG,IAAJ,EAAU;gBACRQ,OAAO,CAAC0H,cAAR,CAAuBlI,IAAvB;cACD;YACF,CAxBD,CAwBE,OAAOmI,EAAP,EAAW;cACXrN,EAAE,CAACK,IAAH,CAAQsF,QAAR,CAAiBgH,OAAjB,CAAyBC,KAAzB,CACE,iCADF,EAEEN,IAAI,CAACT,QAAL,EAFF,EAGEwB,EAAE,CAACxB,QAAH,EAHF;YAKD;UACF,CAhCD;;UAkCA/K,MAAM,CAACwM,IAAP,CAAYpB,WAAZ,EAAyBlF,OAAzB,CAAiCuG,QAAQ,IAAI;YAC3C,IAAI;cAAEjB,IAAF;cAAQ3E;YAAR,IAAoBuE,WAAW,CAACqB,QAAD,CAAnC;YACAnC,QAAQ,CAACjG,IAAT,CAAcoH,QAAQ,CAAC5E,OAAD,EAAU2E,IAAV,CAAtB;UACD,CAHD;QAID;;QACD,MAAMtM,EAAE,CAACwN,OAAH,CAAWC,GAAX,CAAerC,QAAf,CAAN;QACA,MAAM9F,CAAC,CAACoI,iBAAF,EAAN;QACA,KAAK5K,QAAL,GAAiB,IAAjB;MACD,CA/XM;;MAiYP;AACJ;AACA;MACI,MAAM0I,kBAAN,GAA2B;QACzB,IAAI9F,OAAO,GAAG,KAAKiI,UAAL,EAAd;QACA,MAAM9L,QAAQ,GAAG6D,OAAO,CAACH,WAAR,EAAjB;;QACA,IAAI,KAAKqI,eAAL,EAAJ,EAA4B;UAC1B,IAAIC,MAAM,GAAG,KAAKC,kBAAL,EAAb;;UACA,IAAID,MAAM,IAAI,QAAd,EAAwB;YACtB,MAAMhM,QAAQ,CAACkM,kBAAT,CACJrI,OAAO,CAACuG,aAAR,EADI,EAEJ,KAAK+B,UAAL,EAFI,EAGJtI,OAAO,CAACuI,YAAR,EAHI,EAIJJ,MAAM,IAAI,KAJN,CAAN;UAMD,CAPD,MAOO;YACL,MAAMhM,QAAQ,CAACkM,kBAAT,CACJrI,OAAO,CAACuG,aAAR,EADI,EAEJ,KAAK+B,UAAL,EAFI,EAGJ,IAHI,EAIJ,KAJI,CAAN;UAMD;QACF;;QAED,MAAM,KAAKE,aAAL,EAAN;;QACA,IAAI,KAAKC,uBAAL,EAAJ,EAAoC;UAClC,MAAM,KAAKC,qBAAL,EAAN;QACD,CAFD,MAEO;UACL,MAAM,KAAKC,0BAAL,EAAN;QACD;MACF,CAhaM;;MAkaP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,iBAAiB,CAACrL,KAAD,EAAQ;QACvB,IAAI,CAACA,KAAL,EAAY;UACV,OAAOA,KAAP;QACD;;QACD,OAAOA,KAAK,CAACsL,GAAN,CAAUC,QAAQ,IAAI;UAC3BA,QAAQ,GAAGA,QAAQ,CAACvH,WAAT,EAAX;UACA,IAAIwH,GAAG,GAAGD,QAAQ,CAACzC,OAAT,CAAiB,GAAjB,CAAV;;UACA,IAAI0C,GAAG,GAAG,CAAC,CAAX,EAAc;YACZD,QAAQ,GACNA,QAAQ,CAAClK,SAAT,CAAmB,CAAnB,EAAsBmK,GAAtB,IAA6BD,QAAQ,CAAClK,SAAT,CAAmBmK,GAAnB,EAAwBC,WAAxB,EAD/B;UAED;;UACD,OAAOF,QAAP;QACD,CARM,CAAP;MASD,CAtbM;;MAwbP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACI,MAAMN,aAAN,GAAsB;QACpB,IAAI5I,CAAC,GAAG,IAAR;QACA,IAAII,OAAO,GAAG,KAAKiI,UAAL,EAAd;QACA,IAAI9L,QAAQ,GAAG6D,OAAO,CAACH,WAAR,EAAf;QACA,IAAImD,WAAW,GAAGhD,OAAO,CAACiJ,WAAR,GAAsB,CAAtB,CAAlB;;QAEA,SAASC,cAAT,CAAwBJ,QAAxB,EAAkC;UAChC,IAAIK,YAAY,GAAG,IAAnB;;UAEA,SAASC,cAAT,CAAwBN,QAAxB,EAAkC;YAChC,OAAO3M,QAAQ,CAACwJ,OAAT,CAAiBmD,QAAjB,EAA2BvJ,IAA3B,CAAgCqG,IAAI,IAAI;cAC7C,IAAI,CAACuD,YAAL,EAAmB;gBACjBA,YAAY,GAAGvD,IAAf;cACD,CAFD,MAEO;gBACL,KAAK,IAAIlD,IAAT,IAAiBkD,IAAjB,EAAuB;kBACrB,IAAIrI,KAAK,GAAG4L,YAAY,CAACzG,IAAD,CAAxB;;kBACA,IAAInF,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK8L,SAAhC,EAA2C;oBACzCF,YAAY,CAACzG,IAAD,CAAZ,GAAqBkD,IAAI,CAAClD,IAAD,CAAzB;kBACD;gBACF;cACF;;cACD,IAAI4G,cAAc,GAChBhP,EAAE,CAACK,IAAH,CAAQsF,QAAR,CAAiBwD,GAAjB,CAAqB8F,IAArB,CAA0BC,eAA1B,CAA0CV,QAA1C,CADF;;cAEA,IAAIQ,cAAJ,EAAoB;gBAClB,OAAOF,cAAc,CAACE,cAAD,CAArB;cACD;;cACD,OAAOH,YAAP;YACD,CAjBM,CAAP;UAkBD;;UAED,OAAOC,cAAc,CAACN,QAAD,CAArB;QACD;;QAED,IAAIpD,QAAQ,GAAG9F,CAAC,CAAC0I,UAAF,GAAeO,GAAf,CAAmB,MAAMC,QAAN,IAAkB;UAClD,IAAIlD,IAAI,GAAG,MAAMsD,cAAc,CAACJ,QAAD,CAA/B;UACA,IAAI1D,GAAG,GAAG,KAAKqE,aAAL,KACNzJ,OAAO,CAAC0J,gBAAR,CAAyBZ,QAAzB,CADM,GAEN9F,WAFJ;UAGAoC,GAAG,CAACS,SAAJ,CAAciD,QAAd,EAAwBlD,IAAxB;QACD,CANc,CAAf;QAQA,MAAMtL,EAAE,CAACwN,OAAH,CAAWC,GAAX,CAAerC,QAAf,CAAN;MACD,CA1eM;;MA4eP;AACJ;AACA;MACI,MAAMgD,qBAAN,GAA8B;QAC5B,IAAI9I,CAAC,GAAG,IAAR;QACA,IAAII,OAAO,GAAG,KAAKiI,UAAL,EAAd;QACA,IAAI9L,QAAQ,GAAG6D,OAAO,CAACH,WAAR,EAAf;QACA,IAAImD,WAAW,GAAGhD,OAAO,CAACiJ,WAAR,GAAsB,CAAtB,CAAlB;QACA,IAAIU,YAAY,GAAG,EAAnB;QACA,IAAIjE,QAAQ,GAAG,EAAf;QACA9F,CAAC,CAAC0I,UAAF,GAAehH,OAAf,CAAuBwH,QAAQ,IAAI;UACjC,IAAI1D,GAAG,GAAG,KAAKqE,aAAL,KACNzJ,OAAO,CAAC0J,gBAAR,CAAyBZ,QAAzB,CADM,GAEN9F,WAFJ;;UAGA,SAAS4G,QAAT,CAAkB3H,OAAlB,EAA2B6G,QAA3B,EAAqC;YACnC,OAAO3M,QAAQ,CACZ0N,cADI,CACW5H,OADX,EACoB6G,QADpB,EAEJvJ,IAFI,CAECuK,WAAW,IAAI;cACnB,IAAIC,EAAE,GAAG9H,OAAO,CAAC+H,YAAR,KAAyB,GAAzB,GAA+BlB,QAAxC;cACAa,YAAY,CAACI,EAAD,CAAZ,GAAmBD,WAAnB;cACA,IAAIG,OAAO,GAAGH,WAAW,CAACI,UAAZ,EAAd;;cACA,KAAK,IAAIC,KAAT,IAAkBF,OAAlB,EAA2B;gBACzB7E,GAAG,CAACgF,mBAAJ,CAAwBtB,QAAxB,EAAkCmB,OAAO,CAACE,KAAD,CAAzC;cACD;YACF,CATI,CAAP;UAUD;;UACDnK,OAAO,CAACuI,YAAR,GAAuBjH,OAAvB,CAA+B,UAAUW,OAAV,EAAmB;YAChD,IAAIA,OAAO,KAAKjC,OAAO,CAACuG,aAAR,EAAhB,EAAyC;cACvC;YACD;;YACDb,QAAQ,CAACjG,IAAT,CAAcmK,QAAQ,CAAC3H,OAAD,EAAU6G,QAAV,CAAtB;UACD,CALD,EAhBiC,CAsBjC;;UACApD,QAAQ,CAACjG,IAAT,CAAcmK,QAAQ,CAAC5J,OAAO,CAACuG,aAAR,EAAD,EAA0BuC,QAA1B,CAAtB;QACD,CAxBD;QAyBA,MAAMxO,EAAE,CAACwN,OAAH,CAAWC,GAAX,CAAerC,QAAf,CAAN;MACD,CAhhBM;;MAkhBP;AACJ;AACA;MACI,MAAMiD,0BAAN,GAAmC;QACjC,IAAI/I,CAAC,GAAG,IAAR;QACA,IAAII,OAAO,GAAG,KAAKiI,UAAL,EAAd;QACA,IAAI9L,QAAQ,GAAG6D,OAAO,CAACH,WAAR,EAAf;QACA,IAAI6E,EAAE,GAAGvI,QAAQ,CAACwI,WAAT,EAAT;QACA,IAAI3B,WAAW,GAAGhD,OAAO,CAACiJ,WAAR,GAAsB,CAAtB,CAAlB;QAEA,IAAIU,YAAY,GAAG,EAAnB;QACA,IAAIjE,QAAQ,GAAG,EAAf;QACA9F,CAAC,CAAC0I,UAAF,GAAehH,OAAf,CAAuBwH,QAAQ,IAAI;UACjC,IAAI1D,GAAG,GAAG,KAAKqE,aAAL,KACNzJ,OAAO,CAAC0J,gBAAR,CAAyBZ,QAAzB,CADM,GAEN9F,WAFJ;UAGAhD,OAAO,CAACuI,YAAR,GAAuBjH,OAAvB,CAA+B,UAAUW,OAAV,EAAmB;YAChDyD,QAAQ,CAACjG,IAAT,CACEtD,QAAQ,CAAC0N,cAAT,CAAwB5H,OAAxB,EAAiC6G,QAAjC,EAA2CvJ,IAA3C,CAAgDuK,WAAW,IAAI;cAC7D,IAAIC,EAAE,GAAG9H,OAAO,CAAC+H,YAAR,KAAyB,GAAzB,GAA+BlB,QAAxC;cACAa,YAAY,CAACI,EAAD,CAAZ,GAAmBD,WAAnB;cACA,IAAIO,KAAK,GAAGP,WAAW,CAACQ,QAAZ,CAAqB,EAArB,CAAZ;;cACA,IAAID,KAAJ,EAAW;gBACTjF,GAAG,CAACgF,mBAAJ,CAAwBtB,QAAxB,EAAkCuB,KAAlC;cACD;YACF,CAPD,CADF;UAUD,CAXD;QAYD,CAhBD;QAiBA,MAAM/P,EAAE,CAACwN,OAAH,CAAWC,GAAX,CAAerC,QAAf,CAAN;QAEA1F,OAAO,CAACiJ,WAAR,GAAsB3H,OAAtB,CAA8B8D,GAAG,IAAI;UACnCA,GAAG,CAACmF,aAAJ,GAAoBjJ,OAApB,CAA4BgD,SAAS,IAAI;YACvC,IAAIM,WAAW,GAAGF,EAAE,CAACG,SAAH,CAAaP,SAAb,CAAlB;;YACA,IAAI,CAACM,WAAW,CAAC+E,YAAjB,EAA+B;cAC7B;YACD;;YACD/J,CAAC,CAAC0I,UAAF,GAAehH,OAAf,CAAuBwH,QAAQ,IAAI;cACjC,IAAI0B,SAAS,GAAG,KAAKf,aAAL,KACZzJ,OAAO,CAAC0J,gBAAR,CAAyBZ,QAAzB,CADY,GAEZ1D,GAFJ;cAGAR,WAAW,CAAC+E,YAAZ,CAAyBrI,OAAzB,CAAiCmJ,SAAS,IAAI;gBAC5C,IAAIJ,KAAJ;gBACA,IAAIN,EAAE,GAAG/J,OAAO,CAACuG,aAAR,GAAwByD,YAAxB,KAAyC,GAAzC,GAA+ClB,QAAxD,CAF4C,CAG5C;;gBACA,IAAIgB,WAAW,GAAGH,YAAY,CAACI,EAAD,CAA9B;;gBACA,IAAID,WAAJ,EAAiB;kBACfO,KAAK,GAAGP,WAAW,CAACQ,QAAZ,CAAqBG,SAAS,CAACN,KAA/B,CAAR;gBACD;;gBACD,IAAIO,KAAK,GAAG9F,WAAW,CAACE,WAAZ,GAA0B,GAA1B,GAAgCgE,QAA5C;;gBACA,IAAI,CAACuB,KAAD,IAAUN,EAAE,KAAKW,KAArB,EAA4B;kBAC1B,IAAIZ,WAAW,GAAGH,YAAY,CAACe,KAAD,CAA9B;;kBACA,IAAIZ,WAAJ,EAAiB;oBACfO,KAAK,GAAGP,WAAW,CAACQ,QAAZ,CAAqBG,SAAS,CAACN,KAA/B,CAAR;kBACD;gBACF;;gBACD,IAAIE,KAAJ,EAAW;kBACTG,SAAS,CAACJ,mBAAV,CAA8BtB,QAA9B,EAAwCuB,KAAxC;gBACD;cACF,CAlBD;YAmBD,CAvBD;UAwBD,CA7BD;QA8BD,CA/BD;MAgCD,CAjlBM;;MAmlBP;AACJ;AACA;MACI,MAAMrC,iBAAN,GAA0B;QACxB,IAAIpI,CAAC,GAAG,IAAR;QAEA,MAAM,KAAK+K,cAAL,CAAoB,oBAApB,CAAN;QAEA,IAAI3K,OAAO,GAAG,KAAKiI,UAAL,EAAd;QACA,IAAIvK,WAAW,GAAGsC,OAAO,CAAC4K,cAAR,EAAlB;QACA,IAAIrK,UAAU,GAAGP,OAAO,CAACvC,kBAAR,EAAjB;;QAEA,IAAI,CAACuC,OAAO,CAACuG,aAAR,EAAL,EAA8B;UAC5BjM,EAAE,CAACK,IAAH,CAAQsF,QAAR,CAAiBgH,OAAjB,CAAyBC,KAAzB,CACE,2CADF,EAEExJ,WAAW,CAACK,OAAZ,EAFF;UAKA;QACD;;QAED,IAAI8M,QAAQ,GAAG7K,OAAO,CAAC8K,aAAR,EAAf;;QACA,KAAK,IAAIzJ,GAAG,GAAGrB,OAAO,CAACiJ,WAAR,EAAV,EAAiC8B,CAAC,GAAG,CAA1C,EAA6CA,CAAC,GAAG1J,GAAG,CAAC7D,MAArD,EAA6DuN,CAAC,EAA9D,EAAkE;UAChE,IAAI3F,GAAG,GAAG/D,GAAG,CAAC0J,CAAD,CAAb;;UACA,IAAI3F,GAAG,CAAC4F,OAAJ,EAAJ,EAAmB;YACjB5F,GAAG,CAAC6F,mBAAJ,CAAwB,KAAxB;YACAJ,QAAQ,CAACK,aAAT,CAAuB9F,GAAG,CAAC+F,aAAJ,EAAvB;UACD;;UACD,MAAM/F,GAAG,CAAC+F,aAAJ,GAAoBC,MAApB,GAA6BC,WAA7B,EAAN;QACD;;QAED,MAAMrL,OAAO,CAAC8K,aAAR,GAAwBM,MAAxB,GAAiCC,WAAjC,EAAN;QAEA,MAAM,KAAKC,eAAL,EAAN;;QAEA,IAAI,CAAC1L,CAAC,CAAC2L,kBAAF,EAAL,EAA6B;UAC3B,MAAM,KAAKZ,cAAL,CAAoB,oBAApB,CAAN;UACA;QACD;;QAED,IAAI3H,WAAW,GAAGhD,OAAO,CAACiJ,WAAR,GAAsB,CAAtB,CAAlB;QACA,IAAIuC,UAAU,GAAG;UACfC,QAAQ,EAAE/N,WAAW,CAACqD,YAAZ,EADK;UAEf2K,SAAS,EAAE1L,OAAO,CAACuI,YAAR,GAAuBM,GAAvB,CAA2B8C,GAAG,IAAIA,GAAG,CAAC3B,YAAJ,EAAlC,CAFI;UAGf4B,KAAK,EAAE,EAHQ;UAIfvE,SAAS,EAAErE,WAAW,CAAC6I,SAAZ,GAAwBhD,GAAxB,CAA4BlH,KAAK,IAAIA,KAAK,CAACqD,WAAN,EAArC,CAJI;UAKf1I,OAAO,EAAE,KAAKgM,UAAL,EALM;UAMfvM,WAAW,EAAEiE,OAAO,CAAC6C,cAAR,EANE;UAOfiJ,UAAU,EAAE9L,OAAO,CAAC+L,WAAR,GAAsBD,UAPnB;UAQfE,SAAS,EAAEhM,OAAO,CAAC+L,WAAR,GAAsBC;QARlB,CAAjB;QAWAtO,WAAW,CAAC6F,oBAAZ,GAAmCjC,OAAnC,CAA2C2C,QAAQ,IAAI;UACrDuH,UAAU,CAACI,KAAX,CAAiBnM,IAAjB,CAAsB;YACpBR,OAAO,EAAEgF,QAAQ,CAAChF,OADE;YAEpBgN,OAAO,EAAEhI,QAAQ,CAACgI,OAFE;YAGpBC,OAAO,EAAEjI,QAAQ,CAACiI,OAHE;YAIpBC,MAAM,EAAElI,QAAQ,CAACkI,MAJG;YAKpBzJ,IAAI,EAAEuB,QAAQ,CAACvB;UALK,CAAtB;QAOD,CARD;QAUA,MAAMhI,EAAE,CAACgF,cAAH,CACJa,UAAU,GAAG,oBADT,EAEJ6L,IAAI,CAACC,SAAL,CAAeb,UAAf,EAA2B,IAA3B,EAAiC,CAAjC,IAAsC,IAFlC,EAGJ;UAAEc,QAAQ,EAAE;QAAZ,CAHI,CAAN;QAMA,MAAM,KAAK3B,cAAL,CAAoB,oBAApB,CAAN;MACD,CAxpBM;;MA0pBP;AACJ;AACA;MACI,MAAMW,eAAN,GAAwB;QACtB,IAAI1L,CAAC,GAAG,IAAR;QACA,IAAII,OAAO,GAAG,KAAKiI,UAAL,EAAd;QACA,IAAIvK,WAAW,GAAGsC,OAAO,CAAC4K,cAAR,EAAlB;;QAEA,IAAI,CAAClN,WAAW,CAAC6O,YAAZ,EAAL,EAAiC;UAC/B;QACD;;QAED,IAAI,CAAC,KAAKC,mBAAL,EAAL,EAAiC;UAC/B;QACD;;QAED,IAAIC,MAAM,GAAG,KAAKhP,kBAAL,CAAwBC,WAAxB,CAAb;QAEA,IAAIgP,SAAS,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAhB;QACA,IAAIC,YAAY,GACd/R,IAAI,CAACqD,QAAL,CACErD,IAAI,CAAC6C,IAAL,CAAUiC,CAAC,CAAChC,YAAF,EAAV,EAA4BgC,CAAC,CAAC/B,aAAF,CAAgBH,WAAhB,CAA5B,CADF,EAEEkC,CAAC,CAAChC,YAAF,EAFF,IAGI,GAJN;QAKA,IAAIkP,gBAAgB,GAAG,EAAvB;;QACA,IAAI,KAAKC,qBAAL,EAAJ,EAAkC;UAChC,IAAIC,eAAe,GAAGlS,IAAI,CAAC6C,IAAL,CACpBqC,OAAO,CAACvC,kBAAR,EADoB,EAEpB,UAFoB,CAAtB;UAKAqP,gBAAgB,GAAG,MAAMpS,EAAE,CAACuS,QAAH,CAAYD,eAAZ,EAA6BE,OAAtD;QACD;;QACD,IAAIC,aAAa,GAAG;UAClBC,YAAY,EAAEP,YAAY,GAAG,WADX;UAElBQ,UAAU,EAAER,YAFM;UAGlBS,OAAO,EAAE,EAHS;UAIlBC,SAAS,EAAE,EAJO;UAKlBC,QAAQ,EAAE9P,WAAW,CAAC+P,QAAZ,MAA0B,qBALlB;UAMlBf,SAAS,EAAEA,SANO;UAOlBI,gBAAgB,EAAEA;QAPA,CAApB;;QAUA,SAASY,WAAT,CAAqBlO,IAArB,EAA2B;UACzB,KAAK,IAAImO,OAAT,IAAoBR,aAApB,EAAmC;YACjC3N,IAAI,GAAGA,IAAI,CAACgF,OAAL,CACL,IAAIoJ,MAAJ,CAAY,QAAOD,OAAQ,IAA3B,EAAgC,GAAhC,CADK,EAELR,aAAa,CAACQ,OAAD,CAFR,CAAP;UAID;;UACD,OAAOnO,IAAP;QACD;QACD;;;QACA,IAAIqO,gBAAgB,oeAApB;QAeA;;QACA,IAAIC,OAAO,GAAGpQ,WAAW,CAACqQ,WAAZ,EAAd;QACA,IAAIC,SAAS,GAAG,IAAhB;;QACA,IAAIF,OAAJ,EAAa;UACXA,OAAO,GAAGhT,IAAI,CAAC6C,IAAL,CACRqC,OAAO,CAACuG,aAAR,GAAwB0H,UAAxB,EADQ,EAERvQ,WAAW,CAACqQ,WAAZ,EAFQ,CAAV;UAKA,IAAIG,KAAK,GAAG,MAAM5T,EAAE,CAACK,IAAH,CAAQC,KAAR,CAAcuT,KAAd,CAAoBvN,KAApB,CAA0BwN,QAA1B,CAAmCN,OAAnC,CAAlB;;UACA,IAAII,KAAK,IAAIA,KAAK,CAACG,WAAN,EAAb,EAAkC;YAChC,MAAM/T,EAAE,CAACK,IAAH,CAAQC,KAAR,CAAcuT,KAAd,CAAoBvN,KAApB,CAA0B0N,IAA1B,CACJR,OADI,EAEJrB,MAFI,EAGJ,OAAO8B,IAAP,EAAaC,EAAb,KAAoB;cAClB,IAAI,CAACD,IAAI,CAAC9M,QAAL,CAAc,OAAd,CAAL,EAA6B;gBAC3B,OAAO,IAAP;cACD;;cACD,IAAIgN,IAAI,GAAG,MAAM/T,EAAE,CAAC4E,aAAH,CAAiBiP,IAAjB,EAAuB,MAAvB,CAAjB;;cACA,IAAIzT,IAAI,CAAC4T,QAAL,CAAcH,IAAd,KAAuB,YAA3B,EAAyC;gBACvC,IAAI,CAACE,IAAI,CAAC/M,KAAL,CAAW,uBAAX,CAAL,EAA0C;kBACxC;kBACA+M,IAAI,GAAGA,IAAI,CAACjK,OAAL,CAAa,SAAb,EAAwB,yBAAxB,CAAP;kBACA;;kBACAlK,EAAE,CAACK,IAAH,CAAQsF,QAAR,CAAiBgH,OAAjB,CAAyBC,KAAzB,CACE,0CADF,EAEEqH,IAFF;gBAID;;gBACD,IAAI,CAACE,IAAI,CAAC/M,KAAL,CAAW,gBAAX,CAAL,EAAmC;kBACjC;kBACA+M,IAAI,GAAGA,IAAI,CAACjK,OAAL,CACL,SADK,EAEL,mGAFK,CAAP;kBAKA;;kBACAlK,EAAE,CAACK,IAAH,CAAQsF,QAAR,CAAiBgH,OAAjB,CAAyBC,KAAzB,CACE,uCADF,EAEEqH,IAFF;gBAID;;gBACDP,SAAS,GAAGS,IAAZ;cACD;;cACDA,IAAI,GAAGf,WAAW,CAACe,IAAD,CAAlB;cACA,MAAM/T,EAAE,CAACgF,cAAH,CAAkB8O,EAAlB,EAAsBC,IAAtB,EAA4B,MAA5B,CAAN;cACA,OAAO,KAAP;YACD,CApCG,CAAN;UAsCD;QACF;;QACD,IAAI,CAACT,SAAL,EAAgB;UACdA,SAAS,GAAGH,gBAAZ;UACA,MAAMnT,EAAE,CAACgF,cAAH,CAAkB+M,MAAM,GAAG,YAA3B,EAAyCiB,WAAW,CAACM,SAAD,CAApD,EAAiE;YACrE1B,QAAQ,EAAE;UAD2D,CAAjE,CAAN;QAGD;;QAED,IAAI5O,WAAW,CAACiR,uBAAZ,EAAJ,EAA2C;UACzC9B,YAAY,GAAG,EAAf;UACAM,aAAa,GAAG;YACdC,YAAY,EAAE,WADA;YAEdC,UAAU,EAAE,EAFE;YAGdC,OAAO,EAAE1N,CAAC,CAAC/B,aAAF,CAAgBH,WAAhB,IAA+B,GAH1B;YAId6P,SAAS,EAAE,EAJG;YAKdC,QAAQ,EAAE9P,WAAW,CAAC+P,QAAZ,MAA0B,qBALtB;YAMdf,SAAS,EAAEA,SANG;YAOdI,gBAAgB,EAAEA;UAPJ,CAAhB;UAUA,MAAMpS,EAAE,CAACgF,cAAH,CACJE,CAAC,CAAChC,YAAF,KAAmB,YADf,EAEJ8P,WAAW,CAACM,SAAD,CAFP,EAGJ;YAAE1B,QAAQ,EAAE;UAAZ,CAHI,CAAN;QAKD;MACF,CA1yBM;;MA4yBPrE,UAAU,GAAG;QACX,OAAO,KAAK7K,QAAZ;MACD;;IA9yBM;EA3KwC,CAAnD;EA9BA9C,EAAE,CAACK,IAAH,CAAQsF,QAAR,CAAiBC,OAAjB,CAAyB0O,MAAzB,CAAgCnU,aAAhC,GAAgDA,aAAhD"
}